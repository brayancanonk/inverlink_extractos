{
  "createdAt": "2024-09-24T23:42:48.435Z",
  "updatedAt": "2024-11-05T17:14:59.020Z",
  "id": "VQbxRZWUO1457UNO",
  "name": "Accounting Records v3",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "31238a60-30f9-402f-992f-a40f46866daf",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -6253,
        1660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "cb8215b3-b748-49ae-a7cb-1321694fb6bb",
              "leftValue": "={{ $json.mimeType }}",
              "rightValue": "xml",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "id": "9987c823-ba92-4706-a918-599d919b1d8b",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -4060,
        1680
      ]
    },
    {
      "parameters": {
        "operation": "xml",
        "options": {}
      },
      "id": "ad5b4502-50e9-4e64-a064-9c2d27d96808",
      "name": "XML Data",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3660,
        1580
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "e61b157e-9949-479b-81f5-378e58ab93e8",
      "name": "Get Files / XML",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -3860,
        1580
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "wdsP0R2suhB5uk31",
          "name": "Google Drive H&F"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $('List Files').item.json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1o1Gd60RuWV_BDNGoaElP-FV2z8ERSMkw",
          "mode": "list",
          "cachedResultName": "Extracted",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1o1Gd60RuWV_BDNGoaElP-FV2z8ERSMkw"
        }
      },
      "id": "3c4f9031-a21b-47f6-8176-c2b4ef651e6a",
      "name": "Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        5120,
        2000
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "wdsP0R2suhB5uk31",
          "name": "Google Drive H&F"
        }
      }
    },
    {
      "parameters": {
        "tableId": "Invoices_n8n",
        "dataToSend": "autoMapInputData"
      },
      "id": "eb321d7d-03a0-4b19-9e61-432e838dcc8b",
      "name": "InvoiceDB",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4727,
        1020
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "U4Lx0acH9rOsOwsN",
          "name": "Supabase InvoiceData"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "VendorAccounts",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "ReceiverParty_CompanyID",
              "condition": "ilike",
              "keyValue": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}"
            },
            {
              "keyName": "SenderParty_CompanyID",
              "condition": "like",
              "keyValue": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}"
            }
          ]
        }
      },
      "id": "a83365c7-5c9f-48ad-b26c-688b2971e17c",
      "name": "VendorAccounts",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2560,
        1320
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "U4Lx0acH9rOsOwsN",
          "name": "Supabase InvoiceData"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ParentDocumentID": "={{ $('Invoice Data').item.json.choices[0].message.content.ParentDocumentID }}",
            "IssueDate": "={{ $('Invoice Data').item.json.choices[0].message.content.IssueDate }}",
            "SenderParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_RegistrationName }}",
            "SenderParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}",
            "ReceiverParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_RegistrationName }}",
            "ReceiverParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}",
            "Error_Log": "Tercero Sin Parametrización",
            "FileName": "={{ $('Get Files / XML').item.json.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ParentDocumentID",
              "displayName": "ParentDocumentID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IssueDate",
              "displayName": "IssueDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_RegistrationName",
              "displayName": "SenderParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_CompanyID",
              "displayName": "SenderParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_RegistrationName",
              "displayName": "ReceiverParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_CompanyID",
              "displayName": "ReceiverParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileName",
              "displayName": "FileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Error_Log",
              "displayName": "Error_Log",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "c2cd6d9e-eba0-45a2-9b55-8db1b9b257c8",
      "name": "Error Log 1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -2495,
        2000
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gZ5bDsFFZ71b6qAI",
          "name": "Google Sheets account 2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ParentDocumentID": "={{ $('Invoice Data').item.json.choices[0].message.content.ParentDocumentID }}",
            "IssueDate": "={{ $('Invoice Data').item.json.choices[0].message.content.IssueDate }}",
            "SenderParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_RegistrationName }}",
            "SenderParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}",
            "ReceiverParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_RegistrationName }}",
            "ReceiverParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}",
            "Error_Log": "Error AI - Descripción",
            "FileName": "={{ $('Get Files / XML').item.json.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ParentDocumentID",
              "displayName": "ParentDocumentID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IssueDate",
              "displayName": "IssueDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_RegistrationName",
              "displayName": "SenderParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_CompanyID",
              "displayName": "SenderParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_RegistrationName",
              "displayName": "ReceiverParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_CompanyID",
              "displayName": "ReceiverParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileName",
              "displayName": "FileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Error_Log",
              "displayName": "Error_Log",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "d1722e72-9648-492b-9ebd-ce4f8a4dade0",
      "name": "Error Log 2",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1560,
        2000
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gZ5bDsFFZ71b6qAI",
          "name": "Google Sheets account 2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "# Extracción Data Facturas\n\n### - Transforma datos xml en binario base64\n### - Extrae información tomando parámetros y elementos de la DIAN\n### - Eror Handler --> archiva documento en carpeta error\n\n       *- Posibles errores:* \n          *1. API Rate Limit \n          *2. Archivo corrupto.\n\n### - Iteración entre los documentos en la carpeta\n\n\n",
        "height": 1110.8428912735624,
        "width": 1270.5924990890296,
        "color": 7
      },
      "id": "cafaaf38-e9cc-43b4-9d8d-d25b5de37704",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3880,
        1140
      ]
    },
    {
      "parameters": {
        "content": "# Parametrización Cuentas Terceros\n\n### - Para cada tercero parametriza las cuentas contales que se deben contemplar en la clasificación de las cuentas contables.\n### - Descarta (Error) la factura si el tercero no tiene parametrización de cuentas. \n\n|",
        "height": 1290.5835299608977,
        "width": 635.7848840015304,
        "color": 7
      },
      "id": "81ade73e-8cc7-4684-9cb9-447783eda0c5",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2580,
        960
      ]
    },
    {
      "parameters": {
        "content": "# Descripción Factura y Cargue DB información factura.\n\n### - Basado en los items del documento genera un breve resumen de la factura\n### - Crea un listado \"plano\" de los items de la factura\n### - Basado en el resumen y los items determina el tipo de gasto. Servicio, producto, activo e inventario.\n### - Carga en DB únicamente información contenida en la factura\n",
        "height": 1290.8716440016246,
        "width": 1290.024852568322,
        "color": 7
      },
      "id": "1c5fd290-92ac-4c9c-a166-c4264b40e803",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1880,
        960
      ]
    },
    {
      "parameters": {
        "content": "# Clasificación Cuentas Contables\n\n### - Clasifica y asigna las cuentas contables para la factura, se basa en toda la información de la factura y las cuentas contables parametrizadas para el tercero.\n### - Agrupa y todas las variables y ajusta el fomato para registrar los datos en la DB.\n### - Mueve las facturas (archivos) a carpeta de extraidos. Si no hay error, mueve únicamente las facturas que fueron procesadas corrctamente",
        "height": 1518.9997432695227,
        "width": 1223.679849492316,
        "color": 7
      },
      "id": "713939e8-7c43-4f50-a70b-ab63a679054a",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4060,
        720
      ]
    },
    {
      "parameters": {
        "content": "# Parametrización del Modelo\n\n### - Cargue parámetros para el modelo AI y prompts\n### - Listado facturas disponibles para procesar\n\n\n",
        "height": 910.2845438926778,
        "width": 2468.8149736988726,
        "color": 7
      },
      "id": "831f068f-4cbb-4c60-8448-4b3994a14346",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6386.53432026586,
        1340
      ]
    },
    {
      "parameters": {
        "content": "## Error Handler \nDocumento con el reporte de errores encontrados.\n\n**Click to View** \n[Document - Error Log](https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=sharing)\n",
        "height": 157.89419394781874,
        "width": 370.10050008103264,
        "color": 7
      },
      "id": "12cb8188-dbe2-4dc8-879a-8669daaef8c6",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2520,
        1700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b5db9061-d7ff-4482-98f9-f0c3ac0c4a18",
              "name": "choices[0].message.content",
              "value": "={{ $json.data[0] }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "3843c131-785f-4223-9006-18c7d95017d6",
      "name": "Invoice Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2760,
        1420
      ],
      "executeOnce": true,
      "notesInFlow": true,
      "notes": "Prepara data de cada variable para utilizarla en nodos futuros. También organiza y consolida data para cargue a DB"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6e73f4bb-83d9-4e82-a329-a2ce9a2e869c",
              "name": "InvoiceData",
              "value": "={{ $('Invoice Data').item.json.choices[0].message.content }}",
              "type": "object"
            },
            {
              "id": "a40922ae-c963-4382-8820-687a45c13d04",
              "name": "TokenIn",
              "value": "={{  parseInt($('Invoice Description').item.json.usage.prompt_tokens) }}\n",
              "type": "number"
            },
            {
              "id": "b497f24b-3185-4ae2-8fb4-8e1e9cf60898",
              "name": "TokenOut",
              "value": "={{ parseInt($('Invoice Description').item.json.usage.completion_tokens) }}",
              "type": "number"
            },
            {
              "id": "66352388-d909-4b38-ade0-fe401a99db61",
              "name": "Invoice_Description",
              "value": "={{ $('Invoice Description').item.json.choices[0].message.content }}",
              "type": "object"
            },
            {
              "id": "be7d8fd4-d3b2-4356-badc-74b11913790f",
              "name": "Account_Classification",
              "value": "={{ $json.choices[0].message.content }}",
              "type": "object"
            },
            {
              "id": "118dbb9d-5823-4352-9879-e87fa70a1585",
              "name": "TokenIn2",
              "value": "={{ $json.usage.prompt_tokens }}",
              "type": "number"
            },
            {
              "id": "0cba95bd-248a-432c-a607-f18a001f4a24",
              "name": "TokenOut2",
              "value": "={{ $json.usage.completion_tokens }}",
              "type": "number"
            },
            {
              "id": "0614b95b-d447-494a-83f8-ce32f96c035a",
              "name": "AI_Model",
              "value": "={{ $('Invoice Description').item.json.model }}",
              "type": "string"
            },
            {
              "id": "95c40cdf-af6d-499e-98ea-5f3c087e465e",
              "name": "AI_Model2",
              "value": "={{ $json.model }}",
              "type": "string"
            },
            {
              "id": "2ca64fba-8eee-4369-ac81-8cc354e09eb1",
              "name": "FileName",
              "value": "={{ $('Get Files / XML').item.json.name }}",
              "type": "string"
            },
            {
              "id": "5d48a1ba-9608-4e6e-ab29-021b6d3e63c8",
              "name": "FileFormat",
              "value": "={{ $('Get Files / XML').item.json.mimeType }}",
              "type": "string"
            },
            {
              "id": "64d8f754-c155-4ed1-ab74-088e5ff47e49",
              "name": "DataExtractionDate",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            },
            {
              "id": "34238d76-00c1-41b3-af43-4a6b57151a44",
              "name": "CUFE",
              "value": "={{ $('Invoice Data').item.json.choices[0].message.content.CUFE }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "34cbddce-055e-424c-a709-ff2454f3becc",
      "name": "All_Invoice_Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4287,
        1040
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Access the data from All_Invoice_data node\nconst invoiceData = $json.InvoiceData;\nconst invoiceDescription = $json.Invoice_Description;\nconst accountClassification = $json.Account_Classification;\n\n// Check if InvoiceLine is an array or a string and handle accordingly\nlet invoiceLineDescription;\nif (Array.isArray(invoiceData.InvoiceLine)) {\n  // If it's an array, use .map() to concatenate descriptions\n  invoiceLineDescription = invoiceData.InvoiceLine.map(item => \n    `\\tDescription: ${item.Description}\\n\\tInvoicedQuantity: ${item.InvoicedQuantity}\\n\\tPriceAmount: ${item.PriceAmount}\\n\\tLineExtensionAmount: ${item.LineExtensionAmount}`\n  ).join(\"\\n\\n\");\n} else {\n  // If it's not an array (assuming it's a string), use it directly\n  invoiceLineDescription = invoiceData.InvoiceLine;\n}\n\n// Prepare the data to match the Supabase schema\nreturn {\n  json: {\n    ParentDocumentID: invoiceData.ParentDocumentID,\n    IssueDate: invoiceData.IssueDate,\n    SenderParty_RegistrationName: invoiceData.SenderParty_RegistrationName,\n    SenderParty_CompanyID: parseInt(invoiceData.SenderParty_CompanyID),\n    ReceiverParty_RegistrationName: invoiceData.ReceiverParty_RegistrationName,\n    ReceiverParty_CompanyID: parseInt(invoiceData.ReceiverParty_CompanyID),\n    LineExtensionAmount: parseFloat(invoiceData.LineExtensionAmount).toFixed(2),\n    TaxInclusiveAmount: parseFloat(invoiceData.TaxInclusiveAmount).toFixed(2),\n    IVA: invoiceData.IVA ? parseFloat(invoiceData.IVA).toFixed(2) : 0,\n    IC: invoiceData.IC ? parseFloat(invoiceData.IC).toFixed(2) : 0,\n    ICA: invoiceData.ICA ? parseFloat(invoiceData.ICA).toFixed(2) : 0,\n    INC: invoiceData.INC ? parseFloat(invoiceData.INC).toFixed(2) : 0,\n    ReteIVA: invoiceData.ReteIVA ? parseFloat(invoiceData.ReteIVA).toFixed(2) : 0,\n    ReteFuente: invoiceData.ReteFuente ? parseFloat(invoiceData.ReteFuente).toFixed(2) : 0,\n    ReteICA: invoiceData.ReteICA ? parseFloat(invoiceData.ReteICA).toFixed(2) : 0,\n    PayableAmount: parseFloat(invoiceData.PayableAmount).toFixed(2),\n    \n    // Set InvoiceLine (either the concatenated string or the original string)\n    InvoiceLine: invoiceLineDescription,\n\n    // Add CUFE, DataExtractionDate and File information\n    CUFE: $json.CUFE,\n    DataExtractionDate: new Date().toISOString(),\n    FileName: $json.FileName,\n    FileFormat: $json.FileFormat,\n\n    // Add AI model and token information\n    AI_Model: $json.AI_Model,\n    TokenIn: parseInt($json.TokenIn),\n    TokenOut: parseInt($json.TokenOut),\n    AI_Model2: $json.AI_Model2,\n    TokenIn2: parseInt($json.TokenIn2),\n    TokenOut2: parseInt($json.TokenOut2),\n\n    // Invoice description and expense type\n    InvoiceDescription: invoiceDescription.Description,\n    ExpenseType: invoiceDescription.ExpenseType,\n\n    // Account Classification\n    AccountNum1: accountClassification.AccountNum1 ? parseInt(accountClassification.AccountNum1) : null,\n    AccountNum1_Des: accountClassification.AccountNum1_Des || null,\n    AccountNum1_Val: accountClassification.AccountNum1_Val ? parseFloat(accountClassification.AccountNum1_Val).toFixed(2) : null,\n    AccountNum1_Deb_Cred: accountClassification.AccountNum1_Deb_Cred || null,\n\n    AccountNum2: accountClassification.AccountNum2 ? parseInt(accountClassification.AccountNum2) : null,\n    AccountNum2_Des: accountClassification.AccountNum2_Des || null,\n    AccountNum2_Val: accountClassification.AccountNum2_Val ? parseFloat(accountClassification.AccountNum2_Val).toFixed(2) : null,\n    AccountNum2_Deb_Cred: accountClassification.AccountNum2_Deb_Cred || null,\n\n\n    AccountNum3: accountClassification.AccountNum3 ? parseInt(accountClassification.AccountNum3) : null,\n    AccountNum3_Des: accountClassification.AccountNum3_Des || null,\n    AccountNum3_Val: accountClassification.AccountNum3_Val ? parseFloat(accountClassification.AccountNum3_Val).toFixed(2) : null,\n    AccountNum3_Deb_Cred: accountClassification.AccountNum3_Deb_Cred || null,\n\n    AccountNum4: accountClassification.AccountNum4 ? parseInt(accountClassification.AccountNum4) : null,\n    AccountNum4_Des: accountClassification.AccountNum4_Des || null,\n    AccountNum4_Val: accountClassification.AccountNum4_Val ? parseFloat(accountClassification.AccountNum4_Val).toFixed(2) : null,\n    AccountNum4_Deb_Cred: accountClassification.AccountNum4_Deb_Cred || null,\n\n    AccountNum5: accountClassification.AccountNum5 ? parseInt(accountClassification.AccountNum5) : null,\n    AccountNum5_Des: accountClassification.AccountNum5_Des || null,\n    AccountNum5_Val: accountClassification.AccountNum5_Val ? parseFloat(accountClassification.AccountNum5_Val).toFixed(2) : null,\n    AccountNum5_Deb_Cred: accountClassification.AccountNum5_Deb_Cred || null,\n\n    AccountNum6: accountClassification.AccountNum6 ? parseInt(accountClassification.AccountNum6) : null,\n    AccountNum6_Des: accountClassification.AccountNum6_Des || null,\n    AccountNum6_Val: accountClassification.AccountNum6_Val ? parseFloat(accountClassification.AccountNum6_Val).toFixed(2) : null,\n    AccountNum6_Deb_Cred: accountClassification.AccountNum6_Deb_Cred || null,\n\n    AccountNum7: accountClassification.AccountNum7 ? parseInt(accountClassification.AccountNum7) : null,\n    AccountNum7_Des: accountClassification.AccountNum7_Des || null,\n    AccountNum7_Val: accountClassification.AccountNum7_Val ? parseFloat(accountClassification.AccountNum7_Val).toFixed(2) : null,\n    AccountNum7_Deb_Cred: accountClassification.AccountNum7_Deb_Cred || null,\n\n    AccountNum8: accountClassification.AccountNum8 ? parseInt(accountClassification.AccountNum8) : null,\n    AccountNum8_Des: accountClassification.AccountNum8_Des || null,\n    AccountNum8_Deb_Cred: accountClassification.AccountNum8_Deb_Cred || null,\n    \n    // Confidence value\n    Confidence: parseFloat(accountClassification.Confidence).toFixed(2),\n  }\n};"
      },
      "id": "cc242c95-623f-4476-91bb-0db1dab28c3f",
      "name": "Prepare Data for DB",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4487,
        1040
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ed8075af-6738-468a-8ac4-806e0e652911",
              "name": "InvoiceDescription",
              "value": "={{ $json.choices[0].message.content }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "62a0e9cf-e3c1-4013-8e33-ab8c94e4cec7",
      "name": "Description",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1380,
        1260
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9950c6f0-28d1-485c-91b6-cf8b45cfa4c6",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4293,
        1660
      ]
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "limit": 1,
        "filter": {
          "driveId": {
            "mode": "list",
            "value": "My Drive"
          },
          "folderId": {
            "__rl": true,
            "value": "1ZGtCbeZOm0ervZFwY4hPwOaktoo6o5Tx",
            "mode": "list",
            "cachedResultName": "Invoices",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1ZGtCbeZOm0ervZFwY4hPwOaktoo6o5Tx"
          },
          "whatToSearch": "files"
        },
        "options": {
          "fields": [
            "name",
            "mimeType",
            "id",
            "webViewLink"
          ]
        }
      },
      "id": "8ca33722-2832-4a81-a8dc-67b90ed7f419",
      "name": "List Files",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -4520,
        1660
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "wdsP0R2suhB5uk31",
          "name": "Google Drive H&F"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1uymiDrtTUcy56FMufL1tYpvFJMRH_3fqdP5QBO2f_zM",
          "mode": "list",
          "cachedResultName": "Model Test",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uymiDrtTUcy56FMufL1tYpvFJMRH_3fqdP5QBO2f_zM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 2976192,
          "mode": "list",
          "cachedResultName": "Modelo_2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uymiDrtTUcy56FMufL1tYpvFJMRH_3fqdP5QBO2f_zM/edit#gid=2976192"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "ParentDocumentID",
              "displayName": "ParentDocumentID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IssueDate",
              "displayName": "IssueDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_RegistrationName",
              "displayName": "SenderParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_CompanyID",
              "displayName": "SenderParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_RegistrationName",
              "displayName": "ReceiverParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_CompanyID",
              "displayName": "ReceiverParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "LineExtensionAmount",
              "displayName": "LineExtensionAmount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TaxInclusiveAmount",
              "displayName": "TaxInclusiveAmount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IVA",
              "displayName": "IVA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IC",
              "displayName": "IC",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ICA",
              "displayName": "ICA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "INC",
              "displayName": "INC",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReteIVA",
              "displayName": "ReteIVA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReteFuente",
              "displayName": "ReteFuente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReteICA",
              "displayName": "ReteICA",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "PayableAmount",
              "displayName": "PayableAmount",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "InvoiceLine",
              "displayName": "InvoiceLine",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "DataExtractionDate",
              "displayName": "DataExtractionDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileName",
              "displayName": "FileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileFormat",
              "displayName": "FileFormat",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AI_Model",
              "displayName": "AI_Model",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TokenIn",
              "displayName": "TokenIn",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TokenOut",
              "displayName": "TokenOut",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "InvoiceDescription",
              "displayName": "InvoiceDescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ExpenseType",
              "displayName": "ExpenseType",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum1",
              "displayName": "AccountNum1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum1_Des",
              "displayName": "AccountNum1_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum1_Val",
              "displayName": "AccountNum1_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum1_Deb_Cred",
              "displayName": "AccountNum1_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum2",
              "displayName": "AccountNum2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum2_Des",
              "displayName": "AccountNum2_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum2_Val",
              "displayName": "AccountNum2_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum2_Deb_Cred",
              "displayName": "AccountNum2_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum3",
              "displayName": "AccountNum3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum3_Des",
              "displayName": "AccountNum3_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum3_Val",
              "displayName": "AccountNum3_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum3_Deb_Cred",
              "displayName": "AccountNum3_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum4",
              "displayName": "AccountNum4",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum4_Des",
              "displayName": "AccountNum4_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum4_Val",
              "displayName": "AccountNum4_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum4_Deb_Cred",
              "displayName": "AccountNum4_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum5",
              "displayName": "AccountNum5",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum5_Des",
              "displayName": "AccountNum5_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum5_Val",
              "displayName": "AccountNum5_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum5_Deb_Cred",
              "displayName": "AccountNum5_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum6",
              "displayName": "AccountNum6",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum6_Des",
              "displayName": "AccountNum6_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum6_Val",
              "displayName": "AccountNum6_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum6_Deb_Cred",
              "displayName": "AccountNum6_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum7",
              "displayName": "AccountNum7",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum7_Des",
              "displayName": "AccountNum7_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum7_Val",
              "displayName": "AccountNum7_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum7_Deb_Cred",
              "displayName": "AccountNum7_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum8",
              "displayName": "AccountNum8",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum8_Des",
              "displayName": "AccountNum8_Des",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum8_Val",
              "displayName": "AccountNum8_Val",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AccountNum8_Deb_Cred",
              "displayName": "AccountNum8_Deb_Cred",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Confidence",
              "displayName": "Confidence",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Validation",
              "displayName": "Validation",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "AI_Model2",
              "displayName": "AI_Model2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TokenIn2",
              "displayName": "TokenIn2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "TokenOut2",
              "displayName": "TokenOut2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "CUFE",
              "displayName": "CUFE",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "4114eca4-0021-4382-b318-192ae2754d6d",
      "name": "Model Test",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        2040,
        340
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gZ5bDsFFZ71b6qAI",
          "name": "Google Sheets account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ParentDocumentID": "={{ $('Invoice Data').item.json.choices[0].message.content.ParentDocumentID }}",
            "IssueDate": "={{ $('Invoice Data').item.json.choices[0].message.content.IssueDate }}",
            "SenderParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_RegistrationName }}",
            "SenderParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}",
            "ReceiverParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_RegistrationName }}",
            "ReceiverParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}",
            "Error_Log": "Error Script Convertir Variables DB",
            "FileName": "={{ $('Get Files / XML').item.json.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ParentDocumentID",
              "displayName": "ParentDocumentID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IssueDate",
              "displayName": "IssueDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_RegistrationName",
              "displayName": "SenderParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_CompanyID",
              "displayName": "SenderParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_RegistrationName",
              "displayName": "ReceiverParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_CompanyID",
              "displayName": "ReceiverParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileName",
              "displayName": "FileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Error_Log",
              "displayName": "Error_Log",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "e7149ed1-2a50-48f8-8a9a-615ff19ee336",
      "name": "Error Log  4",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4613,
        1709
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gZ5bDsFFZ71b6qAI",
          "name": "Google Sheets account 2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ParentDocumentID": "={{ $('Invoice Data').item.json.choices[0].message.content.ParentDocumentID }}",
            "IssueDate": "={{ $('Invoice Data').item.json.choices[0].message.content.IssueDate }}",
            "SenderParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_RegistrationName }}",
            "SenderParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}",
            "ReceiverParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_RegistrationName }}",
            "ReceiverParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}",
            "Error_Log": "Error AI - Clasificación Cuentas",
            "FileName": "={{ $('Get Files / XML').item.json.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ParentDocumentID",
              "displayName": "ParentDocumentID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IssueDate",
              "displayName": "IssueDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_RegistrationName",
              "displayName": "SenderParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_CompanyID",
              "displayName": "SenderParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_RegistrationName",
              "displayName": "ReceiverParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_CompanyID",
              "displayName": "ReceiverParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileName",
              "displayName": "FileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Error_Log",
              "displayName": "Error_Log",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "275d35e1-ea6a-49dc-9da7-6931c1c8e0ba",
      "name": "Error Log  3",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4153,
        1709
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gZ5bDsFFZ71b6qAI",
          "name": "Google Sheets account 2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ParentDocumentID": "={{ $('Invoice Data').item.json.choices[0].message.content.ParentDocumentID }}",
            "IssueDate": "={{ $('Invoice Data').item.json.choices[0].message.content.IssueDate }}",
            "SenderParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_RegistrationName }}",
            "SenderParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}",
            "ReceiverParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_RegistrationName }}",
            "ReceiverParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}",
            "Error_Log": "Error Cargue DB",
            "FileName": "={{ $('Get Files / XML').item.json.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ParentDocumentID",
              "displayName": "ParentDocumentID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IssueDate",
              "displayName": "IssueDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_RegistrationName",
              "displayName": "SenderParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_CompanyID",
              "displayName": "SenderParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_RegistrationName",
              "displayName": "ReceiverParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_CompanyID",
              "displayName": "ReceiverParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileName",
              "displayName": "FileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Error_Log",
              "displayName": "Error_Log",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "c3de2eb3-2511-4fec-9d87-a8acc181f92c",
      "name": "Error Log  5",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4793,
        1709
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gZ5bDsFFZ71b6qAI",
          "name": "Google Sheets account 2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Error Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "ParentDocumentID": "={{ $('Invoice Data').item.json.choices[0].message.content.ParentDocumentID }}",
            "IssueDate": "={{ $('Invoice Data').item.json.choices[0].message.content.IssueDate }}",
            "SenderParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_RegistrationName }}",
            "SenderParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}",
            "ReceiverParty_RegistrationName": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_RegistrationName }}",
            "ReceiverParty_CompanyID": "={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}",
            "Error_Log": "Error Script Extracción Data",
            "FileName": "={{ $('Get Files / XML').item.json.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "ParentDocumentID",
              "displayName": "ParentDocumentID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "IssueDate",
              "displayName": "IssueDate",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_RegistrationName",
              "displayName": "SenderParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "SenderParty_CompanyID",
              "displayName": "SenderParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_RegistrationName",
              "displayName": "ReceiverParty_RegistrationName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ReceiverParty_CompanyID",
              "displayName": "ReceiverParty_CompanyID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "FileName",
              "displayName": "FileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Error_Log",
              "displayName": "Error_Log",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "62ac3980-6bce-45d0-b6dc-5a3baf114559",
      "name": "Error Log ",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -3200,
        2000
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "gZ5bDsFFZ71b6qAI",
          "name": "Google Sheets account 2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "# Ajustar DB \n\n\nArreglar DB con nuevas variables"
      },
      "id": "85f0c82e-5bfe-4ac3-9beb-2ec203d7ffd1",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4960,
        1000
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3e3bd4c5-04d5-4bc7-80d1-440a98674ebd",
      "name": "XML",
      "type": "n8n-nodes-base.xml",
      "typeVersion": 1,
      "position": [
        -3440,
        1580
      ]
    },
    {
      "parameters": {
        "resource": "folder",
        "folderId": "Invoices"
      },
      "id": "cff2702e-ea48-4bd6-b474-563a1c1e9280",
      "name": "Microsoft OneDrive",
      "type": "n8n-nodes-base.microsoftOneDrive",
      "typeVersion": 1,
      "position": [
        -5480,
        1080
      ],
      "credentials": {
        "microsoftOneDriveOAuth2Api": {
          "id": "VuffFQLziQK9I5pc",
          "name": "Microsoft Drive account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Revisión Responsabilidad ReteFuente\n\n### - Revisa la data en la data del flujo el item \"TaxLevelCode\", toma el código y lo compara con la base en SupaBase con el mismo nombre.\n### - Revisa el código y trae el nombre del régimen para el tercero.\n",
        "height": 1500.811141039242,
        "width": 617.560566052625,
        "color": 7
      },
      "id": "7499b0a8-d603-447d-976c-c4a8c718540b",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -550,
        750
      ]
    },
    {
      "parameters": {
        "content": "# Liquidación  ReteFuente\n\n### - Revisa la data para confirmar que la ciudad en la que se genera la factura no es la misma que la ciudad en que esta registrado el comprador. Sí es así, no debe tener ReteICA.\n### - Después de revisar la ciudad, valida la base de datos de la actividad del generador, junto con la descripción de la factura para confirmar si aplica o no alguna retención. \n### - Si no es autorretenedor se aplica retención en la fuente.",
        "height": 1500.9269436130044,
        "width": 2118.2534337019747,
        "color": 7
      },
      "id": "028989e4-056d-4b0c-9855-b20cd9f5d71f",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        120,
        760
      ]
    },
    {
      "parameters": {
        "jsCode": "// Extract the data from the previous node\nconst invoiceData = items[0].json.Invoice;\n\n// Initialize the result object with the necessary fields\nconst result = {\n  ParentDocumentID: invoiceData[\"cbc:ID\"] || \"\",\n  IssueDate: invoiceData[\"cbc:IssueDate\"] || \"\",\n  \n  // Sender Party details\n  SenderParty_RegistrationName: invoiceData[\"cac:AccountingSupplierParty\"]?.[\"cac:Party\"]?.[\"cac:PartyTaxScheme\"]?.[\"cbc:RegistrationName\"] || \"\",\n  SenderParty_CompanyID: invoiceData[\"cac:AccountingSupplierParty\"]?.[\"cac:Party\"]?.[\"cac:PartyTaxScheme\"]?.[\"cbc:CompanyID\"]?._ || \"\",\n  SenderParty_CityID: invoiceData[\"cac:AccountingSupplierParty\"]?.[\"cac:Party\"]?.[\"cac:PhysicalLocation\"]?.[\"cac:Address\"]?.[\"cbc:ID\"] || \"\",\n  SenderParty_CityName: invoiceData[\"cac:AccountingSupplierParty\"]?.[\"cac:Party\"]?.[\"cac:PhysicalLocation\"]?.[\"cac:Address\"]?.[\"cbc:CityName\"] || \"\",\n  SenderParty_TaxLevelCode: invoiceData[\"cac:AccountingSupplierParty\"]?.[\"cac:Party\"]?.[\"cac:PartyTaxScheme\"]?.[\"cbc:TaxLevelCode\"]?._ || \"\",\n  SenderParty_IndustryClassificationCode: invoiceData[\"cac:AccountingSupplierParty\"]?.[\"cac:Party\"]?.[\"cbc:IndustryClassificationCode\"] || \"\",\n  SenderParty_CompanyType: invoiceData[\"cac:AccountingSupplierParty\"]?.[\"cbc:AdditionalAccountID\"] || \"\",\n  \n  // Receiver Party details\n  ReceiverParty_RegistrationName: invoiceData[\"cac:AccountingCustomerParty\"]?.[\"cac:Party\"]?.[\"cac:PartyTaxScheme\"]?.[\"cbc:RegistrationName\"] || \"\",\n  ReceiverParty_CompanyID: invoiceData[\"cac:AccountingCustomerParty\"]?.[\"cac:Party\"]?.[\"cac:PartyTaxScheme\"]?.[\"cbc:CompanyID\"]?._ || \"\",\n  ReceiverParty_CityID: invoiceData[\"cac:AccountingCustomerParty\"]?.[\"cac:Party\"]?.[\"cac:PhysicalLocation\"]?.[\"cac:Address\"]?.[\"cbc:ID\"] || \"\",\n  ReceiverParty_CityName: invoiceData[\"cac:AccountingCustomerParty\"]?.[\"cac:Party\"]?.[\"cac:PhysicalLocation\"]?.[\"cac:Address\"]?.[\"cbc:CityName\"] || \"\",\n  ReceiverParty_TaxLevelCode: invoiceData[\"cac:AccountingCustomerParty\"]?.[\"cac:Party\"]?.[\"cac:PartyTaxScheme\"]?.[\"cbc:TaxLevelCode\"]?._ || \"\",\n\n\n  // Other existing fields\n  LineExtensionAmount: invoiceData[\"cac:LegalMonetaryTotal\"]?.[\"cbc:LineExtensionAmount\"]?._ || \"\",\n  TaxInclusiveAmount: invoiceData[\"cac:LegalMonetaryTotal\"]?.[\"cbc:TaxInclusiveAmount\"]?._ || \"\",\n\n  IVA: \"\",\n  IC: \"\",\n  ICA: \"\",\n  INC: \"\",\n  ReteIVA: \"\",\n  ReteFuente: \"\",\n  ReteICA: \"\",\n  \n  PayableAmount: invoiceData[\"cac:LegalMonetaryTotal\"]?.[\"cbc:PayableAmount\"]?._ || \"\",\n\n  LineCountNumeric: invoiceData[\"cbc:LineCountNumeric\"] || \"\",\n  \n  InvoiceLine: \"\",\n  CUFE: invoiceData[\"cbc:UUID\"]?._ || \"\",\n  \n  // New variables for InvoiceTypeCode and DocumentCurrencyCode\n  InvoiceTypeCode: invoiceData[\"cbc:InvoiceTypeCode\"] || \"\",\n  DocumentCurrencyCode: invoiceData[\"cbc:DocumentCurrencyCode\"] || \"\",\n\n  // Eventos de un Documento Electrónico: cbc:DocumentResponse/Description; cbc:ResponseCode\n  DocumentResponseDescription: invoiceData[\"cac:DocumentResponse\"]?.[\"cbc:Description\"] || \"\",\n  DocumentResponseCode: invoiceData[\"cac:DocumentResponse\"]?.[\"cbc:ResponseCode\"] || \"\"\n};\n\n// Extract tax information\nconst taxDetails = invoiceData[\"cac:TaxTotal\"]?.[\"cac:TaxSubtotal\"];\nif (Array.isArray(taxDetails)) {\n  // Iterate through the array to find IVA\n  result.IVA = taxDetails\n    .filter(subtotal => subtotal[\"cac:TaxCategory\"]?.[\"cac:TaxScheme\"]?.[\"cbc:ID\"] === \"01\")\n    .map(subtotal => parseFloat(subtotal[\"cbc:TaxAmount\"]?._ || \"0\"))\n    .reduce((acc, amount) => acc + amount, 0)\n    .toFixed(2); // Sum all IVA amounts\n} else if (taxDetails?.[\"cac:TaxCategory\"]?.[\"cac:TaxScheme\"]?.[\"cbc:ID\"] === \"01\") {\n  result.IVA = taxDetails[\"cbc:TaxAmount\"]?._ || \"\";\n}\n\n// Extract withholding taxes\nconst withholdingTaxes = invoiceData[\"cac:WithholdingTaxTotal\"];\nif (Array.isArray(withholdingTaxes)) {\n  withholdingTaxes.forEach((tax) => {\n    const taxSchemeID = tax[\"cac:TaxSubtotal\"]?.[\"cac:TaxCategory\"]?.[\"cac:TaxScheme\"]?.[\"cbc:ID\"];\n    const taxAmount = parseFloat(tax[\"cac:TaxSubtotal\"]?.[\"cbc:TaxAmount\"]?._ || \"0\");\n    switch (taxSchemeID) {\n      case \"05\":\n        result.ReteIVA = (parseFloat(result.ReteIVA) || 0) + taxAmount;\n        break;\n      case \"06\":\n        result.ReteFuente = (parseFloat(result.ReteFuente) || 0) + taxAmount;\n        break;\n      case \"07\":\n        result.ReteICA = (parseFloat(result.ReteICA) || 0) + taxAmount;\n        break;\n    }\n  });\n\n  // Convert to strings to avoid potential type mismatch\n  result.ReteIVA = result.ReteIVA ? result.ReteIVA.toFixed(2) : \"\";\n  result.ReteFuente = result.ReteFuente ? result.ReteFuente.toFixed(2) : \"\";\n  result.ReteICA = result.ReteICA ? result.ReteICA.toFixed(2) : \"\";\n}\n\n// Extract invoice line items\nconst invoiceLines = invoiceData[\"cac:InvoiceLine\"];\nlet invoiceLineDescriptions = [];\n\nif (Array.isArray(invoiceLines)) {\n  // If it's an array, loop through each invoice line\n  invoiceLines.forEach(invoiceLine => {\n    const description = invoiceLine[\"cac:Item\"]?.[\"cbc:Description\"] || \"\";\n    const quantity = invoiceLine[\"cbc:InvoicedQuantity\"]?._ || \"\";\n    const unitValue = invoiceLine[\"cac:Price\"]?.[\"cbc:PriceAmount\"]?._ || \"\";\n    const totalValue = invoiceLine[\"cbc:LineExtensionAmount\"]?._ || \"\";\n\n    invoiceLineDescriptions.push(`Description: ${description}, Quantity: ${quantity}, Unit Value: ${unitValue}, Total Value: ${totalValue}`);\n  });\n} else if (invoiceLines) {\n  // If it's a single object\n  const description = invoiceLines[\"cac:Item\"]?.[\"cbc:Description\"] || \"\";\n  const quantity = invoiceLines[\"cbc:InvoicedQuantity\"]?._ || \"\";\n  const unitValue = invoiceLines[\"cac:Price\"]?.[\"cbc:PriceAmount\"]?._ || \"\";\n  const totalValue = invoiceLines[\"cbc:LineExtensionAmount\"]?._ || \"\";\n\n  invoiceLineDescriptions.push(`Description: ${description}, Quantity: ${quantity}, Unit Value: ${unitValue}, Total Value: ${totalValue}`);\n}\n\n// Combine all invoice lines into a single string, separated by semicolons\nresult.InvoiceLine = invoiceLineDescriptions.join(\"; \");\n\n// Return the result as JSON\nreturn [{ json: result }];"
      },
      "id": "cd03464f-92bc-4636-ac2a-2916f2eefe12",
      "name": "Extract XML Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3220,
        1440
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "40d624ac-9129-437d-af2e-c566a22ff889",
      "name": "Agregador DataXML",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2960,
        1420
      ],
      "notesInFlow": true,
      "executeOnce": true,
      "notes": "Agregador Data XML de la factura en un output único"
    },
    {
      "parameters": {
        "jsCode": "// Access the 'Invoice' data from the XML to JSON node\nconst invoiceData = items[0].json.Invoice;\n\n// Extract invoice line items from the XML data\nconst invoiceLines = invoiceData[\"cac:InvoiceLine\"];\nlet result = {};  // Initialize the result object\n\n// Check if 'InvoiceLine' is an array and process each item\nif (Array.isArray(invoiceLines)) {\n  invoiceLines.forEach((invoiceLine, index) => {\n    const description = invoiceLine[\"cac:Item\"]?.[\"cbc:Description\"] || \"\";\n    const quantity = invoiceLine[\"cbc:InvoicedQuantity\"]?._ || \"\";\n    const unitValue = invoiceLine[\"cac:Price\"]?.[\"cbc:PriceAmount\"]?._ || \"\";\n    const totalValue = invoiceLine[\"cbc:LineExtensionAmount\"]?._ || \"\";\n\n    // Create a key for each item (item_1, item_2, etc.)\n    result[`item_${index + 1}`] = {\n      \"Description\": description,\n      \"Quantity\": quantity,\n      \"Unit_Value\": unitValue,\n      \"Total_Value\": totalValue\n    };\n  });\n} else if (invoiceLines) {\n  // If there's only one item (not an array)\n  const description = invoiceLines[\"cac:Item\"]?.[\"cbc:Description\"] || \"\";\n  const quantity = invoiceLines[\"cbc:InvoicedQuantity\"]?._ || \"\";\n  const unitValue = invoiceLines[\"cac:Price\"]?.[\"cbc:PriceAmount\"]?._ || \"\";\n  const totalValue = invoiceLines[\"cbc:LineExtensionAmount\"]?._ || \"\";\n\n  // Handle the single item case\n  result[\"item_1\"] = {\n    \"Description\": description,\n    \"Quantity\": quantity,\n    \"Unit_Value\": unitValue,\n    \"Total_Value\": totalValue\n  };\n}\n\n// Return the result as the output\nreturn [{ json: result }];\n"
      },
      "id": "bfdcfbb1-bf27-4820-9004-90ee495ecee4",
      "name": "Extract Items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3220,
        1740
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "3cc5b737-417e-4023-8e2d-cd9d2a888291",
      "name": "Agregador Items",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2960,
        1720
      ],
      "notesInFlow": true,
      "executeOnce": true,
      "notes": "Agregador Items XML de la factura en un output único"
    },
    {
      "parameters": {
        "content": "## Error Handler \nDocumento con el reporte de errores encontrados.\n\n**Click to View** \n[Document - Error Log](https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=sharing)\n",
        "height": 156.85968088445503,
        "width": 370.10050008103264,
        "color": 7
      },
      "id": "71f21e7f-acd9-45e4-a608-4d5d00130c34",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1560,
        1700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "31fce415-158f-4f3a-95ab-abde72f17a66",
              "leftValue": "={{ $json.data[0] }}",
              "rightValue": "[empty]",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d5922e83-e8f5-49e1-9ed1-09d97e6e881f",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        -1825,
        1300
      ]
    },
    {
      "parameters": {
        "jsCode": "// Function to remove null values from an object\nconst removeNulls = (obj) => {\n  for (const key in obj) {\n    if (obj[key] === null) {\n      delete obj[key];\n    }\n  }\n  return obj;\n};\n\n// Apply the function to each item in the 'items' array provided by n8n\nreturn items.map(item => {\n  const cleanedData = removeNulls(item.json);\n  return {\n    json: cleanedData\n  };\n});"
      },
      "id": "45f55816-68e1-4adc-ba21-7065e2455b3d",
      "name": "Clean JSON",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2325,
        1300
      ],
      "notes": "Parametrización Terceros. Retorna únicamente variables con valor"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appxDB6mSqj7XDzIC",
          "mode": "list",
          "cachedResultName": "InvoiceData",
          "cachedResultUrl": "https://airtable.com/appxDB6mSqj7XDzIC"
        },
        "table": {
          "__rl": true,
          "value": "tblPHIUqpr9gmLfZJ",
          "mode": "list",
          "cachedResultName": "AIModels_Prompts",
          "cachedResultUrl": "https://airtable.com/appxDB6mSqj7XDzIC/tblPHIUqpr9gmLfZJ"
        },
        "filterByFormula": "ActualProject = \"Accounting Records\"",
        "options": {},
        "sort": {
          "property": [
            {
              "field": "ID"
            }
          ]
        }
      },
      "id": "3588353b-f543-4fff-9c64-19f13d61e4d8",
      "name": "AI_Variables",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        -4740,
        1660
      ],
      "executeOnce": true,
      "credentials": {
        "airtableTokenApi": {
          "id": "qt2DSN1Xi7hBivEb",
          "name": "Airtable Personal Access Token"
        }
      },
      "notes": "Parametrización modelos AI y Prompts"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "c68bfc74-4a75-42c7-85b0-46a6347ef131",
      "name": "Agregador Parm Terceros",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2125,
        1300
      ],
      "alwaysOutputData": false,
      "executeOnce": true,
      "notes": "Agregador Parametrizacion Información Terceros"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6e73f4bb-83d9-4e82-a329-a2ce9a2e869c",
              "name": "InvoiceData",
              "value": "={{ $('Invoice Data').item.json.choices[0].message.content }}",
              "type": "object"
            },
            {
              "id": "a40922ae-c963-4382-8820-687a45c13d04",
              "name": "TokenIn",
              "value": "={{  parseInt($('Invoice Description').item.json.usage.prompt_tokens) }}\n",
              "type": "number"
            },
            {
              "id": "b497f24b-3185-4ae2-8fb4-8e1e9cf60898",
              "name": "TokenOut",
              "value": "={{ parseInt($('Invoice Description').item.json.usage.completion_tokens) }}",
              "type": "number"
            },
            {
              "id": "66352388-d909-4b38-ade0-fe401a99db61",
              "name": "Invoice_Description",
              "value": "={{ $('Invoice Description').item.json.choices[0].message.content }}",
              "type": "object"
            },
            {
              "id": "0614b95b-d447-494a-83f8-ce32f96c035a",
              "name": "AI_Model",
              "value": "={{ $('Invoice Description').item.json.model }}",
              "type": "string"
            },
            {
              "id": "2ca64fba-8eee-4369-ac81-8cc354e09eb1",
              "name": "FileName",
              "value": "={{ $('Get Files / XML').item.json.name }}",
              "type": "string"
            },
            {
              "id": "5d48a1ba-9608-4e6e-ab29-021b6d3e63c8",
              "name": "FileFormat",
              "value": "={{ $('Get Files / XML').item.json.mimeType }}",
              "type": "string"
            },
            {
              "id": "64d8f754-c155-4ed1-ab74-088e5ff47e49",
              "name": "DataExtractionDate",
              "value": "={{ new Date().toISOString() }}",
              "type": "string"
            },
            {
              "id": "34238d76-00c1-41b3-af43-4a6b57151a44",
              "name": "CUFE",
              "value": "={{ $('Invoice Data').item.json.choices[0].message.content.CUFE }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "aba1fa70-e0ca-44d8-88e9-a7cdb3539400",
      "name": "Data_XML_Invoice",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1180,
        1260
      ],
      "notesInFlow": true,
      "executeOnce": true,
      "notes": "Consolida información básica de la factura en formato XML para enviarla a DB"
    },
    {
      "parameters": {
        "jsCode": "// Iterate over all items in the input\nreturn items.map(item => {\n    const jsonOutput = item.json; // This will get the input JSON for the current item\n\n    const invoiceData = jsonOutput.InvoiceData || {};\n    const invoiceDescription = jsonOutput.Invoice_Description || {};\n\n    // Prepare the object for Supabase insertion\n    const preparedData = {\n        ParentDocumentID: invoiceData.ParentDocumentID || null,\n        IssueDate: invoiceData.IssueDate || null,\n        SenderParty_RegistrationName: invoiceData.SenderParty_RegistrationName || null,\n        SenderParty_CompanyID: parseFloat(invoiceData.SenderParty_CompanyID) || null,\n        SenderParty_CityID: invoiceData.SenderParty_CityID || null,\n        SenderParty_CityName: invoiceData.SenderParty_CityName || null,\n        SenderParty_TaxLevelCode: invoiceData.SenderParty_TaxLevelCode || null,\n        SenderParty_IndustryClassificationCode: invoiceData.SenderParty_IndustryClassificationCode || null,\n        ReceiverParty_RegistrationName: invoiceData.ReceiverParty_RegistrationName || null,\n        ReceiverParty_CompanyID: parseFloat(invoiceData.ReceiverParty_CompanyID) || null,\n        ReceiverParty_CityID: invoiceData.ReceiverParty_CityID || null,\n        ReceiverParty_CityName: invoiceData.ReceiverParty_CityName || null,\n        ReceiverParty_TaxLevelCode: invoiceData.ReceiverParty_TaxLevelCode || null,\n        LineExtensionAmount: parseFloat(invoiceData.LineExtensionAmount) || null,\n        TaxInclusiveAmount: parseFloat(invoiceData.TaxInclusiveAmount) || null,\n        IVA: parseFloat(invoiceData.IVA) || null,\n        IC: parseFloat(invoiceData.IC) || null,\n        ICA: parseFloat(invoiceData.ICA) || null,\n        INC: parseFloat(invoiceData.INC) || null,\n        ReteIVA: parseFloat(invoiceData.ReteIVA) || null,\n        ReteFuente: parseFloat(invoiceData.ReteFuente) || null,\n        ReteICA: parseFloat(invoiceData.ReteICA) || null,\n        PayableAmount: parseFloat(invoiceData.PayableAmount) || null,\n        LineCountNumeric: parseInt(invoiceData.LineCountNumeric, 10) || null,\n        InvoiceLine: invoiceData.InvoiceLine || null,\n        CUFE: invoiceData.CUFE || null,\n        InvoiceTypeCode: invoiceData.InvoiceTypeCode || null,\n        DocumentCurrencyCode: invoiceData.DocumentCurrencyCode || null,\n        DocumentResponseDescription: invoiceData.DocumentResponseDescription || null,\n        DocumentResponseCode: invoiceData.DocumentResponseCode || null,\n        InvoiceDescription: invoiceDescription.Description || null,\n        ExpenseType: invoiceDescription.ExpenseType || null,\n        DataExtractionDate: jsonOutput.DataExtractionDate || null,\n        FileName: jsonOutput.FileName || null,\n        FileFormat: jsonOutput.FileFormat || null,\n        AI_Model: jsonOutput.AI_Model || null,\n        TokenIn: parseInt(jsonOutput.TokenIn, 10) || null,\n        TokenOut: parseInt(jsonOutput.TokenOut, 10) || null\n    };\n    \n    return {\n        json: preparedData // Output the prepared data in the correct format for the next node\n    };\n});"
      },
      "id": "6084c3ec-29a9-4abd-a39f-319a7b2f9a73",
      "name": "Format_XMLInvoice_Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -940,
        1260
      ],
      "notesInFlow": true,
      "executeOnce": true,
      "alwaysOutputData": true,
      "notes": "Prepara data factura para enviar a DB"
    },
    {
      "parameters": {
        "tableId": "InvoicesData",
        "dataToSend": "autoMapInputData"
      },
      "id": "bc1ef138-d1f8-489e-8d11-2fd749a05e63",
      "name": "Upload Invoice Data",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -760,
        1260
      ],
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "U4Lx0acH9rOsOwsN",
          "name": "Supabase InvoiceData"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "move",
        "fileId": {
          "__rl": true,
          "value": "={{ $('List Files').item.json.id }}",
          "mode": "id"
        },
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "19cGASY6TsytZwJX9gloRQ0y-HJbUvaFY",
          "mode": "list",
          "cachedResultName": "Error",
          "cachedResultUrl": "https://drive.google.com/drive/folders/19cGASY6TsytZwJX9gloRQ0y-HJbUvaFY"
        }
      },
      "id": "570960f1-8dd3-4d9d-bb0a-137ba940d00b",
      "name": "Error Handling",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        4160,
        2000
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "wdsP0R2suhB5uk31",
          "name": "Google Drive H&F"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "={{ $item(2).$node[\"AI_Variables\"].json[\"ActualModel\"] }}",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $item(2).$node[\"AI_Variables\"].json[\"SystemPrompt\"] }}",
              "role": "system"
            },
            {
              "content": "={{ $item(2).$node[\"AI_Variables\"].json[\"UserPrompt_1\"] }}"
            },
            {
              "content": "={{ $item(2).$node[\"AI_Variables\"].json[\"UserPrompt_2\"] }}"
            },
            {
              "content": "={{ $item(2).$node[\"AI_Variables\"].json[\"UserPrompt_3\"] }}"
            },
            {
              "content": "={{ $item(2).$node[\"AI_Variables\"].json[\"UserPrompt_4\"] }}"
            },
            {
              "content": "=# Knowledge\n### Invoice Description \n{{ $json.InvoiceDescription.Description }}\n\n### Invoice information and data:\n{{ JSON.stringify($('Invoice Data').item.json.choices[0].message.content) }}\n\n### Provided Accounts from PUC:\n{{ JSON.stringify($('Agregador Parm Terceros').item.json.data[0]) }}\n\n\n### Expense Type:\n{{ $json.InvoiceDescription.ExpenseType }}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {
          "maxTokens": 4096,
          "temperature": "={{ $item(2).$node[\"AI_Variables\"].json[\"Temperature\"] }}"
        }
      },
      "id": "f2b681de-ad37-4bcf-b4e8-da442207e946",
      "name": "Account_Classification",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        4100,
        1060
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "0r1L7QIDC5ZRtM0r",
          "name": "OpenAi"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "41cf0049-d022-4955-9db2-e1622b5f3b21",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        180,
        1700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b5db9061-d7ff-4482-98f9-f0c3ac0c4a18",
              "name": "choices[0].message.content",
              "value": "={{ $json.data[0] }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "84b293ae-7d61-4294-b257-3b81cfddec74",
      "name": "Items Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2760,
        1720
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "8df3a292-7f41-428d-a927-96a9e6368bca",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -500,
        1700
      ]
    },
    {
      "parameters": {},
      "id": "8e23e614-b150-491a-a171-92d0005e5dfe",
      "name": "Replace Me1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -400,
        1060
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "Items",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "bdd05113-ec2f-47cb-93a6-97a5edb69596",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -100,
        1700
      ]
    },
    {
      "parameters": {},
      "id": "4a0f666d-67df-4346-a370-bae4152d7861",
      "name": "Replace Me2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -400,
        1260
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "={{ $item(1).$node[\"AI_Variables\"].json[\"ActualModel\"] }}",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $item(1).$node[\"AI_Variables\"].json[\"SystemPrompt\"] }}",
              "role": "system"
            },
            {
              "content": "={{ $item(1).$node[\"AI_Variables\"].json[\"UserPrompt_1\"] }}"
            },
            {
              "content": "={{ $item(1).$node[\"AI_Variables\"].json[\"UserPrompt_2\"] }}"
            },
            {
              "content": "={{ $item(1).$node[\"AI_Variables\"].json[\"UserPrompt_3\"] }}"
            },
            {
              "content": "={{ $item(1).$node[\"AI_Variables\"].json[\"UserPrompt_4\"] }}"
            },
            {
              "content": "={{ JSON.stringify($('Invoice Data').item.json.choices[0].message.content) }}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {
          "maxTokens": 4096,
          "temperature": "={{ $item(1).$node[\"AI_Variables\"].json[\"Temperature\"] }}"
        }
      },
      "id": "255f3d59-60b8-4c2a-81ee-f00723342d89",
      "name": "Invoice Description",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        -1604,
        1282
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "0r1L7QIDC5ZRtM0r",
          "name": "OpenAi"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8b565e93-0a7f-47f7-a8f1-4be3d0e53e79",
              "name": "Description",
              "value": "={{ $json.Items.Description }}",
              "type": "string"
            },
            {
              "id": "b725ac85-a5d3-4c76-93cd-96d620eb8be1",
              "name": "Quantity",
              "value": "={{ $json.Items.Quantity }}",
              "type": "string"
            },
            {
              "id": "c8b2252d-e993-4302-b8f7-fd101a0c5697",
              "name": "Unit_Value",
              "value": "={{ $json.Items.Unit_Value }}",
              "type": "string"
            },
            {
              "id": "6944de35-3853-4574-91e5-0d5ac8ec3a94",
              "name": "Total_Value",
              "value": "={{ $json.Items.Total_Value }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6afb950a-3af8-4173-9baf-4b943a8fe79e",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        1780
      ],
      "notesInFlow": true,
      "notes": "Prepara toda los items de la factura para clasificar por Producto o Servicio"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b5db9061-d7ff-4482-98f9-f0c3ac0c4a18",
              "name": "Items",
              "value": "={{ $json.data[1].choices[0].message.content }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "3d56055d-2b2d-4979-a81b-8491fce754e2",
      "name": "Items Data 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -300,
        1700
      ],
      "executeOnce": true,
      "notesInFlow": true,
      "notes": "Prepara toda los items de la factura para liquidar ReteFuente"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "348460da-c489-4d37-b6eb-5a84d4f55464",
              "name": "Description",
              "value": "={{ $('Edit Fields').item.json.Description }}",
              "type": "string"
            },
            {
              "id": "eb5b5f0a-73fb-4d0c-922e-3fb69411fb63",
              "name": "Quantity",
              "value": "={{ $('Edit Fields').item.json.Quantity }}",
              "type": "string"
            },
            {
              "id": "01edaea9-14dd-4955-9dd2-5c321683b4dc",
              "name": "Unit_Value",
              "value": "={{ $('Edit Fields').item.json.Unit_Value }}",
              "type": "string"
            },
            {
              "id": "8666c88d-d41c-48f2-bbf2-07e99771e07c",
              "name": "Total_Value",
              "value": "={{ $('Edit Fields').item.json.Total_Value }}",
              "type": "string"
            },
            {
              "id": "e9a1cc88-09dd-42e6-b401-ce8c3cc89953",
              "name": "ExpenseType",
              "value": "={{ $json.choices[0].message.content.ExpenseType }}",
              "type": "string"
            },
            {
              "id": "4cd0f626-8973-4024-9f79-27dd1a9483ed",
              "name": "Detalle",
              "value": "={{ $json.choices[0].message.content.Detalle }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8db75461-3d89-4f88-98e9-02301f44a56a",
      "name": "Items Expense Type",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1780,
        1800
      ],
      "notesInFlow": true,
      "notes": "Item de la factura clasificado por Producto o Servicio"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6f3248dc-b292-4273-8442-8f6aa7d8a118",
              "name": "Description",
              "value": "={{ $json.Description }}",
              "type": "string"
            },
            {
              "id": "df419e2f-9ee9-49d5-8076-8d570f624a33",
              "name": "Quantity",
              "value": "={{ $json.Quantity }}",
              "type": "string"
            },
            {
              "id": "65e07cec-1831-493a-8f90-8a007bd2966a",
              "name": "Unit_Value",
              "value": "={{ $json.Unit_Value }}",
              "type": "string"
            },
            {
              "id": "8b99c7f9-9bd9-4296-b945-8f2020c8f793",
              "name": "Total_Value",
              "value": "={{ $json.Total_Value }}",
              "type": "string"
            },
            {
              "id": "9da05c52-8c1c-403a-a0b5-f4138c070a73",
              "name": "ExpenseType",
              "value": "={{ $json.ExpenseType }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d2d1ea73-ed31-413f-8e65-8717a58ee410",
      "name": "Items Expense Type 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        1620
      ],
      "notesInFlow": true,
      "alwaysOutputData": true,
      "notes": "Item de la factura clasificado por Producto o Servicio"
    },
    {
      "parameters": {},
      "id": "c4d9339b-28f8-47aa-afe0-921b821ea7ee",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -880,
        1700
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "Retefuente_TAX",
        "returnAll": true,
        "filterType": "none"
      },
      "id": "3b9255b2-478a-4f6a-b400-fd974b03ffdb",
      "name": "Tablas ReteFuente",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -6060,
        1660
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "U4Lx0acH9rOsOwsN",
          "name": "Supabase InvoiceData"
        }
      },
      "notes": "Parametrización Retención en la Fuente"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "298dbff7-ba9e-49ef-a040-a12f5c05b7e4",
      "name": "Parametrizacion ReteFuente",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -5840,
        1660
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "ReteICA_TAX",
        "returnAll": true,
        "filterType": "none"
      },
      "id": "edb43d9b-4c81-4b5f-baab-d90c84aa812d",
      "name": "Tabla ICA",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5400,
        1660
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "supabaseApi": {
          "id": "U4Lx0acH9rOsOwsN",
          "name": "Supabase InvoiceData"
        }
      },
      "notes": "Parametrización ICA"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "46f631e4-2578-43ac-adb2-34521a3561b7",
      "name": "Parametrizacion ICA",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -5180,
        1660
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aaf1aed6-347b-4119-a406-9c3f6dab2339",
              "name": "Parametros ReteFuente",
              "value": "={{ $json.data }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "7aafd84d-344f-4aaf-88f2-58e443f53d60",
      "name": "Parametros ReteFuente",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5620,
        1660
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "257e7136-3b65-4f7d-b7a5-7bdbe3e21153",
              "name": "Parametros ICA",
              "value": "={{ $json.data }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "cc012d4c-1dd5-4625-aec6-8066a0312d31",
      "name": "Parametros ICA",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4960,
        1660
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data[0].ReceiverParty_TaxLevelCode }}",
                    "rightValue": "O-15",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Autorretenedor"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d7bfd2a6-fa85-4277-ac37-b1a6594f4956",
                    "leftValue": "={{ $json.data[0].ReceiverParty_TaxLevelCode }}",
                    "rightValue": "O-12",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "R. Simplificado"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "fallbackOutput": "extra",
          "allMatchingOutputs": true
        }
      },
      "id": "de515858-1821-43bd-8176-2d592c58e753",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -400,
        1440
      ],
      "executeOnce": true,
      "notesInFlow": true,
      "notes": "Clasificación según Responsabilidad Fiscal"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "ce766eba-4e26-45d0-94d6-c3eb58a8a4ee",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1040,
        1580
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "={{ $item(3).$node[\"AI_Variables\"].json[\"ActualModel\"] }}",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $item(3).$node[\"AI_Variables\"].json[\"SystemPrompt\"] }}",
              "role": "system"
            },
            {
              "content": "={{ $item(3).$node[\"AI_Variables\"].json[\"UserPrompt_1\"] }}"
            },
            {
              "content": "={{ $item(3).$node[\"AI_Variables\"].json[\"UserPrompt_2\"] }}"
            },
            {
              "content": "={{ $item(3).$node[\"AI_Variables\"].json[\"UserPrompt_3\"] }}"
            },
            {
              "content": "={{ $item(3).$node[\"AI_Variables\"].json[\"UserPrompt_4\"] }}"
            },
            {
              "content": "=Item Description\n{{ $json.Description }}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {
          "maxTokens": 4096,
          "temperature": "={{ $item(3).$node[\"AI_Variables\"].json[\"Temperature\"] }}"
        }
      },
      "id": "ea352dd8-3954-4feb-83c5-195f327e5d06",
      "name": "Invoice Description1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        620,
        1780
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "0r1L7QIDC5ZRtM0r",
          "name": "OpenAi"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "={{ $item(4).$node[\"AI_Variables\"].json[\"ActualModel\"] }}",
          "mode": "id"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $item(4).$node[\"AI_Variables\"].json[\"SystemPrompt\"] }}",
              "role": "system"
            },
            {
              "content": "={{ $item(4).$node[\"AI_Variables\"].json[\"UserPrompt_1\"] }}"
            },
            {
              "content": "={{ $item(4).$node[\"AI_Variables\"].json[\"UserPrompt_2\"] }}"
            },
            {
              "content": "={{ $item(4).$node[\"AI_Variables\"].json[\"UserPrompt_3\"] }}"
            },
            {
              "content": "={{ $item(4).$node[\"AI_Variables\"].json[\"UserPrompt_3\"] }}"
            },
            {
              "content": "={{ $item(4).$node[\"AI_Variables\"].json[\"UserPrompt_4\"] }}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {
          "maxTokens": 4096,
          "temperature": "={{ $item(4).$node[\"AI_Variables\"].json[\"Temperature\"] }}"
        }
      },
      "id": "ff87901c-2bfb-4ee4-834c-eec3951b24c8",
      "name": "Invoice_Type",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        840,
        1680
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "0r1L7QIDC5ZRtM0r",
          "name": "OpenAi"
        }
      },
      "onError": "continueErrorOutput"
    }
  ],
  "connections": {
    "XML Data": {
      "main": [
        [
          {
            "node": "XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Files / XML": {
      "main": [
        [
          {
            "node": "XML Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "InvoiceDB": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log  5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Log 2": {
      "main": [
        [
          {
            "node": "Error Handling",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All_Invoice_Data": {
      "main": [
        [
          {
            "node": "Prepare Data for DB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data for DB": {
      "main": [
        [
          {
            "node": "Model Test",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log  4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Log  3": {
      "main": [
        [
          {
            "node": "Error Handling",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Log  4": {
      "main": [
        [
          {
            "node": "Error Handling",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Log  5": {
      "main": [
        [
          {
            "node": "Error Handling",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Log ": {
      "main": [
        [
          {
            "node": "Error Handling",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Model Test": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "XML": {
      "main": [
        [
          {
            "node": "Extract XML Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract XML Data": {
      "main": [
        [
          {
            "node": "Agregador DataXML",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Tablas ReteFuente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Files": {
      "main": [
        [
          {
            "node": "Get Files / XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "VendorAccounts": {
      "main": [
        [
          {
            "node": "Clean JSON",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agregador DataXML": {
      "main": [
        [
          {
            "node": "Invoice Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Items": {
      "main": [
        [
          {
            "node": "Agregador Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agregador Items": {
      "main": [
        [
          {
            "node": "Items Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Invoice Description",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Invoice Data": {
      "main": [
        [
          {
            "node": "VendorAccounts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean JSON": {
      "main": [
        [
          {
            "node": "Agregador Parm Terceros",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI_Variables": {
      "main": [
        [
          {
            "node": "List Files",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agregador Parm Terceros": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Description": {
      "main": [
        [
          {
            "node": "Data_XML_Invoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data_XML_Invoice": {
      "main": [
        [
          {
            "node": "Format_XMLInvoice_Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format_XMLInvoice_Data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Handling": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Account_Classification": {
      "main": [
        [
          {
            "node": "All_Invoice_Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log  3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Items Expense Type 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Items Data": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Invoice Description": {
      "main": [
        [
          {
            "node": "Description",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Log 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Items Data 2": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tablas ReteFuente": {
      "main": [
        [
          {
            "node": "Parametrizacion ReteFuente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parametrizacion ReteFuente": {
      "main": [
        [
          {
            "node": "Parametros ReteFuente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tabla ICA": {
      "main": [
        [
          {
            "node": "Parametrizacion ICA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parametrizacion ICA": {
      "main": [
        [
          {
            "node": "Parametros ICA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parametros ReteFuente": {
      "main": [
        [
          {
            "node": "Tabla ICA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parametros ICA": {
      "main": [
        [
          {
            "node": "AI_Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Invoice Description1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Items Expense Type": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Replace Me2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Items Data 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Items Expense Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Invoice Description1": {
      "main": [
        [
          {
            "node": "Invoice_Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Invoice_Type": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "12ce5dd4-35d9-4f6d-a909-8fe1a609ae7e",
  "triggerCount": 0,
  "tags": []
}
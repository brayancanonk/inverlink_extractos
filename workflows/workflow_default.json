{
  "fileName": "Accounting_Records_v3___4__ReteICA.json",
  "fileContent": "{\n  \"createdAt\": \"2024-10-28T21:21:42.277Z\",\n  \"updatedAt\": \"2025-06-18T17:44:54.818Z\",\n  \"id\": \"dkVCflBehjwg5Bv6\",\n  \"name\": \"Accounting Records v3 - 4. ReteICA\",\n  \"active\": true,\n  \"isArchived\": false,\n  \"nodes\": [\n    {\n      \"parameters\": {\n        \"operation\": \"search\",\n        \"base\": {\n          \"__rl\": true,\n          \"value\": \"appxDB6mSqj7XDzIC\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"InvoiceData\",\n          \"cachedResultUrl\": \"https://airtable.com/appxDB6mSqj7XDzIC\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"value\": \"tblPHIUqpr9gmLfZJ\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"AIModels_Prompts\",\n          \"cachedResultUrl\": \"https://airtable.com/appxDB6mSqj7XDzIC/tblPHIUqpr9gmLfZJ\"\n        },\n        \"filterByFormula\": \"ActualProject = \\\"Accounting Records\\\"\",\n        \"options\": {},\n        \"sort\": {\n          \"property\": [\n            {\n              \"field\": \"ID\"\n            }\n          ]\n        }\n      },\n      \"id\": \"9dec3baa-8e16-4a72-a69c-7b9dbf52702b\",\n      \"name\": \"AI_Variables\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        180,\n        0\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"qt2DSN1Xi7hBivEb\",\n          \"name\": \"Airtable Personal Access Token\"\n        }\n      },\n      \"notes\": \"Parametrización modelos AI y Prompts\"\n    },\n    {\n      \"parameters\": {\n        \"aggregate\": \"aggregateAllItemData\",\n        \"options\": {}\n      },\n      \"id\": \"6928fa1b-8a42-41ac-8962-8a86b5e52b41\",\n      \"name\": \"Parametrizacion ReteFuente\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"typeVersion\": 1,\n      \"position\": [\n        560,\n        0\n      ],\n      \"executeOnce\": false\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"636743ae-91b3-42d6-8f1e-9fde1287c121\",\n              \"name\": \"Items\",\n              \"value\": \"={{ $('Webhook').item.json.body.Items }}\",\n              \"type\": \"array\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"52e262b0-6e66-49f5-a28d-bc0e20f10816\",\n      \"name\": \"Mapping Items\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        960,\n        0\n      ],\n      \"alwaysOutputData\": true\n    },\n    {\n      \"parameters\": {\n        \"httpMethod\": \"POST\",\n        \"path\": \"47b5e880-773a-4ae0-ab0a-1fe51c081b29\",\n        \"responseMode\": \"responseNode\",\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"typeVersion\": 2,\n      \"position\": [\n        0,\n        0\n      ],\n      \"id\": \"0570dfa8-00e4-4049-ba1e-4b6769ffa649\",\n      \"name\": \"Webhook\",\n      \"webhookId\": \"94651882-8d9b-4998-90b4-c4b54eb9aafe\"\n    },\n    {\n      \"parameters\": {\n        \"respondWith\": \"allIncomingItems\",\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1.1,\n      \"position\": [\n        1660,\n        -220\n      ],\n      \"id\": \"34271e8d-138a-444c-898d-e959576e09d0\",\n      \"name\": \"Respond to Webhook\"\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"getAll\",\n        \"tableId\": \"ReteICA_TAX\",\n        \"returnAll\": true,\n        \"filterType\": \"none\"\n      },\n      \"id\": \"e78a5f6f-c9a0-4293-9c24-1d808946d556\",\n      \"name\": \"Tablas ReteICA\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        360,\n        0\n      ],\n      \"alwaysOutputData\": true,\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      },\n      \"notes\": \"Parametrización Retención en la Fuente\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"aaf1aed6-347b-4119-a406-9c3f6dab2339\",\n              \"name\": \"Parametros ReteFuente\",\n              \"value\": \"={{ $json.data }}\",\n              \"type\": \"array\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"616b5300-918c-46ca-9a36-afbe68034e65\",\n      \"name\": \"Parametros ReteICA\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        760,\n        0\n      ],\n      \"executeOnce\": true\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"get\",\n        \"tableId\": \"InvoicesData\",\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"Invoice_uuid\",\n              \"keyValue\": \"={{ $json.Items[0].Invoice_uuid }}\"\n            }\n          ]\n        }\n      },\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        1160,\n        0\n      ],\n      \"id\": \"30f7d7eb-9f3a-4a4b-af89-8eeba1396aad\",\n      \"name\": \"InvoiceData\",\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"get\",\n        \"tableId\": \"Param_Cliente\",\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"ReceiverParty_CompanyID\",\n              \"keyValue\": \"={{ $json.ReceiverParty_CompanyID }}\"\n            }\n          ]\n        }\n      },\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        1360,\n        0\n      ],\n      \"id\": \"afb95899-f7f2-4a24-8b05-81438fd14058\",\n      \"name\": \"Param_Cliente\",\n      \"alwaysOutputData\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      },\n      \"onError\": \"continueRegularOutput\"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"ff48ed37-384c-4afd-8fc7-fdb885dfaba4\",\n              \"leftValue\": \"={{ $json.SenderParty_TaxLevelCode }}\",\n              \"rightValue\": \"\\\"O-13\\\"\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"looseTypeValidation\": true,\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        1820,\n        0\n      ],\n      \"id\": \"71a0820f-5f6e-4c32-ab62-b74c8eaede55\",\n      \"name\": \"Gran_contribuyente\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"const factura = $json;\\nconst ciudadRetencion = String(factura.SenderParty_CityID || '').trim();\\nconst actividadEconomica = String(factura.ActividadEconomica || '').trim();\\nconst baseGravable = Number(factura.LineExtensionAmount) || 0;\\nconst umbralRetencion = 100000;\\n\\nconst errores = [];\\nconst errorLog = {\\n    Error_uuid: (typeof crypto !== 'undefined' && crypto.randomUUID) ? crypto.randomUUID() : (factura.Invoice_uuid || null),\\n    ParentDocumentID: factura.ParentDocumentID || null,\\n    IssueDate: factura.IssueDate || null,\\n    SenderParty_RegistrationName: factura.SenderParty_RegistrationName || null,\\n    SenderParty_CompanyID: factura.SenderParty_CompanyID || null,\\n    ReceiverParty_RegistrationName: factura.ReceiverParty_RegistrationName || null,\\n    ReceiverParty_CompanyID: factura.ReceiverParty_CompanyID || null,\\n    FileName: factura.FileName || null,\\n    CUFE: factura.CUFE || null,\\n    \\\"Accounting_Records – Módulo\\\": \\\"ReteICA\\\"\\n};\\n\\nif (!ciudadRetencion) errores.push(\\\"No se encontró la ciudad de retención.\\\");\\nif (!actividadEconomica) errores.push(\\\"No se encontró actividad económica.\\\");\\nif (!factura.Invoice_uuid) errores.push(\\\"No se encontró Invoice_uuid.\\\");\\nif (!baseGravable) errores.push(\\\"No se encontró base gravable (LineExtensionAmount).\\\");\\n\\nconst tarifasReteICA = $items('Tablas ReteICA');\\nif (!tarifasReteICA || tarifasReteICA.length === 0) {\\n    errores.push(\\\"No se encontraron tarifas de ReteICA en la base de datos.\\\");\\n}\\n\\nlet tarifaICA = 0;\\nif (errores.length === 0) {\\n    const tarifaEncontrada = tarifasReteICA.find(item => \\n        String(item.json.Cod_Dane) === ciudadRetencion && \\n        String(item.json.CIIU_Code) === actividadEconomica\\n    );\\n    if (tarifaEncontrada) {\\n        tarifaICA = parseFloat(tarifaEncontrada.json.Tarifa) || 0;\\n    } else {\\n        errores.push(`No se encontró tarifa para ciudad ${ciudadRetencion} y actividad económica ${actividadEconomica}`);\\n    }\\n}\\n\\nif (errores.length === 0 && baseGravable < umbralRetencion) {\\n    errores.push(`La base gravable (${baseGravable}) no cumple el umbral para aplicar ReteICA`);\\n}\\n\\nif (errores.length > 0) {\\n    return [{\\n        json: {\\n            ...factura,\\n            Invoice_uuid: factura.Invoice_uuid || null,\\n            ReteICA: 0,\\n            AplicaReteICA: false,\\n            Error: true,\\n            ErrorMessages: errores,\\n            // Mapping directo para tabla Error_log\\n            Error_log: {\\n                ...errorLog,\\n                Error_Log: errores.join('; '),\\n                Error_Date: (new Date()).toISOString()\\n            }\\n        }\\n    }];\\n}\\n\\nconst reteICA = baseGravable * tarifaICA;\\n\\nreturn [{\\n    json: {\\n        ...factura,\\n        Invoice_uuid: factura.Invoice_uuid,\\n        ReteICA: reteICA,\\n        AplicaReteICA: true,\\n        Error: false\\n    }\\n}];\\n\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        2800,\n        -260\n      ],\n      \"id\": \"ed573a0c-f12f-461e-9d50-1adc572effaa\",\n      \"name\": \"Calculo\",\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"update\",\n        \"tableId\": \"Accounting_Records\",\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"Invoice_uuid\",\n              \"condition\": \"eq\",\n              \"keyValue\": \"={{ $json.Invoice_uuid }}\"\n            }\n          ]\n        },\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ReteICA\",\n              \"fieldValue\": \"={{ $json.ReteICA }}\"\n            }\n          ]\n        }\n      },\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        3060,\n        -240\n      ],\n      \"id\": \"1549a1f0-bf25-4446-8add-01b725ae72b3\",\n      \"name\": \"Supabase\",\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"loose\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"085e9fe3-e1b9-47e3-b436-72d3b635ecd9\",\n              \"leftValue\": \"={{$json.ExpenseType}}\",\n              \"rightValue\": \"Services Received\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"looseTypeValidation\": true,\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        2220,\n        20\n      ],\n      \"id\": \"072b569d-dd75-4964-a146-4ae15393198a\",\n      \"name\": \"Expensive_Type\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Obtener datos de la factura desde InvoiceData\\nconst factura = $items('InvoiceData')[0].json;\\n\\n// Obtener datos del receptor desde Param_Cliente\\nconst paramCliente = $items('Param_Cliente').find(item => item.json.ReceiverParty_CompanyID === factura.ReceiverParty_CompanyID);\\n\\nif (!paramCliente) {\\n    throw new Error(`⚠️ No se encontró información del receptor en Param_Cliente para el NIT: ${factura.ReceiverParty_CompanyID}`);\\n}\\n\\n// Validar si la factura tiene la información obligatoria\\nif (!factura.ExpenseType || !factura.SenderParty_TaxLevelCode || !factura.SenderParty_CityID || !factura.SenderParty_CityName || !factura.Invoice_uuid) {\\n    throw new Error(`⚠️ La factura con UUID ${factura.Invoice_uuid || \\\"Desconocido\\\"} no contiene toda la información requerida.`);\\n}\\n\\n// Fusionar datos con Param_Cliente\\nreturn [{ \\n    json: { \\n        ...paramCliente.json,\\n        ExpenseType: factura.ExpenseType.trim(),\\n        SenderParty_TaxLevelCode: factura.SenderParty_TaxLevelCode,\\n        SenderParty_CityID: factura.SenderParty_CityID,\\n        SenderParty_CityName: factura.SenderParty_CityName,\\n        ReceiverParty_CityID: paramCliente.json.ReceiverParty_CityID,\\n        ReceiverParty_CityName: paramCliente.json.ReceiverParty_CityName,\\n        Invoice_uuid: factura.Invoice_uuid\\n    } \\n}];\\n\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        2580,\n        100\n      ],\n      \"id\": \"a7918d47-866e-4167-9fc3-c96735e01c45\",\n      \"name\": \"Validación_ciudad_producto\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Obtener datos de la factura desde InvoiceData\\nconst factura = $items('InvoiceData')[0].json;\\n\\n// Obtener datos del receptor desde Param_Cliente\\nconst paramCliente = $items('Param_Cliente').find(item => item.json.ReceiverParty_CompanyID === factura.ReceiverParty_CompanyID) || { json: {} };\\n\\n// Fusionar ambos JSON en un solo objeto\\nreturn [{ \\n    json: { \\n        ...paramCliente.json,\\n        ExpenseType: factura.ExpenseType ? factura.ExpenseType.trim() : \\\"Products\\\",\\n        SenderParty_TaxLevelCode: factura.SenderParty_TaxLevelCode || \\\"No Disponible\\\",\\n        SenderParty_CityID: factura.SenderParty_CityID || null,\\n        SenderParty_CityName: factura.SenderParty_CityName || null,\\n        ReceiverParty_CityID: paramCliente.json.ReceiverParty_CityID || null,\\n        ReceiverParty_CityName: paramCliente.json.ReceiverParty_CityName || null,\\n        Invoice_uuid: factura.Invoice_uuid || null\\n    } \\n}];\\n\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        1640,\n        0\n      ],\n      \"id\": \"947093fc-cfdb-414d-b856-d9caea51dd57\",\n      \"name\": \"Limpieza\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Obtener datos de la factura desde InvoiceData\\nconst factura = $items('InvoiceData')[0].json;\\n\\n// Obtener datos del receptor desde Param_Cliente\\nconst paramCliente = $items('Param_Cliente').find(item => item.json.ReceiverParty_CompanyID === factura.ReceiverParty_CompanyID);\\n\\nif (!paramCliente) {\\n    throw new Error(`⚠️ No se encontró información del receptor en Param_Cliente para el NIT: ${factura.ReceiverParty_CompanyID}`);\\n}\\n\\n// Validar si la factura tiene la información obligatoria\\nif (!factura.ExpenseType || !factura.SenderParty_TaxLevelCode || !factura.SenderParty_CityID || !factura.SenderParty_CityName || !factura.Invoice_uuid) {\\n    throw new Error(`⚠️ La factura con UUID ${factura.Invoice_uuid || \\\"Desconocido\\\"} no contiene toda la información requerida.`);\\n}\\n\\n// Fusionar datos con Param_Cliente\\nreturn [{ \\n    json: { \\n        ...paramCliente.json,\\n        ExpenseType: factura.ExpenseType.trim(),\\n        SenderParty_TaxLevelCode: factura.SenderParty_TaxLevelCode,\\n        SenderParty_CityID: factura.SenderParty_CityID,\\n        SenderParty_CityName: factura.SenderParty_CityName,\\n        ReceiverParty_CityID: paramCliente.json.ReceiverParty_CityID,\\n        ReceiverParty_CityName: paramCliente.json.ReceiverParty_CityName,\\n        Invoice_uuid: factura.Invoice_uuid\\n    } \\n}];\\n\\n\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        2040,\n        20\n      ],\n      \"id\": \"b5ff9370-fa5c-4390-a779-1160a1944a51\",\n      \"name\": \"Val_ExpenseType\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"const factura = $json;\\nconst errores = [];\\n\\nconst errorLog = {\\n    Error_uuid: (typeof crypto !== 'undefined' && crypto.randomUUID) ? crypto.randomUUID() : (factura.Invoice_uuid || null),\\n    ParentDocumentID: factura.ParentDocumentID || null,\\n    IssueDate: factura.IssueDate || null,\\n    SenderParty_RegistrationName: factura.SenderParty_RegistrationName || null,\\n    SenderParty_CompanyID: factura.SenderParty_CompanyID || null,\\n    ReceiverParty_RegistrationName: factura.ReceiverParty_RegistrationName || null,\\n    ReceiverParty_CompanyID: factura.ReceiverParty_CompanyID || null,\\n    FileName: factura.FileName || null,\\n    CUFE: factura.CUFE || null,\\n    \\\"Accounting_Records – Módulo\\\": \\\"ReteICA\\\"\\n};\\n\\n// Validar datos obligatorios\\nif (!factura.SenderParty_CityID || !factura.SenderParty_CityName)\\n    errores.push(`No se puede determinar la ciudad de prestación del servicio para la factura ${factura.Invoice_uuid || \\\"Desconocido\\\"}. Se requiere validación manual.`);\\n\\nif (!factura.ReceiverParty_CompanyID)\\n    errores.push(`No se encontró ReceiverParty_CompanyID en la factura ${factura.Invoice_uuid || \\\"Desconocido\\\"}`);\\n\\n// Buscar info cliente\\nconst paramCliente = $items('Param_Cliente').find(item => item.json.ReceiverParty_CompanyID === factura.ReceiverParty_CompanyID);\\nif (!paramCliente)\\n    errores.push(`No se encontró información del receptor en Param_Cliente para el NIT: ${factura.ReceiverParty_CompanyID}`);\\n\\n// CIIU\\nlet actividadEconomica = null;\\nif (paramCliente) {\\n    actividadEconomica = paramCliente.json.CIIU_1_Des || paramCliente.json.CIIU_2_Des || paramCliente.json.CIIU_3_Des || paramCliente.json.CIIU_4_Des;\\n    if (!actividadEconomica)\\n        errores.push(`No se encontró información de actividad económica en Param_Cliente para el NIT: ${factura.ReceiverParty_CompanyID}`);\\n}\\n\\nlet ciudadesRegistradas = [];\\nif (paramCliente) {\\n    for (let i = 1; i <= 20; i++) {\\n        if (paramCliente.json[`ICA_CityID_${i}`]) {\\n            ciudadesRegistradas.push(paramCliente.json[`ICA_CityID_${i}`]);\\n        }\\n    }\\n}\\n\\nlet declaraReteICA = false;\\nif (factura.SenderParty_CityID && ciudadesRegistradas.length > 0)\\n    declaraReteICA = ciudadesRegistradas.includes(factura.SenderParty_CityID);\\n\\nif (errores.length > 0) {\\n    return [{\\n        json: {\\n            ...factura,\\n            DeclaraReteICA: false,\\n            ActividadEconomica: actividadEconomica || null,\\n            Error: true,\\n            ErrorMessages: errores,\\n            Error_log: {\\n                ...errorLog,\\n                Error_Log: errores.join('; '),\\n                Error_Date: (new Date()).toISOString()\\n            }\\n        }\\n    }];\\n}\\n\\nreturn [{\\n    json: {\\n        SenderParty_CityID: factura.SenderParty_CityID,\\n        SenderParty_CityName: factura.SenderParty_CityName,\\n        DeclaraReteICA: declaraReteICA,\\n        ActividadEconomica: actividadEconomica,\\n        Invoice_uuid: factura.Invoice_uuid,\\n        Error: false\\n    }\\n}];\\n\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        2560,\n        -260\n      ],\n      \"id\": \"5ef29ed9-2be5-4f70-b05e-25d0e4bac41c\",\n      \"name\": \"Validación_ciudad_servicio\",\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"content\": \"ALL DATA\\n\\nBases de datos necesarios para la correcta ejecición del flujo.\",\n        \"height\": 460,\n        \"width\": 1560,\n        \"color\": 7\n      },\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -40,\n        -180\n      ],\n      \"id\": \"b78db09a-9411-4bd4-8b6e-cd81c559dcfd\",\n      \"name\": \"Sticky Note\"\n    },\n    {\n      \"parameters\": {\n        \"content\": \"LIMPIEZA DE INFORMACIÓN Y VARIABLES\",\n        \"height\": 880,\n        \"width\": 840,\n        \"color\": 7\n      },\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        1560,\n        -340\n      ],\n      \"id\": \"5d316e32-d8fa-4f22-8f15-7e1e434271f1\",\n      \"name\": \"Sticky Note1\"\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"Error_Log\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ParentDocumentID\",\n              \"fieldValue\": \"={{ $json.Error_log.ParentDocumentID }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.Error_log.SenderParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.Error_log.SenderParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.Error_log.ReceiverParty_RegistrationName }\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.Error_log.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"FileName\",\n              \"fieldValue\": \"={{ $json.Error_log.FileName }}\"\n            },\n            {\n              \"fieldId\": \"Error_Log\",\n              \"fieldValue\": \"={{ $json.Error_log.Error_Log }}\"\n            },\n            {\n              \"fieldId\": \"CUFE\",\n              \"fieldValue\": \"={{ $json.Error_log.CUFE }}\"\n            },\n            {\n              \"fieldId\": \"IssueDate\",\n              \"fieldValue\": \"={{ $json.Error_log.IssueDate }}\"\n            },\n            {\n              \"fieldId\": \"Accounting_Records - Módulo\",\n              \"fieldValue\": \"4. ReteICA\"\n            }\n          ]\n        }\n      },\n      \"id\": \"a1d9c981-5a3f-4242-ae2f-778fa49a491d\",\n      \"name\": \"Error_Log1\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        2560,\n        320\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"content\": \"ACTUALIZACIÓN Y LIQUIDACIÓN DE RETEICA\",\n        \"height\": 880,\n        \"width\": 840,\n        \"color\": 7\n      },\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        2440,\n        -340\n      ],\n      \"id\": \"7e2dd655-9b94-4386-be98-64cceb488354\",\n      \"name\": \"Sticky Note2\"\n    }\n  ],\n  \"connections\": {\n    \"AI_Variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Tablas ReteICA\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parametrizacion ReteFuente\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parametros ReteICA\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Mapping Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"InvoiceData\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI_Variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Tablas ReteICA\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Parametrizacion ReteFuente\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Parametros ReteICA\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Mapping Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"InvoiceData\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Param_Cliente\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Param_Cliente\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Limpieza\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Gran_contribuyente\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Val_ExpenseType\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Calculo\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Supabase\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Supabase\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Expensive_Type\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validación_ciudad_servicio\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Validación_ciudad_producto\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Limpieza\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gran_contribuyente\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validación_ciudad_producto\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Val_ExpenseType\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Expensive_Type\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validación_ciudad_servicio\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Calculo\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error_Log1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"staticData\": null,\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true\n  },\n  \"pinData\": {},\n  \"versionId\": \"eb79d210-6815-45c7-877b-ae56fc306a14\",\n  \"triggerCount\": 1,\n  \"tags\": [\n    {\n      \"createdAt\": \"2025-02-04T13:55:27.606Z\",\n      \"updatedAt\": \"2025-02-04T13:55:27.606Z\",\n      \"id\": \"sFbVSiMOCzwy8ZoJ\",\n      \"name\": \"Causacion\"\n    }\n  ]\n}"
}
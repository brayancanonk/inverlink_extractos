{
  "fileName": "Inverlink___Flujo_Extractos.json",
  "fileContent": "{\n  \"createdAt\": \"2025-06-03T23:15:35.227Z\",\n  \"updatedAt\": \"2025-07-16T22:12:25.739Z\",\n  \"id\": \"S44HHbHmkytcu1GT\",\n  \"name\": \"Inverlink - Flujo Extractos\",\n  \"active\": false,\n  \"isArchived\": false,\n  \"nodes\": [\n    {\n      \"parameters\": {},\n      \"type\": \"n8n-nodes-base.manualTrigger\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3980,\n        -360\n      ],\n      \"id\": \"53f55e48-26b1-4299-b41a-3c1d4058d42f\",\n      \"name\": \"When clicking ‘Execute workflow’\"\n    },\n    {\n      \"parameters\": {\n        \"content\": \"## Flujo de extractos\\n\\n* Se dividen los datos extraídos de los extractos, gravamentos y datos de los extractos\\n* Se realiza el cargue de datos en los dos diferentes Excel\\n* Se realiza limpieza de información de los extractos de Jeeves, para hacer el cargue, se hace cambio de formato en fechas \\n\\n* Control del tema de bebidas alcoholicas\",\n        \"height\": 240,\n        \"width\": 660\n      },\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -1040,\n        -1200\n      ],\n      \"id\": \"a57f7bb5-98af-4398-b1eb-dc57c3183979\",\n      \"name\": \"Sticky Note\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a11a01a3-1c39-4d6e-9f8c-72954c1e3f05\",\n              \"name\": \"Descripción\",\n              \"value\": \"={{ $json.descripcion }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"a8c11fb7-0dbc-4958-a733-2b93453c665d\",\n              \"name\": \"No de Compte\",\n              \"value\": \"=\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"cbf29296-a83a-4d14-b70e-f421d446801d\",\n              \"name\": \"numeroAutorizacion\",\n              \"value\": \"={{ $json.numeroAutorizacion }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"04976e36-a5e5-4d8a-bb61-6a43c4d1dd62\",\n              \"name\": \"Fecha (Día/Mes/Año)\",\n              \"value\": \"={{ $json.fecha }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"8eae6f48-5dc2-4d8f-8e16-9c9b44dc44ff\",\n              \"name\": \"Valor Compra\",\n              \"value\": \"={{ $json.valorOriginal }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"52bf59f5-cafb-4ceb-a914-8e2d93e0fe21\",\n              \"name\": \"Cargos y Abonos\",\n              \"value\": \"={{ $json.cargosAbonos }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"259ed281-b389-4d99-950c-6fc6d0a13271\",\n              \"name\": \"Saldo Diferido\",\n              \"value\": \"={{ $json.saldoDiferir }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"745de008-51ed-42cc-acfb-1e03c97d32a2\",\n              \"name\": \"Plazo\",\n              \"value\": \"=\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"d3b7bae5-7757-4c99-9f7c-ece256a7dd82\",\n              \"name\": \"Cuota Fact.\",\n              \"value\": \"={{ $json.cuotas }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"fab02b78-4766-4140-917e-15f9cf06344c\",\n              \"name\": \"Cuota Pend\",\n              \"value\": \"=\",\n              \"type\": \"number\"\n            },\n            {\n              \"id\": \"5a5ac042-ff48-410b-b9f9-11c19bf531c6\",\n              \"name\": \"Tasa%\",\n              \"value\": \"=\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"183c0f8e-aa53-41fc-be01-23d49a807826\",\n              \"name\": \"NIT\",\n              \"value\": \"={{ $json.NIT }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"5afb5132-57d6-498e-9ed4-ffe8fd55492e\",\n              \"name\": \"Banco\",\n              \"value\": \"={{ $json.banco }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"fdfab014-0c0b-421f-8053-4128c90736e5\",\n              \"name\": \"Tarjeta (últimos dígitos)\",\n              \"value\": \"={{ $json.ultimos4Tarjeta }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"4e1bc5fd-c100-49ba-ae6d-aacf34bc64e8\",\n              \"name\": \"Periodo Extracto\",\n              \"value\": \"={{ $json.periodoExtracto }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"aa1d63d2-62fd-4cb7-ba35-e84c849b25ea\",\n              \"name\": \"titular\",\n              \"value\": \"={{ $json.persona }}\",\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        380,\n        -640\n      ],\n      \"id\": \"ebfc8182-c301-43fd-9c92-1ad56f6ee37a\",\n      \"name\": \"Set Gravamentos\",\n      \"notes\": \"Se envían los gravamentos establecidos para cada banco, ya que cada uno tiene diferente descripción\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a11a01a3-1c39-4d6e-9f8c-72954c1e3f05\",\n              \"name\": \"Descripción\",\n              \"value\": \"={{ $json.descripcion }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"a8c11fb7-0dbc-4958-a733-2b93453c665d\",\n              \"name\": \"=No de Compte\",\n              \"value\": \"={{ $json.numeroAutorizacion }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"cbf29296-a83a-4d14-b70e-f421d446801d\",\n              \"name\": \"Ciudad/País\",\n              \"value\": \"=\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"04976e36-a5e5-4d8a-bb61-6a43c4d1dd62\",\n              \"name\": \"Fecha (Día/Mes/Año)\",\n              \"value\": \"={{ $json.fecha }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"8eae6f48-5dc2-4d8f-8e16-9c9b44dc44ff\",\n              \"name\": \"Valor Compra\",\n              \"value\": \"={{ $json.valorOriginal }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"52bf59f5-cafb-4ceb-a914-8e2d93e0fe21\",\n              \"name\": \"Cargos y Abonos\",\n              \"value\": \"={{ $json.cargosAbonos }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"259ed281-b389-4d99-950c-6fc6d0a13271\",\n              \"name\": \"Saldo Diferido\",\n              \"value\": \"={{ $json.saldoDiferir }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"745de008-51ed-42cc-acfb-1e03c97d32a2\",\n              \"name\": \"Plazo\",\n              \"value\": \"=\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"fab02b78-4766-4140-917e-15f9cf06344c\",\n              \"name\": \"Cuota Pend\",\n              \"value\": \"=\",\n              \"type\": \"number\"\n            },\n            {\n              \"id\": \"5a5ac042-ff48-410b-b9f9-11c19bf531c6\",\n              \"name\": \"Tasa%\",\n              \"value\": \"=\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"183c0f8e-aa53-41fc-be01-23d49a807826\",\n              \"name\": \"NIT\",\n              \"value\": \"={{ $json.NIT }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"5afb5132-57d6-498e-9ed4-ffe8fd55492e\",\n              \"name\": \"Banco\",\n              \"value\": \"={{ $json.banco }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"fdfab014-0c0b-421f-8053-4128c90736e5\",\n              \"name\": \"Tarjeta (últimos dígitos)\",\n              \"value\": \"={{ $json.ultimos4Tarjeta }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"4e1bc5fd-c100-49ba-ae6d-aacf34bc64e8\",\n              \"name\": \"Periodo Extracto\",\n              \"value\": \"={{ $json.periodoExtracto }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"aa1d63d2-62fd-4cb7-ba35-e84c849b25ea\",\n              \"name\": \"titular\",\n              \"value\": \"={{ $json.persona }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"84696921-f692-4d71-8aee-848d830cbe43\",\n              \"name\": \"URL_extracto\",\n              \"value\": \"={{ $json.URl_extracto }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"af11b10b-ecdf-4a8d-b96d-ca9888c59ce9\",\n              \"name\": \"ID_EXTRACTO\",\n              \"value\": \"={{ $json.ID_EXTRACTO }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"cb6b27bd-2a70-4432-9e83-f0f4caa7531d\",\n              \"name\": \"Cuota Fact.\",\n              \"value\": \"={{ $json.tasaFacturada }}\",\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        380,\n        -480\n      ],\n      \"id\": \"83fd82ad-0ef2-4015-9320-358168950e1a\",\n      \"name\": \"Set extractos\",\n      \"notes\": \"Se realiza validación y ajuste de la información para hacer merge con los datos del extracto de Jeeves\"\n    },\n    {\n      \"parameters\": {\n        \"url\": \"={{ $json.urlDownload }}\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"oAuth2Api\",\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"file\"\n            }\n          }\n        }\n      },\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.2,\n      \"position\": [\n        -660,\n        -80\n      ],\n      \"id\": \"4c515030-092f-4b36-acc3-cdc056c5efcb\",\n      \"name\": \"Descarga xlsx\",\n      \"credentials\": {\n        \"oAuth2Api\": {\n          \"id\": \"iCNVrjz2iccszU7h\",\n          \"name\": \"Inverlink sharepoint\"\n        }\n      },\n      \"notes\": \"Se realiza la descarga del archivo XLSX\"\n    },\n    {\n      \"parameters\": {},\n      \"type\": \"n8n-nodes-base.merge\",\n      \"typeVersion\": 3.2,\n      \"position\": [\n        380,\n        -100\n      ],\n      \"id\": \"29899981-4363-4913-9ef6-24123bc222e5\",\n      \"name\": \"Merge\"\n    },\n    {\n      \"parameters\": {\n        \"url\": \"={{ $json.urlDownload }}\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"oAuth2Api\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {}\n          ]\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.2,\n      \"position\": [\n        -1080,\n        -420\n      ],\n      \"id\": \"6c21aa35-4c27-44ed-9dfd-327ef07fde5d\",\n      \"name\": \"Descarga PDF1\",\n      \"credentials\": {\n        \"oAuth2Api\": {\n          \"id\": \"iCNVrjz2iccszU7h\",\n          \"name\": \"Inverlink sharepoint\"\n        }\n      },\n      \"notes\": \"En este nodo se realiza la descarga de los PDF de extractos obtenidos\"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"39b000ab-79ef-41dc-aea7-9e9bc8a8b137\",\n              \"leftValue\": \"={{ $json.name }}\",\n              \"rightValue\": \".pdf\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            },\n            {\n              \"id\": \"51ec3599-4d8b-4f8d-b308-b1edd45c88d4\",\n              \"leftValue\": \"={{ $json.name }}\",\n              \"rightValue\": \".PDF\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            }\n          ],\n          \"combinator\": \"or\"\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        -1300,\n        -280\n      ],\n      \"id\": \"742f5f7d-f73c-4497-92a1-249c58e45e98\",\n      \"name\": \"If3\"\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"pdf\",\n        \"options\": {\n          \"password\": \"860353765\"\n        }\n      },\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -660,\n        -400\n      ],\n      \"id\": \"0ce73b71-0202-4477-849e-3b1679b0cdca\",\n      \"name\": \"extraer texto PDF\",\n      \"notes\": \"En el nodo de extraer texto del PDF se debe configurar la clave del extracto, el cual es el NIT de los extractos 860353765\"\n    },\n    {\n      \"parameters\": {\n        \"url\": \"https://graph.microsoft.com/v1.0/drives/b!PU0gxZ5Z3U2p8sh5AytDNQ0r9LElzUdKoJM90a8dwlNNksuuoU34TpjRp8lz1oPs/root:/REGISTRO%20OPERACIONES%20HELISA(%20Inverlink%20-IEI-%20IIA)/A%C3%91O%202025/INVERLINK%20SAS/c.%20Tarjetas%20de%20Cr%C3%A9dito:/children\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"oAuth2Api\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"json\"\n            }\n          }\n        }\n      },\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.2,\n      \"position\": [\n        -3780,\n        -360\n      ],\n      \"id\": \"69e392a5-5db6-4b8a-8b7a-1524fe6e42e8\",\n      \"name\": \"Listar archivos\",\n      \"credentials\": {\n        \"microsoftSharePointOAuth2Api\": {\n          \"id\": \"NvLfWW6CpSEbWCIO\",\n          \"name\": \"Microsoft SharePoint account\"\n        },\n        \"microsoftGraphSecurityOAuth2Api\": {\n          \"id\": \"3bJKtXRc91GFo2Tj\",\n          \"name\": \"Microsoft Graph Security account\"\n        },\n        \"oAuth2Api\": {\n          \"id\": \"iCNVrjz2iccszU7h\",\n          \"name\": \"Inverlink sharepoint\"\n        }\n      },\n      \"notes\": \"En este nodo se listan todos los datos del folder padre de los meses\"\n    },\n    {\n      \"parameters\": {\n        \"fieldToSplitOut\": \"value\",\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3600,\n        -360\n      ],\n      \"id\": \"c67b299a-8fcd-498f-978e-4bc168c52d9f\",\n      \"name\": \"Split Out1\",\n      \"notes\": \"En este nodo se realiza la división de los items de value de los folder traidos\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Obtener todos los datos de entrada\\nconst todosLosItems = $input.all();\\nconst meses = [];\\n\\nfor (const item of todosLosItems) {\\n  const carpeta = item.json.name; // Declarar la variable con const\\n  meses.push(carpeta);\\n}\\n\\n// Retornar en formato esperado por n8n\\nreturn meses.map(entry => ({ json: { mes: entry } }));\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -3420,\n        -360\n      ],\n      \"id\": \"748e10c3-90b6-444a-aca6-7815f59b3b18\",\n      \"name\": \"Extraer folders mes\",\n      \"notes\": \"En este nodo se debe realizar la extracción de los meses que se tienen actualmente \"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"c8fc3000-a150-4f7b-8cde-735fa181c660\",\n              \"name\": \"MesSeleccionado\",\n              \"value\": \"02. Febrero\",\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -3240,\n        -360\n      ],\n      \"id\": \"f819bb9f-f524-468e-8214-02afa584f162\",\n      \"name\": \"Mes seleccionado\"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"200e1770-0ca4-4f0f-a9a5-a82ab6253c3e\",\n              \"leftValue\": \"={{ $('Extraer folders mes').item.json.mes }}\",\n              \"rightValue\": \"={{ $json.MesSeleccionado }}\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\",\n                \"name\": \"filter.operator.equals\"\n              }\n            }\n          ],\n          \"combinator\": \"or\"\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        -3080,\n        -360\n      ],\n      \"id\": \"329e99e8-cb28-4177-86dc-46c646e48129\",\n      \"name\": \"Obtener mes seleccionado\"\n    },\n    {\n      \"parameters\": {\n        \"url\": \"=https://graph.microsoft.com/v1.0/drives/b!PU0gxZ5Z3U2p8sh5AytDNQ0r9LElzUdKoJM90a8dwlNNksuuoU34TpjRp8lz1oPs/root:/REGISTRO%20OPERACIONES%20HELISA(%20Inverlink%20-IEI-%20IIA)/A%C3%91O%202025/INVERLINK%20SAS/c.%20Tarjetas%20de%20Cr%C3%A9dito/{{ $json.MesSeleccionado }}:/children\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"oAuth2Api\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"json\"\n            }\n          }\n        }\n      },\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.2,\n      \"position\": [\n        -2620,\n        -260\n      ],\n      \"id\": \"f18cd161-f2e3-422d-94d8-04eb40040145\",\n      \"name\": \"Listar Folder mes seleccionado\",\n      \"credentials\": {\n        \"microsoftSharePointOAuth2Api\": {\n          \"id\": \"NvLfWW6CpSEbWCIO\",\n          \"name\": \"Microsoft SharePoint account\"\n        },\n        \"microsoftGraphSecurityOAuth2Api\": {\n          \"id\": \"3bJKtXRc91GFo2Tj\",\n          \"name\": \"Microsoft Graph Security account\"\n        },\n        \"oAuth2Api\": {\n          \"id\": \"iCNVrjz2iccszU7h\",\n          \"name\": \"Inverlink sharepoint\"\n        }\n      },\n      \"notes\": \"se realiza una petición del mes seleccionado y se lista toda la información de los directorios\"\n    },\n    {\n      \"parameters\": {\n        \"url\": \"=https://graph.microsoft.com/v1.0/drives/b!PU0gxZ5Z3U2p8sh5AytDNQ0r9LElzUdKoJM90a8dwlNNksuuoU34TpjRp8lz1oPs/root:/REGISTRO%20OPERACIONES%20HELISA(%20Inverlink%20-IEI-%20IIA)/A%C3%91O%202025/INVERLINK%20SAS/c.%20Tarjetas%20de%20Cr%C3%A9dito/{{ $('Merge1').item.json.MesSeleccionado }}/{{ $json.banco }}:/children\",\n        \"authentication\": \"genericCredentialType\",\n        \"genericAuthType\": \"oAuth2Api\",\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"options\": {\n          \"response\": {\n            \"response\": {\n              \"responseFormat\": \"json\"\n            }\n          }\n        }\n      },\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.2,\n      \"position\": [\n        -1920,\n        -280\n      ],\n      \"id\": \"2409821e-be9d-4ba5-bbfc-f2f807f34bfa\",\n      \"name\": \"Listar documentos\",\n      \"credentials\": {\n        \"microsoftSharePointOAuth2Api\": {\n          \"id\": \"NvLfWW6CpSEbWCIO\",\n          \"name\": \"Microsoft SharePoint account\"\n        },\n        \"microsoftGraphSecurityOAuth2Api\": {\n          \"id\": \"3bJKtXRc91GFo2Tj\",\n          \"name\": \"Microsoft Graph Security account\"\n        },\n        \"oAuth2Api\": {\n          \"id\": \"iCNVrjz2iccszU7h\",\n          \"name\": \"Inverlink sharepoint\"\n        }\n      },\n      \"notes\": \"Se realiza una petición de los archivos que se encuentran dentro del directorio Extractos, ademas se concatena la URL del flujo\"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"d8934554-a0d9-46a7-b4c8-32ee645cfad7\",\n              \"leftValue\": \"={{ $json.banco }}\",\n              \"rightValue\": \"Extractos\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\",\n                \"name\": \"filter.operator.equals\"\n              }\n            }\n          ],\n          \"combinator\": \"or\"\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        -2180,\n        -260\n      ],\n      \"id\": \"21e6e7f2-c8de-48f4-ba54-e95ca5e043b7\",\n      \"name\": \"Validar folder extractos\",\n      \"notes\": \"En este nodo se realiza la validación que se haga el apuntamiento al folder de Extractos. \"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"const prefix = 'EXT';\\nconst timestamp = Date.now();\\n\\n// --- Obtener el nombre del archivo del nodo \\\"Descarga xlsx\\\" ---\\nconst fileName = $node[\\\"Descarga xlsx\\\"].json.name;\\n\\n// --- Extraer el mes del nombre del archivo y convertirlo a nombre del mes ---\\nconst monthNames = [\\n  \\\"Enero\\\", \\\"Febrero\\\", \\\"Marzo\\\", \\\"Abril\\\", \\\"Mayo\\\", \\\"Junio\\\",\\n  \\\"Julio\\\", \\\"Agosto\\\", \\\"Septiembre\\\", \\\"Octubre\\\", \\\"Noviembre\\\", \\\"Diciembre\\\"\\n];\\n\\nlet periodoExtracto = \\\"Desconocido\\\";\\nif (fileName) {\\n  // Buscar patrón de fecha YYYY-MM-DD en el nombre del archivo\\n  const dateMatch = fileName.match(/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/);\\n  if (dateMatch) {\\n    const monthNumber = parseInt(dateMatch[2], 10); // Extraer el mes\\n    periodoExtracto = monthNames[monthNumber - 1]; // Convertir a nombre del mes\\n  }\\n}\\n\\nreturn items.map((item, index) => {\\n  // --- Generar ID_EXTRACTO único para cada elemento ---\\n  const random = Math.floor(Math.random() * 1000);\\n  const ID_EXTRACTO = `${prefix}-${timestamp}-${random}-${index}`;\\n  \\n  // --- Ajustar fecha al formato DD/MM/YYYY ---\\n  const originalDate = item.json[\\\"Fecha (Día/Mes/Año)\\\"];\\n  if (originalDate) {\\n    const [year, month, day] = originalDate.split(\\\"-\\\");\\n    item.json[\\\"Fecha (Día/Mes/Año)\\\"] = `${day}/${month}/${year}`;\\n  }\\n  \\n  // --- Ajustar descripción: primera letra mayúscula, resto minúsculas ---\\n  let descripcion = item.json[\\\"Descripción\\\"];\\n  if (descripcion && typeof descripcion === 'string') {\\n    descripcion = descripcion.toLowerCase(); // Todo en minúscula\\n    item.json[\\\"Descripción\\\"] = descripcion.charAt(0).toUpperCase() + descripcion.slice(1);\\n  }\\n  \\n  // --- Agregar ID_EXTRACTO y Periodo Extracto al objeto ---\\n  item.json[\\\"ID_EXTRACTO\\\"] = ID_EXTRACTO;\\n  item.json[\\\"Periodo Extracto\\\"] = periodoExtracto;\\n  \\n  return item;\\n});\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        40,\n        -80\n      ],\n      \"id\": \"ab02f068-c295-43f3-a08d-b1f03eec84f4\",\n      \"name\": \"Formato datos\",\n      \"notes\": \"Se envían los datos de los extractos con formato establecido, para hacer merge\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"const items = $input.all(); // Obtener todos los ítems de entrada\\nconst resultado = [];\\nfor (const item of items) {\\n  const json = item.json;\\n  if ((json.file?.mimeType === \\\"application/pdf\\\" || json.file?.mimeType === \\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\") && json.name) {\\n    resultado.push({\\n      name: json.name,\\n      \\\"Url extracto\\\": json.webUrl, \\n      urlDownload: json[\\\"@microsoft.graph.downloadUrl\\\"]\\n    });\\n  }\\n}\\nreturn resultado.map(entry => ({ json: entry }));\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -1520,\n        -280\n      ],\n      \"id\": \"d89de488-57b2-4642-b760-ae3e3fee29ec\",\n      \"name\": \"Obtener datos de archivos\",\n      \"notes\": \"En este nodo se realiza la extracción de información de los archivos listados dentro del directorio\"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"fec00b65-17c1-4768-bca4-39b06969d02c\",\n              \"leftValue\": \"={{ $json.name }}\",\n              \"rightValue\": \"Relación\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        -880,\n        -100\n      ],\n      \"id\": \"307218b9-8919-4770-95fb-500ed872fbf4\",\n      \"name\": \"If\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Obtener todos los datos de entrada\\nconst todosLosItems = $input.all();\\n\\n// Extraer automáticamente los meses válidos desde los datos\\nconst mesesValidos = new Set();\\nfor (const item of todosLosItems) {\\n  const carpetas = item.json.value;\\n  if (!Array.isArray(carpetas)) continue;\\n\\n  for (const carpeta of carpetas) {\\n    const mes = carpeta.parentReference?.name;\\n    if (mes) mesesValidos.add(mes);\\n  }\\n}\\n\\n// Creamos una lista de salida más útil para n8n\\nconst salidaFinal = [];\\n\\nfor (const item of todosLosItems) {\\n  const carpetas = item.json.value;\\n  if (!Array.isArray(carpetas)) continue;\\n\\n  for (const carpeta of carpetas) {\\n    const esCarpeta = carpeta.hasOwnProperty(\\\"folder\\\");\\n    const nombreMes = carpeta.parentReference?.name;\\n    const nombreCarpeta = carpeta.name;\\n\\n    if (esCarpeta && nombreMes && nombreCarpeta && mesesValidos.has(nombreMes)) {\\n      salidaFinal.push({\\n        mes: nombreMes,\\n        banco: nombreCarpeta\\n      });\\n    }\\n  }\\n}\\n\\nreturn salidaFinal.map(entry => ({ json: entry }));\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -2400,\n        -260\n      ],\n      \"id\": \"ddc8253f-427c-44e3-813d-d073aac31da1\",\n      \"name\": \"Listar sub folders mes\",\n      \"notes\": \"Se extraen los folders de la petición del mes seleccionado\"\n    },\n    {\n      \"parameters\": {\n        \"resource\": \"worksheet\",\n        \"operation\": \"append\",\n        \"workbook\": {\n          \"__rl\": true,\n          \"value\": \"01HZVEXTIWP4G5HEI7J5DYASYQ46DK7OQC\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"Extractos\",\n          \"cachedResultUrl\": \"https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7BD30D7F16-1F91-474F-804B-10E786AFBA02%7D&file=Extractos.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1\"\n        },\n        \"worksheet\": {\n          \"__rl\": true,\n          \"value\": \"{0C538945-D5A9-4AD4-91C5-617796324802}\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"gravamenes\",\n          \"cachedResultUrl\": \"https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7BD30D7F16-1F91-474F-804B-10E786AFBA02%7D&file=Extractos.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1&activeCell=gravamenes!A1\"\n        },\n        \"fieldsUi\": {\n          \"values\": [\n            {\n              \"column\": \"Descripción\",\n              \"fieldValue\": \"={{ $json[\\\"Descripción\\\"] }}\"\n            },\n            {\n              \"column\": \"Fecha\",\n              \"fieldValue\": \"={{ $json[\\\"Fecha (Día/Mes/Año)\\\"] }}\"\n            },\n            {\n              \"column\": \"Valor compra\",\n              \"fieldValue\": \"={{ $json[\\\"Valor Compra\\\"] }}\"\n            },\n            {\n              \"column\": \"Cargos y abonos\",\n              \"fieldValue\": \"={{ $json[\\\"Cargos y Abonos\\\"] }}\"\n            },\n            {\n              \"column\": \"Periodo extracto\",\n              \"fieldValue\": \"={{ $json[\\\"Periodo Extracto\\\"] }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.microsoftExcel\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        580,\n        -640\n      ],\n      \"id\": \"f5a79c5a-a2fc-4993-9a96-696586a5d8cc\",\n      \"name\": \"Gravamenes\",\n      \"credentials\": {\n        \"microsoftExcelOAuth2Api\": {\n          \"id\": \"UMjXt9SIb2Tb1XTc\",\n          \"name\": \"Excel Inverlink\"\n        }\n      },\n      \"notes\": \"Se realiza el cargue de información a la hoja de calculo de los gravemenes\"\n    },\n    {\n      \"parameters\": {\n        \"resource\": \"table\",\n        \"workbook\": {\n          \"__rl\": true,\n          \"value\": \"01HZVEXTIWP4G5HEI7J5DYASYQ46DK7OQC\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"Extractos\",\n          \"cachedResultUrl\": \"https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7BD30D7F16-1F91-474F-804B-10E786AFBA02%7D&file=Extractos.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1\"\n        },\n        \"worksheet\": {\n          \"__rl\": true,\n          \"value\": \"{00000000-0001-0000-0000-000000000000}\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"extractos\",\n          \"cachedResultUrl\": \"https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7BD30D7F16-1F91-474F-804B-10E786AFBA02%7D&file=Extractos.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1&activeCell=extractos!A1\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"value\": \"{8AE6F636-25EA-4885-983A-A1E292B5694A}\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"Extractos\",\n          \"cachedResultUrl\": \"https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7BD30D7F16-1F91-474F-804B-10E786AFBA02%7D&file=Extractos.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1&activeCell=extractos!A1:R2\"\n        },\n        \"fieldsUi\": {\n          \"values\": [\n            {\n              \"column\": \"Descripción\",\n              \"fieldValue\": \"={{ $json[\\\"Descripción\\\"] }}\"\n            },\n            {\n              \"column\": \"No de Compte\",\n              \"fieldValue\": \"={{ $json[\\\"No de Compte\\\"] }}\"\n            },\n            {\n              \"column\": \"Ciudad/País\",\n              \"fieldValue\": \"={{ $json[\\\"Ciudad/País\\\"] }}\"\n            },\n            {\n              \"column\": \"Fecha (Día/Mes)\",\n              \"fieldValue\": \"={{ $json[\\\"Fecha (Día/Mes/Año)\\\"] }}\"\n            },\n            {\n              \"column\": \"Valor Compra\",\n              \"fieldValue\": \"={{ $json[\\\"Valor Compra\\\"] }}\"\n            },\n            {\n              \"column\": \"Cargos y abonos\",\n              \"fieldValue\": \"={{ $json[\\\"Cargos y Abonos\\\"] }}\"\n            },\n            {\n              \"column\": \"Saldo diferido\",\n              \"fieldValue\": \"={{ $json[\\\"Saldo Diferido\\\"] }}\"\n            },\n            {\n              \"column\": \"Banco\",\n              \"fieldValue\": \"={{ $json.Banco }}\"\n            },\n            {\n              \"column\": \"Tarjeta (últimos dígitos)\",\n              \"fieldValue\": \"={{ $json[\\\"Tarjeta (últimos dígitos)\\\"] }}\"\n            },\n            {\n              \"column\": \"Periodo Extracto\",\n              \"fieldValue\": \"={{ $json[\\\"Periodo Extracto\\\"] }}\"\n            },\n            {\n              \"column\": \"Plazo\",\n              \"fieldValue\": \"={{ $json.Plazo }}\"\n            },\n            {\n              \"column\": \"Cuota fact.\",\n              \"fieldValue\": \"={{ $json[\\\"Cuota Fact\\\"] }}\"\n            },\n            {\n              \"column\": \"Cuota pend.\",\n              \"fieldValue\": \"={{ $json[\\\"Cuota Pend\\\"] }}\"\n            },\n            {\n              \"column\": \"Tasa%\",\n              \"fieldValue\": \"={{ $json[\\\"Tasa%\\\"] }}\"\n            },\n            {\n              \"column\": \"NIT\",\n              \"fieldValue\": \"={{ $json.NIT }}\"\n            },\n            {\n              \"column\": \"Url extracto\",\n              \"fieldValue\": \"={{ $json.URL_extracto }}\"\n            },\n            {\n              \"column\": \"Id extracto\",\n              \"fieldValue\": \"={{ $json[\\\"ID_EXTRACTO\\\"] }}\"\n            },\n            {\n              \"column\": \"Titular\",\n              \"fieldValue\": \"={{ $json.titular }}\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.microsoftExcel\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        580,\n        -480\n      ],\n      \"id\": \"90d13211-25a1-4fe9-a8b4-4bdce8fbaeeb\",\n      \"name\": \"cargue extractos\",\n      \"credentials\": {\n        \"microsoftExcelOAuth2Api\": {\n          \"id\": \"UMjXt9SIb2Tb1XTc\",\n          \"name\": \"Excel Inverlink\"\n        }\n      },\n      \"notes\": \"Se realiza el cargue de información a la hoja de calculo de los extractos\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Tomamos el texto completo del PDF\\nconst texto = $json[\\\"text\\\"];\\n\\n// Dividimos cada vez que aparece un nuevo titular\\nconst secciones = texto.split(\\\"SEÑOR (A):\\\").filter(p => p.trim() !== \\\"\\\");\\n\\n// Procesamos cada bloque\\nconst resultados = secciones.map((bloque, index) => {\\n  const lineas = bloque.trim().split('\\\\n');\\n\\n  // La primera línea después de \\\"SEÑOR (A):\\\" es el nombre del titular\\n  const nombre = lineas[0].trim();\\n\\n  return {\\n    persona: nombre,\\n    seccion: bloque.trim(),\\n    orden: index + 1\\n  };\\n});\\n\\n// Retornamos los resultados\\nreturn resultados.map(item => ({\\n  json: item\\n}));\\n\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -100,\n        -280\n      ],\n      \"id\": \"5abd9031-5c93-43f0-bbd7-70cd2e899eb4\",\n      \"name\": \"tratamiento extracto bancolombia\",\n      \"notes\": \"En este nodo se realiza la separación del texto obtenido en hojas\"\n    },\n    {\n      \"parameters\": {\n        \"fieldToSplitOut\": \"transacciones\",\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -240,\n        -620\n      ],\n      \"id\": \"17238d43-7f25-4fbc-9f28-06097f652af0\",\n      \"name\": \"Split Out\",\n      \"notes\": \"Se realiza la separación de las listas en items individuales, ya que Loop Over Items si se ingresa un item debe retornar un item\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Nodo 1: Código para separar cada hoja del texto completo\\nlet hojas = [];\\nlet textoCompleto = $json[\\\"text\\\"];\\n\\n// Separar por \\\"Hoja\\\" (cada hoja comienza con esa palabra)\\nlet partes = textoCompleto.split(/Hoja \\\\d+ de \\\\d+/);\\n\\n// Eliminar posibles elementos vacíos y almacenar\\nfor (let i = 0; i < partes.length; i++) {\\n  if (partes[i].trim() !== '') {\\n    hojas.push({ hoja: i + 1, texto: partes[i].trim() });\\n  }\\n}\\n\\nreturn hojas;\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -100,\n        -480\n      ],\n      \"id\": \"cb76bf5d-726f-4c10-8dea-09f90cd3a8fe\",\n      \"name\": \"tratamiento extracto Occidente\",\n      \"notes\": \"En este nodo se realiza la separación de información por hojas en el PDF\"\n    },\n    {\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"typeVersion\": 3,\n      \"position\": [\n        -460,\n        -580\n      ],\n      \"id\": \"332b1939-bb89-43bd-96ba-59180e6d0cf2\",\n      \"name\": \"Loop Over Items1\",\n      \"notes\": \"En este nodo se procesa 1 a 1 los extractos bancarios\"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"44e83579-693d-422f-ab52-0ee997f0cd3e\",\n              \"leftValue\": \"={{ $json.name }}\",\n              \"rightValue\": \"Jeeves\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        -900,\n        -420\n      ],\n      \"id\": \"7771cb4c-18f8-4eda-94a5-b496b8182f2a\",\n      \"name\": \"If5\",\n      \"notes\": \"Se realiza la validación de que no ingrese el PDF de jeeves, ya que esta plataforma proporciona un PDF o un XLSX y esto genera duplicidad en los datos\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"const items = $input.all();\\n\\n// === 1. PREPARACIÓN DE DATOS ===\\nlet textoCompleto = \\\"\\\";\\nfor (const item of items) {\\n  textoCompleto += item.json.texto + \\\"\\\\n\\\";\\n}\\n\\n// Variables para almacenar los datos maestros del extracto\\nlet titular = null;\\nlet ultimos4 = null;\\nlet anioCorte = null;\\nlet mesCorte = null;\\nlet periodoExtracto = null;\\n\\n// === Componentes para generar el ID_EXTRACTO ===\\nconst prefix = 'EXT';\\nconst timestamp = Date.now();\\nconst random = Math.floor(Math.random() * 1000000);\\n\\n\\n// === 2. EXTRACCIÓN DE DATOS MAESTROS ===\\n\\nconst regexTitular = /\\\\s+([A-Z\\\\s&Y]+[A-Z])\\\\s+En caso de mora inferior/;\\nconst matchTitular = textoCompleto.match(regexTitular);\\nif (matchTitular && matchTitular[1]) {\\n  titular = matchTitular[1].trim();\\n}\\n\\nconst regexTarjeta = /TARJETA No\\\\.\\\\s*([\\\\d*-]+)/;\\nconst matchTarjeta = textoCompleto.match(regexTarjeta);\\nif (matchTarjeta && matchTarjeta[1]) {\\n  const numeroCompleto = matchTarjeta[1].replace(/[*-]/g, '');\\n  ultimos4 = numeroCompleto.slice(-4);\\n}\\n\\nconst regexFechaCorte = /FECHA DE CORTE\\\\s*:\\\\s*\\\\d{2}\\\\/(\\\\d{2})\\\\/(\\\\d{4})/;\\nconst matchFechaCorte = textoCompleto.match(regexFechaCorte);\\nif (matchFechaCorte) {\\n    mesCorte = parseInt(matchFechaCorte[1], 10);\\n    anioCorte = parseInt(matchFechaCorte[2], 10);\\n    const meses = [\\\"Enero\\\", \\\"Febrero\\\", \\\"Marzo\\\", \\\"Abril\\\", \\\"Mayo\\\", \\\"Junio\\\", \\\"Julio\\\", \\\"Agosto\\\", \\\"Septiembre\\\", \\\"Octubre\\\", \\\"Noviembre\\\", \\\"Diciembre\\\"];\\n    periodoExtracto = `${meses[mesCorte - 1]}/${anioCorte}`;\\n}\\n\\n\\n// === 3. EXTRACCIÓN Y FORMATEO DE TRANSACCIONES ===\\nconst transaccionesFinales = [];\\nconst lineas = textoCompleto.split('\\\\n');\\nconst regexTransaccion = /^(.+?)\\\\s+(\\\\d{6})\\\\s+.*?\\\\s*(\\\\d{2}\\\\/\\\\d{2})\\\\s+([\\\\d,.-]+)\\\\s+([\\\\d,.-]+)\\\\s+([\\\\d,.-]+)\\\\s+(\\\\d+)\\\\s+(\\\\d+)\\\\s*(\\\\d+)?\\\\s+([\\\\d,.]+)$/;\\nlet index = 0; // Inicia el contador para el ID\\n\\nfor (const linea of lineas) {\\n  const match = linea.match(regexTransaccion);\\n  if (match) {\\n    index++; // Incrementa el contador por cada transacción encontrada\\n    const ID_EXTRACTO = `${prefix}-${timestamp}-${random}-${index}`;\\n\\n    const parseCurrency = (str) => parseFloat(str.replace(/,/g, ''));\\n\\n    const fechaParcial = match[3];\\n    const [dia, mesStr] = fechaParcial.split('/');\\n    const mesTransaccion = parseInt(mesStr, 10);\\n\\n    let anioTransaccion = anioCorte;\\n    if (anioCorte && mesCorte && mesTransaccion > mesCorte) {\\n      anioTransaccion = anioCorte - 1;\\n    }\\n    const fechaCompleta = anioTransaccion ? `${dia}/${mesStr}/${anioTransaccion}` : fechaParcial;\\n\\n    transaccionesFinales.push({\\n      ID_EXTRACTO: ID_EXTRACTO, // <-- CAMPO AÑADIDO\\n      persona: titular,\\n      ultimos4Tarjeta: ultimos4,\\n      numeroAutorizacion: match[2],\\n      fecha: fechaCompleta,\\n      descripcion: match[1].trim(),\\n      valorOriginal: parseCurrency(match[4]),\\n      tasaPactada: null,\\n      tasaFacturada: parseFloat(match[10]),\\n      cargosAbonos: parseCurrency(match[5]),\\n      saldoDiferir: parseCurrency(match[6]),\\n      banco: \\\"Banco de Occidente\\\",\\n      NIT: \\\"890.300.279-4\\\",\\n      cuotas: `${parseInt(match[8],10)}/${parseInt(match[9],10) || 0} de ${parseInt(match[7],10)}`,\\n      periodoExtracto: periodoExtracto,\\n      URl_extracto: $('Obtener datos de archivos').first().json[\\\"Url extracto\\\"]\\n    });\\n  }\\n}\\n\\n// === 4. DEVOLVER MÚLTIPLES ÍTEMS ===\\nreturn [{\\n  json: {\\n    transacciones: transaccionesFinales\\n  }\\n}];\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        100,\n        -480\n      ],\n      \"id\": \"fd08ebdf-148b-4765-b990-91ef962f574f\",\n      \"name\": \"Set  datos occidente\",\n      \"alwaysOutputData\": true,\n      \"notes\": \"Se realiza la extracción de los movimientos de cada hoja, para Occidente\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"const personas = $input.all();\\n\\nif (personas.length === 0) {\\n  return [{ json: { transacciones: [] } }];\\n}\\n\\nfunction encontrarYFormatearPeriodo(todosLosItems) {\\n  const regexPeriodo = /Hasta:\\\\s*(\\\\d{2}\\\\/\\\\d{2}\\\\/\\\\d{4})/i;\\n  for (const item of todosLosItems) {\\n    const textoSeccion = item.json.seccion;\\n    const match = textoSeccion.match(regexPeriodo);\\n    if (match && match[1]) {\\n      const fechaHasta = match[1];\\n      const meses = [\\n        \\\"Enero\\\", \\\"Febrero\\\", \\\"Marzo\\\", \\\"Abril\\\", \\\"Mayo\\\", \\\"Junio\\\",\\n        \\\"Julio\\\", \\\"Agosto\\\", \\\"Septiembre\\\", \\\"Octubre\\\", \\\"Noviembre\\\", \\\"Diciembre\\\"\\n      ];\\n      const partesFecha = fechaHasta.split('/');\\n      if (partesFecha.length === 3) {\\n        const mesNumero = parseInt(partesFecha[1], 10);\\n        const anio = partesFecha[2];\\n        if (mesNumero >= 1 && mesNumero <= 12) {\\n          return `${meses[mesNumero - 1]}/${anio}`;\\n        }\\n      }\\n    }\\n  }\\n  return null;\\n}\\n\\nconst periodoFormateado = encontrarYFormatearPeriodo(personas);\\n\\n// --- LÓGICA PARA GENERAR EL ID_EXTRACTO ---\\nconst prefix = 'EXT';\\nconst timestamp = Date.now();\\nlet transactionIndex = 0; // Este será el contador para el ID\\n\\nlet resultados = [];\\n\\nfor (const item of personas) {\\n  const texto = item.json.seccion;\\n\\n  const nombre = item.json.persona\\n    .toLowerCase()\\n    .split(' ')\\n    .map(palabra => palabra.charAt(0).toUpperCase() + palabra.slice(1))\\n    .join(' ');\\n\\n  const tarjetaMatch = texto.match(/TARJETA:\\\\s+\\\\*+(\\\\d{4})/);\\n  const ultimosDigitos = tarjetaMatch ? tarjetaMatch[1] : null;\\n\\n  const regexSinNumero = /(?<fecha>\\\\d{2}\\\\/\\\\d{2}\\\\/\\\\d{4})\\\\s+(?<descripcion>.+?)\\\\s+(?<valor>\\\\d[\\\\d,.]*)\\\\s+(?<cargosAbonos>\\\\d[\\\\d,.]*)\\\\s+(?<saldoDiferir>\\\\d[\\\\d,.]*)/g;\\n\\n  let match;\\n\\n  while ((match = regexSinNumero.exec(texto)) !== null) {\\n    if (match.groups.descripcion.toLowerCase().includes('desde:')) continue;\\n      \\n    const valorFormateado = match.groups.valor.replace(/,/g, '').replace('.', ',');\\n    const cargosAbonosFormateado = match.groups.cargosAbonos.replace(/,/g, '').replace('.', ',');\\n    \\n    const descripcionOriginal = match.groups.descripcion.trim();\\n    const descripcionFormateada = descripcionOriginal.length > 0\\n      ? descripcionOriginal.charAt(0).toUpperCase() + descripcionOriginal.slice(1).toLowerCase()\\n      : '';\\n\\n    // --- SE GENERA Y AGREGA EL ID ÚNICO ---\\n    transactionIndex++; // Incrementa el contador\\n    const randomComponent = Math.floor(Math.random() * 10000); // Número aleatorio de 4 dígitos\\n    const ID_EXTRACTO = `${prefix}-${timestamp}-${randomComponent}-${transactionIndex}`;\\n\\n    resultados.push({\\n        ID_EXTRACTO: ID_EXTRACTO, // CAMPO AGREGADO\\n        persona: nombre,\\n        ultimos4Tarjeta: ultimosDigitos,\\n        numeroAutorizacion: null,\\n        fecha: match.groups.fecha,\\n        descripcion: descripcionFormateada,\\n        valorOriginal: valorFormateado,\\n        tasaPactada: null,\\n        tasaFacturada: null,\\n        cargosAbonos: cargosAbonosFormateado,\\n        saldoDiferir: match.groups.saldoDiferir,\\n        banco: \\\"Bancolombia\\\",\\n        NIT: \\\"890.903.938-8\\\",\\n        cuotas: null,\\n        periodoExtracto: periodoFormateado,\\n      URl_extracto: $('Obtener datos de archivos').first().json[\\\"Url extracto\\\"]\\n    });\\n  }\\n}\\n\\nreturn [{\\n  json: {\\n    transacciones: resultados\\n  }\\n}];\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        100,\n        -280\n      ],\n      \"id\": \"5d27586f-4473-4672-89d8-1c22e3f9270c\",\n      \"name\": \"set datos bancolombia\",\n      \"notes\": \"Se realiza la extracción de los movimientos de cada hoja, para Bancolombia\"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"e25e42b7-12d0-4263-934c-d294d85f0fdd\",\n              \"leftValue\": \"={{ $json.descripcion }}\",\n              \"rightValue\": \"Gmf juridico\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\",\n                \"name\": \"filter.operator.equals\"\n              }\n            },\n            {\n              \"id\": \"772d97a1-36cf-4283-b02b-df319f110612\",\n              \"leftValue\": \"={{ $json.descripcion }}\",\n              \"rightValue\": \"Cuota de manejo\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\",\n                \"name\": \"filter.operator.equals\"\n              }\n            },\n            {\n              \"id\": \"ceeab64c-0434-4f9b-a2a1-f151584c2bbf\",\n              \"leftValue\": \"={{ $json.descripcion }}\",\n              \"rightValue\": \"GMF 4\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            },\n            {\n              \"id\": \"44c49d83-2f89-41e3-901b-47ae63db7617\",\n              \"leftValue\": \"={{ $json.descripcion }}\",\n              \"rightValue\": \"REINTEGRO CUOTA MANEJO\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\",\n                \"name\": \"filter.operator.equals\"\n              }\n            },\n            {\n              \"id\": \"5e1b6428-aa9f-485b-b735-12baed27115b\",\n              \"leftValue\": \"={{ $json.descripcion }}\",\n              \"rightValue\": \"SEGURO VIDA DEUDOR\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"equals\",\n                \"name\": \"filter.operator.equals\"\n              }\n            },\n            {\n              \"id\": \"8ca23a29-7dd1-4be6-a4d1-5b33988fafd7\",\n              \"leftValue\": \"={{ $json.descripcion }}\",\n              \"rightValue\": \"CARGO POR\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            }\n          ],\n          \"combinator\": \"or\"\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        100,\n        -620\n      ],\n      \"id\": \"9405b677-b423-40d7-b9e8-472db97640fb\",\n      \"name\": \"Validación gravamenes\",\n      \"notes\": \"Se valida si la información que se extrae de los extractos contiene Gravámenes, de ser así se separan de los movimientos de crédito \"\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 2\n          },\n          \"conditions\": [\n            {\n              \"id\": \"ad573897-f166-4ade-8381-523a0bbf0dde\",\n              \"leftValue\": \"={{ $('Descarga PDF1').item.json.name }}\",\n              \"rightValue\": \"OCCIDENTE\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            },\n            {\n              \"id\": \"8ca0dff1-34ad-4f80-a3e5-50fb72d57cdf\",\n              \"leftValue\": \"={{ $('Descarga PDF1').item.json.name }}\",\n              \"rightValue\": \"Occidente\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            }\n          ],\n          \"combinator\": \"or\"\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.2,\n      \"position\": [\n        -280,\n        -460\n      ],\n      \"id\": \"64441c21-5ce0-4fdf-9f8c-de3f127dff4e\",\n      \"name\": \"Validación banco\",\n      \"notes\": \"En este nodo se realiza la validación del banco, separando entre Bancolombia y Occidente\"\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"xlsx\",\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -400,\n        -80\n      ],\n      \"id\": \"cc75510d-6650-4d3a-bcbb-1742b984ef51\",\n      \"name\": \"Extracción datos jeeves\",\n      \"notes\": \"Se realiza la extracción de la información descargada en el nodo anterior\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"2a08519a-18a9-4db2-b8e4-3bcf8013f8cc\",\n              \"name\": \"Descripción\",\n              \"value\": \"={{ $json.MerchantDescription }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"0e0a5d15-be05-46c4-9547-036991b6d9f1\",\n              \"name\": \"No de Compte\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"238e4bbe-7695-4b0b-9b05-e1cfa907f012\",\n              \"name\": \"Ciudad/País\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"fb8d0d94-964e-46fb-981c-4d81d6c0dbaf\",\n              \"name\": \"Fecha (Día/Mes/Año)\",\n              \"value\": \"={{ $json.InitiatedDate }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"cdc41749-505f-4c74-a5e3-738701037cfb\",\n              \"name\": \"Valor Compra\",\n              \"value\": \"={{ $json.BillingCurrencyAmount }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"9d668fb5-ee16-4653-a2db-0cedb31ade91\",\n              \"name\": \"Cargos y Abonos\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"c7c0565a-3c08-42c2-8238-0e15dbac4d7e\",\n              \"name\": \"Saldo Diferido\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"8ff2d997-77bf-4723-a501-bdb5c149caae\",\n              \"name\": \"Plazo\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"b37bc165-c37b-4a77-ad7e-fe9ccd814bef\",\n              \"name\": \"Cuota Pend\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"f7eaf760-10d9-4fa2-a7af-ca7697bc2ecf\",\n              \"name\": \"Tasa%\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"7293245d-4438-4f5c-967e-34c7f93f0827\",\n              \"name\": \"NIT\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"42ff2ee6-922c-45c2-8ed3-4c858873307b\",\n              \"name\": \"Banco\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"66274ac3-1f56-487c-ad5f-bed0e4ef987f\",\n              \"name\": \"Tarjeta (últimos dígitos)\",\n              \"value\": \"={{ $json.CardLast4 }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"2c75fddb-c5e1-4400-a9bc-902d0642e4df\",\n              \"name\": \"Periodo Extracto\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"8e6c53d7-6e5f-43a1-a384-903be9f4961c\",\n              \"name\": \"titular\",\n              \"value\": \"={{ $json.UserName }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"93811fbb-922b-4e15-9b03-b801f6739c9b\",\n              \"name\": \"URL_extracto\",\n              \"value\": \"=\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"8d5157e0-755c-4b9a-b792-f399b56107cb\",\n              \"name\": \"ID_EXTRACTO\",\n              \"value\": \"\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"e2ade9a9-0d82-4d8e-aceb-957cc0e39e7f\",\n              \"name\": \"Cuota Fact\",\n              \"value\": \"0\",\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -180,\n        -80\n      ],\n      \"id\": \"a7bef4a5-93c6-4552-baf5-cf1480047af6\",\n      \"name\": \"Ajuste datos de Jeeves\",\n      \"notes\": \"Se realiza el ajuste de datos de Jeeves para enviar a un segundo formato\"\n    },\n    {\n      \"parameters\": {\n        \"content\": \"## I'm a note \\n**Lista, base de datos grandes, dejarlo en excel\\n** github enviar los backups\\n\"\n      },\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -20,\n        -940\n      ],\n      \"id\": \"f0b7fa70-1e6e-4b59-912d-8f14b1042a05\",\n      \"name\": \"Sticky Note1\"\n    },\n    {\n      \"parameters\": {\n        \"fieldToSplitOut\": \"value\",\n        \"options\": {}\n      },\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -1740,\n        -280\n      ],\n      \"id\": \"891aa483-9b50-49a6-9889-1dc00e839405\",\n      \"name\": \"Separar documentos\",\n      \"notes\": \"Se realiza una división de los objetos del json que retorna el folder de Extractos\"\n    },\n    {\n      \"parameters\": {\n        \"httpMethod\": \"POST\",\n        \"path\": \"0eb031a2-ba86-4831-9704-48af6071abd7\",\n        \"options\": {\n          \"rawBody\": \"\"\n        }\n      },\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -3240,\n        -140\n      ],\n      \"id\": \"401b21ee-2fc2-4e7a-a64e-faeed9fd1450\",\n      \"name\": \"Webhook mes seleccionado\",\n      \"webhookId\": \"0eb031a2-ba86-4831-9704-48af6071abd7\",\n      \"notes\": \"Este nodo recibe los meses si los requieren volver a validar               01. Enero\\t\\n02. Febrero\\t\\n03. Marzo\\t\\n04. Abril\\t\\n05. Mayo\\t\\n06. Junio\\t\\n07. Julio\\t\\n08. Agosto\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Obtiene el primer item que llega al nodo\\nconst item = items[0];\\n\\n// 1. Convierte el 'body' (que es un string) a un objeto JSON\\nconst bodyData = JSON.parse(item.json.body);\\n\\n// 2. Extrae el valor de la propiedad \\\"mensaje\\\"\\nconst mes = bodyData.mensaje;\\n\\n// 3. Devuelve un nuevo item con el dato extraído\\nreturn [{\\n  json: {\\n    MesSeleccionado: mes\\n  }\\n}];\"\n      },\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -3060,\n        -140\n      ],\n      \"id\": \"3cc3d153-0a5d-44a8-8ae5-be35d155f7ef\",\n      \"name\": \"extraer mes enviado\"\n    },\n    {\n      \"parameters\": {},\n      \"type\": \"n8n-nodes-base.merge\",\n      \"typeVersion\": 3.2,\n      \"position\": [\n        -2820,\n        -260\n      ],\n      \"id\": \"8e3530bd-c54e-45b5-9c60-a64fc3aee478\",\n      \"name\": \"Merge1\"\n    }\n  ],\n  \"connections\": {\n    \"When clicking ‘Execute workflow’\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Listar archivos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set Gravamentos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Gravamenes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set extractos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"cargue extractos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Descarga xlsx\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extracción datos jeeves\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        []\n      ]\n    },\n    \"Descarga PDF1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If5\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Descarga PDF1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"extraer texto PDF\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Listar archivos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extraer folders mes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extraer folders mes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Mes seleccionado\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Mes seleccionado\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Obtener mes seleccionado\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Obtener mes seleccionado\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Listar Folder mes seleccionado\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Listar sub folders mes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Listar documentos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Separar documentos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validar folder extractos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Listar documentos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Formato datos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Obtener datos de archivos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Descarga xlsx\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Listar sub folders mes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validar folder extractos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"tratamiento extracto bancolombia\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"set datos bancolombia\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"tratamiento extracto Occidente\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set  datos occidente\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Validación banco\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If5\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"extraer texto PDF\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Set  datos occidente\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"set datos bancolombia\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validación gravamenes\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Set Gravamentos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Set extractos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validación gravamenes\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validación banco\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"tratamiento extracto Occidente\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"tratamiento extracto bancolombia\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extracción datos jeeves\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Ajuste datos de Jeeves\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Ajuste datos de Jeeves\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Formato datos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Separar documentos\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Obtener datos de archivos\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook mes seleccionado\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"extraer mes enviado\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"extraer mes enviado\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge1\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Merge1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Listar Folder mes seleccionado\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"staticData\": null,\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true\n  },\n  \"pinData\": {\n    \"When clicking ‘Execute workflow’\": [\n      {\n        \"json\": {}\n      }\n    ]\n  },\n  \"versionId\": \"bf050055-d678-44b9-b8fc-993d5170d4c0\",\n  \"triggerCount\": 1,\n  \"tags\": [\n    {\n      \"createdAt\": \"2025-06-03T20:36:49.469Z\",\n      \"updatedAt\": \"2025-06-03T20:36:49.469Z\",\n      \"id\": \"E9oSeWOtAViNQ19X\",\n      \"name\": \"Inverlink\"\n    },\n    {\n      \"createdAt\": \"2025-06-21T20:39:27.636Z\",\n      \"updatedAt\": \"2025-06-21T20:39:27.636Z\",\n      \"id\": \"XxrfLEy8SmG2KtL4\",\n      \"name\": \"OCR\"\n    },\n    {\n      \"createdAt\": \"2025-06-21T20:39:27.639Z\",\n      \"updatedAt\": \"2025-06-21T20:39:27.639Z\",\n      \"id\": \"wClzvw7IdVzfaWq7\",\n      \"name\": \"Claude\"\n    }\n  ]\n}"
}
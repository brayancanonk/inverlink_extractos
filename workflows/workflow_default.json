{
  "fileName": "Accounting_Records_v3___2__Invoice_Data.json",
  "fileContent": "{\n  \"createdAt\": \"2024-10-23T14:18:05.948Z\",\n  \"updatedAt\": \"2025-06-17T15:28:23.961Z\",\n  \"id\": \"YoiMco2TUKxWxBOS\",\n  \"name\": \"Accounting Records v3 - 2. Invoice Data\",\n  \"active\": true,\n  \"isArchived\": false,\n  \"nodes\": [\n    {\n      \"parameters\": {\n        \"operation\": \"xml\",\n        \"options\": {}\n      },\n      \"id\": \"deaba52d-6232-4b78-89f0-bbea4507b74f\",\n      \"name\": \"XML Data\",\n      \"type\": \"n8n-nodes-base.extractFromFile\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -5240,\n        1700\n      ]\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"getAll\",\n        \"tableId\": \"Param_Terceros\",\n        \"matchType\": \"allFilters\",\n        \"filters\": {\n          \"conditions\": [\n            {\n              \"keyName\": \"ReceiverParty_CompanyID\",\n              \"condition\": \"ilike\",\n              \"keyValue\": \"={{ $('Invoice Data').item.json.choices[0].message.content.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"keyName\": \"SenderParty_CompanyID\",\n              \"condition\": \"like\",\n              \"keyValue\": \"={{ $('Invoice Data').item.json.choices[0].message.content.SenderParty_CompanyID }}\"\n            }\n          ]\n        }\n      },\n      \"id\": \"ee3721b4-b04e-467b-9e10-8d818c19e5ec\",\n      \"name\": \"VendorAccounts\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3700,\n        1440\n      ],\n      \"alwaysOutputData\": true,\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      },\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"content\": \"# Extracción Data Facturas\\n\\n### - Transforma datos xml en binario base64\\n### - Extrae información tomando parámetros y elementos de la DIAN\\n### - Eror Handler --> archiva documento en carpeta error\\n\\n       *- Posibles errores:* \\n          *1. API Rate Limit \\n          *2. Archivo corrupto.\\n\\n### - Iteración entre los documentos en la carpeta\\n\\n\\n\",\n        \"height\": 1110.8428912735624,\n        \"width\": 1685.1626375051392,\n        \"color\": 7\n      },\n      \"id\": \"54ac31e1-bcec-4535-a157-f0a66fffa026\",\n      \"name\": \"Sticky Note\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -5480,\n        1260\n      ]\n    },\n    {\n      \"parameters\": {\n        \"content\": \"# Parametrización Cuentas Terceros\\n\\n### - Para cada tercero parametriza las cuentas contales que se deben contemplar en la clasificación de las cuentas contables.\\n### - Descarta (Error) la factura si el tercero no tiene parametrización de cuentas. \\n\",\n        \"height\": 1290.5835299608977,\n        \"width\": 807.6047626036732,\n        \"color\": 7\n      },\n      \"id\": \"3222bcd9-babd-472f-b004-6a6605fb6d57\",\n      \"name\": \"Sticky Note1\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3740,\n        1100\n      ]\n    },\n    {\n      \"parameters\": {\n        \"content\": \"# Descripción Factura y Cargue DB información factura.\\n\\n### - Basado en los items del documento genera un breve resumen de la factura\\n### - Crea un listado \\\"plano\\\" de los items de la factura\\n### - Basado en el resumen y los items determina el tipo de gasto. Servicio, producto, activo e inventario.\\n### - Carga en DB únicamente información contenida en la factura\\n\",\n        \"height\": 1393.0265147387913,\n        \"width\": 1935.7501392193333,\n        \"color\": 7\n      },\n      \"id\": \"9d68615c-dfce-4d52-9cf8-4cf813993173\",\n      \"name\": \"Sticky Note2\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -2900,\n        980\n      ]\n    },\n    {\n      \"parameters\": {\n        \"content\": \"# Parametrización del Modelo\\n\\n### - Cargue parámetros para el modelo AI y prompts\\n### - Listado facturas disponibles para procesar\\n\\n\\n\",\n        \"height\": 910.2845438926778,\n        \"width\": 1271.8603785464798,\n        \"color\": 7\n      },\n      \"id\": \"af77dae0-6f9d-4aaf-9fb7-e72040b867c6\",\n      \"name\": \"Sticky Note4\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -6780,\n        1460\n      ]\n    },\n    {\n      \"parameters\": {\n        \"content\": \"## Error Handler \\nDocumento con el reporte de errores encontrados.\\n\\n**Click to View** \\n[Document - Error Log](https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=sharing)\\n\",\n        \"height\": 157.89419394781874,\n        \"width\": 370.10050008103264,\n        \"color\": 7\n      },\n      \"id\": \"93fc1be6-940d-4360-8611-766658800a1c\",\n      \"name\": \"Sticky Note5\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3660,\n        1820\n      ]\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b5db9061-d7ff-4482-98f9-f0c3ac0c4a18\",\n              \"name\": \"choices[0].message.content\",\n              \"value\": \"={{ $json.data[0] }}\",\n              \"type\": \"object\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"728a6f06-7ad2-4405-bfe7-af70062ef2c1\",\n      \"name\": \"Invoice Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -4380,\n        1540\n      ],\n      \"executeOnce\": true,\n      \"notesInFlow\": true,\n      \"notes\": \"Prepara data de cada variable para utilizarla en nodos futuros. También organiza y consolida data para cargue a DB\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"ed8075af-6738-468a-8ac4-806e0e652911\",\n              \"name\": \"InvoiceDescription\",\n              \"value\": \"={{ $json.choices[0].message.content }}\",\n              \"type\": \"object\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"c74a54d5-4cc5-4246-a7cc-4a4bb9590241\",\n      \"name\": \"Description\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -2520,\n        1380\n      ]\n    },\n    {\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"id\": \"5c279cc9-4e1d-4389-b448-cf1b06ded074\",\n      \"name\": \"Loop Over Items\",\n      \"type\": \"n8n-nodes-base.splitInBatches\",\n      \"typeVersion\": 3,\n      \"position\": [\n        -5880,\n        1780\n      ]\n    },\n    {\n      \"parameters\": {\n        \"options\": {}\n      },\n      \"id\": \"64b3b01a-1151-4edd-90b1-97af1fa16722\",\n      \"name\": \"XML\",\n      \"type\": \"n8n-nodes-base.xml\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -5060,\n        1700\n      ]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Extract the data from the previous node\\nconst invoiceData = items[0].json.Invoice;\\n\\n// Initialize the result object with the necessary fields\\nconst result = {\\n  ParentDocumentID: invoiceData[\\\"cbc:ID\\\"] || \\\"\\\",\\n  IssueDate: invoiceData[\\\"cbc:IssueDate\\\"] || \\\"\\\",\\n  \\n  // Sender Party details\\n  SenderParty_RegistrationName: invoiceData[\\\"cac:AccountingSupplierParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PartyTaxScheme\\\"]?.[\\\"cbc:RegistrationName\\\"] || \\\"\\\",\\n  SenderParty_CompanyID: invoiceData[\\\"cac:AccountingSupplierParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PartyTaxScheme\\\"]?.[\\\"cbc:CompanyID\\\"]?._ || \\\"\\\",\\n  SenderParty_CityID: invoiceData[\\\"cac:AccountingSupplierParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PhysicalLocation\\\"]?.[\\\"cac:Address\\\"]?.[\\\"cbc:ID\\\"] || \\\"\\\",\\n  SenderParty_CityName: invoiceData[\\\"cac:AccountingSupplierParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PhysicalLocation\\\"]?.[\\\"cac:Address\\\"]?.[\\\"cbc:CityName\\\"] || \\\"\\\",\\n  SenderParty_TaxLevelCode: invoiceData[\\\"cac:AccountingSupplierParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PartyTaxScheme\\\"]?.[\\\"cbc:TaxLevelCode\\\"]?._ || \\\"\\\",\\n  SenderParty_IndustryClassificationCode: invoiceData[\\\"cac:AccountingSupplierParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cbc:IndustryClassificationCode\\\"] || \\\"\\\",\\n  SenderParty_CompanyType: invoiceData[\\\"cac:AccountingSupplierParty\\\"]?.[\\\"cbc:AdditionalAccountID\\\"] || \\\"\\\",\\n  \\n  // Receiver Party details\\n  ReceiverParty_RegistrationName: invoiceData[\\\"cac:AccountingCustomerParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PartyTaxScheme\\\"]?.[\\\"cbc:RegistrationName\\\"] || \\\"\\\",\\n  ReceiverParty_CompanyID: invoiceData[\\\"cac:AccountingCustomerParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PartyTaxScheme\\\"]?.[\\\"cbc:CompanyID\\\"]?._ || \\\"\\\",\\n  ReceiverParty_CityID: invoiceData[\\\"cac:AccountingCustomerParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PhysicalLocation\\\"]?.[\\\"cac:Address\\\"]?.[\\\"cbc:ID\\\"] || \\\"\\\",\\n  ReceiverParty_CityName: invoiceData[\\\"cac:AccountingCustomerParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PhysicalLocation\\\"]?.[\\\"cac:Address\\\"]?.[\\\"cbc:CityName\\\"] || \\\"\\\",\\n  ReceiverParty_TaxLevelCode: invoiceData[\\\"cac:AccountingCustomerParty\\\"]?.[\\\"cac:Party\\\"]?.[\\\"cac:PartyTaxScheme\\\"]?.[\\\"cbc:TaxLevelCode\\\"]?._ || \\\"\\\",\\n\\n\\n  // Other existing fields\\n  LineExtensionAmount: invoiceData[\\\"cac:LegalMonetaryTotal\\\"]?.[\\\"cbc:LineExtensionAmount\\\"]?._ || \\\"\\\",\\n  TaxInclusiveAmount: invoiceData[\\\"cac:LegalMonetaryTotal\\\"]?.[\\\"cbc:TaxInclusiveAmount\\\"]?._ || \\\"\\\",\\n\\n  IVA: \\\"\\\",\\n  IC: \\\"\\\",\\n  ICA: \\\"\\\",\\n  INC: \\\"\\\",\\n  ReteIVA: \\\"\\\",\\n  ReteFuente: \\\"\\\",\\n  ReteICA: \\\"\\\",\\n  \\n  PayableAmount: invoiceData[\\\"cac:LegalMonetaryTotal\\\"]?.[\\\"cbc:PayableAmount\\\"]?._ || \\\"\\\",\\n\\n  LineCountNumeric: invoiceData[\\\"cbc:LineCountNumeric\\\"] || \\\"\\\",\\n  \\n  InvoiceLine: \\\"\\\",\\n  CUFE: invoiceData[\\\"cbc:UUID\\\"]?._ || \\\"\\\",\\n  \\n  // New variables for InvoiceTypeCode and DocumentCurrencyCode\\n  InvoiceTypeCode: invoiceData[\\\"cbc:InvoiceTypeCode\\\"] || \\\"\\\",\\n  DocumentCurrencyCode: invoiceData[\\\"cbc:DocumentCurrencyCode\\\"] || \\\"\\\",\\n\\n  // Eventos de un Documento Electrónico: cbc:DocumentResponse/Description; cbc:ResponseCode\\n  DocumentResponseDescription: invoiceData[\\\"cac:DocumentResponse\\\"]?.[\\\"cbc:Description\\\"] || \\\"\\\",\\n  DocumentResponseCode: invoiceData[\\\"cac:DocumentResponse\\\"]?.[\\\"cbc:ResponseCode\\\"] || \\\"\\\"\\n};\\n\\n// Extract tax information\\nconst taxDetails = invoiceData[\\\"cac:TaxTotal\\\"]?.[\\\"cac:TaxSubtotal\\\"];\\nif (Array.isArray(taxDetails)) {\\n  // Iterate through the array to find IVA\\n  result.IVA = taxDetails\\n    .filter(subtotal => subtotal[\\\"cac:TaxCategory\\\"]?.[\\\"cac:TaxScheme\\\"]?.[\\\"cbc:ID\\\"] === \\\"01\\\")\\n    .map(subtotal => parseFloat(subtotal[\\\"cbc:TaxAmount\\\"]?._ || \\\"0\\\"))\\n    .reduce((acc, amount) => acc + amount, 0)\\n    .toFixed(2); // Sum all IVA amounts\\n} else if (taxDetails?.[\\\"cac:TaxCategory\\\"]?.[\\\"cac:TaxScheme\\\"]?.[\\\"cbc:ID\\\"] === \\\"01\\\") {\\n  result.IVA = taxDetails[\\\"cbc:TaxAmount\\\"]?._ || \\\"\\\";\\n}\\n\\n// Extract withholding taxes\\nconst withholdingTaxes = invoiceData[\\\"cac:WithholdingTaxTotal\\\"];\\nif (Array.isArray(withholdingTaxes)) {\\n  withholdingTaxes.forEach((tax) => {\\n    const taxSchemeID = tax[\\\"cac:TaxSubtotal\\\"]?.[\\\"cac:TaxCategory\\\"]?.[\\\"cac:TaxScheme\\\"]?.[\\\"cbc:ID\\\"];\\n    const taxAmount = parseFloat(tax[\\\"cac:TaxSubtotal\\\"]?.[\\\"cbc:TaxAmount\\\"]?._ || \\\"0\\\");\\n    switch (taxSchemeID) {\\n      case \\\"05\\\":\\n        result.ReteIVA = (parseFloat(result.ReteIVA) || 0) + taxAmount;\\n        break;\\n      case \\\"06\\\":\\n        result.ReteFuente = (parseFloat(result.ReteFuente) || 0) + taxAmount;\\n        break;\\n      case \\\"07\\\":\\n        result.ReteICA = (parseFloat(result.ReteICA) || 0) + taxAmount;\\n        break;\\n    }\\n  });\\n\\n  // Convert to strings to avoid potential type mismatch\\n  result.ReteIVA = result.ReteIVA ? result.ReteIVA.toFixed(2) : \\\"\\\";\\n  result.ReteFuente = result.ReteFuente ? result.ReteFuente.toFixed(2) : \\\"\\\";\\n  result.ReteICA = result.ReteICA ? result.ReteICA.toFixed(2) : \\\"\\\";\\n}\\n\\n// Extract invoice line items\\nconst invoiceLines = invoiceData[\\\"cac:InvoiceLine\\\"];\\nlet invoiceLineDescriptions = [];\\n\\nif (Array.isArray(invoiceLines)) {\\n  // If it's an array, loop through each invoice line\\n  invoiceLines.forEach(invoiceLine => {\\n    const description = invoiceLine[\\\"cac:Item\\\"]?.[\\\"cbc:Description\\\"] || \\\"\\\";\\n    const quantity = invoiceLine[\\\"cbc:InvoicedQuantity\\\"]?._ || \\\"\\\";\\n    const unitValue = invoiceLine[\\\"cac:Price\\\"]?.[\\\"cbc:PriceAmount\\\"]?._ || \\\"\\\";\\n    const totalValue = invoiceLine[\\\"cbc:LineExtensionAmount\\\"]?._ || \\\"\\\";\\n\\n    invoiceLineDescriptions.push(`Description: ${description}, Quantity: ${quantity}, Unit Value: ${unitValue}, Total Value: ${totalValue}`);\\n  });\\n} else if (invoiceLines) {\\n  // If it's a single object\\n  const description = invoiceLines[\\\"cac:Item\\\"]?.[\\\"cbc:Description\\\"] || \\\"\\\";\\n  const quantity = invoiceLines[\\\"cbc:InvoicedQuantity\\\"]?._ || \\\"\\\";\\n  const unitValue = invoiceLines[\\\"cac:Price\\\"]?.[\\\"cbc:PriceAmount\\\"]?._ || \\\"\\\";\\n  const totalValue = invoiceLines[\\\"cbc:LineExtensionAmount\\\"]?._ || \\\"\\\";\\n\\n  invoiceLineDescriptions.push(`Description: ${description}, Quantity: ${quantity}, Unit Value: ${unitValue}, Total Value: ${totalValue}`);\\n}\\n\\n// Combine all invoice lines into a single string, separated by semicolons\\nresult.InvoiceLine = invoiceLineDescriptions.join(\\\"; \\\");\\n\\n// Return the result as JSON\\nreturn [{ json: result }];\"\n      },\n      \"id\": \"5f2160fb-cfe4-4124-901d-4638386321c7\",\n      \"name\": \"Extract XML Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -4840,\n        1560\n      ],\n      \"alwaysOutputData\": true,\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"aggregate\": \"aggregateAllItemData\",\n        \"options\": {}\n      },\n      \"id\": \"74c58637-12bf-4380-9b6f-bfe080555455\",\n      \"name\": \"Agregador DataXML\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -4580,\n        1540\n      ],\n      \"notesInFlow\": true,\n      \"executeOnce\": true,\n      \"notes\": \"Agregador Data XML de la factura en un output único\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Access the 'Invoice' data from the XML to JSON node\\nconst invoiceData = items[0].json.Invoice;\\n\\n// Extract invoice line items from the XML data\\nconst invoiceLines = invoiceData[\\\"cac:InvoiceLine\\\"];\\nlet result = {};  // Initialize the result object\\n\\n// Check if 'InvoiceLine' is an array and process each item\\nif (Array.isArray(invoiceLines)) {\\n  invoiceLines.forEach((invoiceLine, index) => {\\n    const description = invoiceLine[\\\"cac:Item\\\"]?.[\\\"cbc:Description\\\"] || \\\"\\\";\\n    const quantity = invoiceLine[\\\"cbc:InvoicedQuantity\\\"]?._ || \\\"\\\";\\n    const unitValue = invoiceLine[\\\"cac:Price\\\"]?.[\\\"cbc:PriceAmount\\\"]?._ || \\\"\\\";\\n    const totalValue = invoiceLine[\\\"cbc:LineExtensionAmount\\\"]?._ || \\\"\\\";\\n\\n    // Create a key for each item (item_1, item_2, etc.)\\n    result[`item_${index + 1}`] = {\\n      \\\"ItemDescription\\\": description,\\n      \\\"Quantity\\\": quantity,\\n      \\\"Unit_Value\\\": unitValue,\\n      \\\"Total_Value\\\": totalValue\\n    };\\n  });\\n} else if (invoiceLines) {\\n  // If there's only one item (not an array)\\n  const description = invoiceLines[\\\"cac:Item\\\"]?.[\\\"cbc:Description\\\"] || \\\"\\\";\\n  const quantity = invoiceLines[\\\"cbc:InvoicedQuantity\\\"]?._ || \\\"\\\";\\n  const unitValue = invoiceLines[\\\"cac:Price\\\"]?.[\\\"cbc:PriceAmount\\\"]?._ || \\\"\\\";\\n  const totalValue = invoiceLines[\\\"cbc:LineExtensionAmount\\\"]?._ || \\\"\\\";\\n\\n  // Handle the single item case\\n  result[\\\"item_1\\\"] = {\\n    \\\"ItemDescription\\\": description,\\n    \\\"Quantity\\\": quantity,\\n    \\\"Unit_Value\\\": unitValue,\\n    \\\"Total_Value\\\": totalValue\\n  };\\n}\\n\\n// Return the result as the output\\nreturn [{ json: result }];\\n\"\n      },\n      \"id\": \"38878f9b-b144-42dc-95c2-ea25e41b0cab\",\n      \"name\": \"Extract Items\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -4840,\n        1860\n      ],\n      \"alwaysOutputData\": true,\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"aggregate\": \"aggregateAllItemData\",\n        \"options\": {}\n      },\n      \"id\": \"3632bcb8-e00c-4865-8cfa-58cbd53f31c5\",\n      \"name\": \"Agregador Items\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -4580,\n        1840\n      ],\n      \"notesInFlow\": true,\n      \"executeOnce\": true,\n      \"notes\": \"Agregador Items XML de la factura en un output único\"\n    },\n    {\n      \"parameters\": {\n        \"content\": \"## Error Handler \\nDocumento con el reporte de errores encontrados.\\n\\n**Click to View** \\n[Document - Error Log](https://docs.google.com/spreadsheets/d/1G618RMtrzF5pecMAvATctu5CLl6dpL-qdKNpWaXx0mI/edit?usp=sharing)\\n\",\n        \"height\": 156.85968088445503,\n        \"width\": 370.10050008103264,\n        \"color\": 7\n      },\n      \"id\": \"a1c54d56-c548-4e86-8e67-2fc1d8b0bcbd\",\n      \"name\": \"Sticky Note9\",\n      \"type\": \"n8n-nodes-base.stickyNote\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -2700,\n        1820\n      ]\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 1\n          },\n          \"conditions\": [\n            {\n              \"id\": \"31fce415-158f-4f3a-95ab-abde72f17a66\",\n              \"leftValue\": \"={{ $json.data[0] }}\",\n              \"rightValue\": \"[empty]\",\n              \"operator\": {\n                \"type\": \"object\",\n                \"operation\": \"notEmpty\",\n                \"singleValue\": true\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"id\": \"68fface7-38a0-4e2f-a9c8-1eced4fc85f4\",\n      \"name\": \"If1\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        -3080,\n        1420\n      ]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Function to remove null values from an object\\nconst removeNulls = (obj) => {\\n  for (const key in obj) {\\n    if (obj[key] === null) {\\n      delete obj[key];\\n    }\\n  }\\n  return obj;\\n};\\n\\n// Apply the function to each item in the 'items' array provided by n8n\\nreturn items.map(item => {\\n  const cleanedData = removeNulls(item.json);\\n  return {\\n    json: cleanedData\\n  };\\n});\"\n      },\n      \"id\": \"a2c90392-34f8-442f-b976-264c090890dc\",\n      \"name\": \"Clean JSON\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -3480,\n        1420\n      ],\n      \"notesInFlow\": true,\n      \"notes\": \"Parametrización Terceros. Retorna únicamente variables con valor.\"\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"search\",\n        \"base\": {\n          \"__rl\": true,\n          \"value\": \"appxDB6mSqj7XDzIC\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"InvoiceData\",\n          \"cachedResultUrl\": \"https://airtable.com/appxDB6mSqj7XDzIC\"\n        },\n        \"table\": {\n          \"__rl\": true,\n          \"value\": \"tblPHIUqpr9gmLfZJ\",\n          \"mode\": \"list\",\n          \"cachedResultName\": \"AIModels_Prompts\",\n          \"cachedResultUrl\": \"https://airtable.com/appxDB6mSqj7XDzIC/tblPHIUqpr9gmLfZJ\"\n        },\n        \"filterByFormula\": \"ActualProject = \\\"Accounting Records\\\"\",\n        \"options\": {},\n        \"sort\": {\n          \"property\": [\n            {\n              \"field\": \"ID\"\n            }\n          ]\n        }\n      },\n      \"id\": \"ead8d15e-2f98-4643-a563-1990cfc6160b\",\n      \"name\": \"AI_Variables\",\n      \"type\": \"n8n-nodes-base.airtable\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        -6480,\n        1780\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"airtableTokenApi\": {\n          \"id\": \"qt2DSN1Xi7hBivEb\",\n          \"name\": \"Airtable Personal Access Token\"\n        }\n      },\n      \"notes\": \"Parametrización modelos AI y Prompts\"\n    },\n    {\n      \"parameters\": {\n        \"aggregate\": \"aggregateAllItemData\",\n        \"options\": {}\n      },\n      \"id\": \"4d154c59-76dc-46fd-b0db-c3127da9680c\",\n      \"name\": \"Agregador Parm Terceros\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3260,\n        1420\n      ],\n      \"alwaysOutputData\": false,\n      \"executeOnce\": true,\n      \"notes\": \"Agregador Parametrizacion Información Terceros\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"6e73f4bb-83d9-4e82-a329-a2ce9a2e869c\",\n              \"name\": \"InvoiceData\",\n              \"value\": \"={{ $('Invoice Data').item.json.choices[0].message.content }}\",\n              \"type\": \"object\"\n            },\n            {\n              \"id\": \"a40922ae-c963-4382-8820-687a45c13d04\",\n              \"name\": \"TokenIn\",\n              \"value\": \"={{  parseInt($('Invoice Description').item.json.usage.prompt_tokens) }}\\n\",\n              \"type\": \"number\"\n            },\n            {\n              \"id\": \"b497f24b-3185-4ae2-8fb4-8e1e9cf60898\",\n              \"name\": \"TokenOut\",\n              \"value\": \"={{ parseInt($('Invoice Description').item.json.usage.completion_tokens) }}\",\n              \"type\": \"number\"\n            },\n            {\n              \"id\": \"66352388-d909-4b38-ade0-fe401a99db61\",\n              \"name\": \"Invoice_Description\",\n              \"value\": \"={{ $('Invoice Description').item.json.choices[0].message.content }}\",\n              \"type\": \"object\"\n            },\n            {\n              \"id\": \"0614b95b-d447-494a-83f8-ce32f96c035a\",\n              \"name\": \"AI_Model\",\n              \"value\": \"={{ $('Invoice Description').item.json.model }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"2ca64fba-8eee-4369-ac81-8cc354e09eb1\",\n              \"name\": \"FileName\",\n              \"value\": \"={{ $('Get Files / XML').item.json.name }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"5d48a1ba-9608-4e6e-ab29-021b6d3e63c8\",\n              \"name\": \"FileFormat\",\n              \"value\": \"={{ $('Get Files / XML').item.json.mimeType }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"64d8f754-c155-4ed1-ab74-088e5ff47e49\",\n              \"name\": \"DataExtractionDate\",\n              \"value\": \"={{ new Date().toISOString() }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"34238d76-00c1-41b3-af43-4a6b57151a44\",\n              \"name\": \"CUFE\",\n              \"value\": \"={{ $('Invoice Data').item.json.choices[0].message.content.CUFE }}\",\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"bef1d3e1-3619-40e6-b2a7-395a218d3747\",\n      \"name\": \"Data_XML_Invoice\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -2300,\n        1380\n      ],\n      \"notesInFlow\": true,\n      \"executeOnce\": true,\n      \"notes\": \"Consolida información básica de la factura en formato XML para enviarla a DB\"\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Iterate over all items in the input\\nreturn items.map(item => {\\n    const jsonOutput = item.json; // This will get the input JSON for the current item\\n\\n    const invoiceData = jsonOutput.InvoiceData || {};\\n    const invoiceDescription = jsonOutput.Invoice_Description || {};\\n\\n    // Calculate IVA with the provided conditions\\n    let iva = parseFloat(invoiceData.IVA) || 0;\\n    const taxInclusiveAmount = parseFloat(invoiceData.TaxInclusiveAmount) || 0;\\n    const lineExtensionAmount = parseFloat(invoiceData.LineExtensionAmount) || 0;\\n\\n    // Condition 1: Set IVA if it’s zero and there’s a difference between TaxInclusiveAmount and LineExtensionAmount\\n    if (iva === 0 && (taxInclusiveAmount - lineExtensionAmount) > 0) {\\n        iva = taxInclusiveAmount - lineExtensionAmount;\\n    }\\n\\n    // Condition 2: Restrict IVA value\\n    if (iva < 0) {\\n        iva = \\\"Error\\\"; // Set IVA to \\\"Error\\\" if it exceeds the limits\\n    }\\n\\n    // Prepare the object for Supabase insertion\\n    const preparedData = {\\n        ParentDocumentID: invoiceData.ParentDocumentID || null,\\n        IssueDate: invoiceData.IssueDate || null,\\n        SenderParty_RegistrationName: invoiceData.SenderParty_RegistrationName || null,\\n        SenderParty_CompanyID: parseFloat(invoiceData.SenderParty_CompanyID) || null,\\n        SenderParty_CityID: invoiceData.SenderParty_CityID || null,\\n        SenderParty_CityName: invoiceData.SenderParty_CityName || null,\\n        // Concatenate the value from invoiceData and Clean JSON\\n        SenderParty_TaxLevelCode: (invoiceData.SenderParty_TaxLevelCode ? invoiceData.SenderParty_TaxLevelCode + ', ' + $('Clean JSON').item.json.SenderParty_TaxLevelCode : $('Clean JSON').item.json.SenderParty_TaxLevelCode || null),\\n        SenderParty_IndustryClassificationCode: invoiceData.SenderParty_IndustryClassificationCode || null,\\n        ReceiverParty_RegistrationName: invoiceData.ReceiverParty_RegistrationName || null,\\n        ReceiverParty_CompanyID: parseFloat(invoiceData.ReceiverParty_CompanyID) || null,\\n        ReceiverParty_CityID: invoiceData.ReceiverParty_CityID || null,\\n        ReceiverParty_CityName: invoiceData.ReceiverParty_CityName || null,\\n        ReceiverParty_TaxLevelCode: invoiceData.ReceiverParty_TaxLevelCode || null,\\n        LineExtensionAmount: lineExtensionAmount || null,\\n        TaxInclusiveAmount: taxInclusiveAmount || null,\\n        IVA: iva, // Set the computed IVA value here\\n        IC: parseFloat(invoiceData.IC) || null,\\n        ICA: parseFloat(invoiceData.ICA) || null,\\n        INC: parseFloat(invoiceData.INC) || null,\\n        ReteIVA: parseFloat(invoiceData.ReteIVA) || null,\\n        ReteFuente: parseFloat(invoiceData.ReteFuente) || null,\\n        ReteICA: parseFloat(invoiceData.ReteICA) || null,\\n        PayableAmount: parseFloat(invoiceData.PayableAmount) || null,\\n        LineCountNumeric: parseInt(invoiceData.LineCountNumeric, 10) || null,\\n        InvoiceLine: invoiceData.InvoiceLine || null,\\n        CUFE: invoiceData.CUFE || null,\\n        InvoiceTypeCode: invoiceData.InvoiceTypeCode || null,\\n        DocumentCurrencyCode: invoiceData.DocumentCurrencyCode || null,\\n        DocumentResponseDescription: invoiceData.DocumentResponseDescription || null,\\n        DocumentResponseCode: invoiceData.DocumentResponseCode || null,\\n        InvoiceDescription: invoiceDescription.Description || null,\\n        ExpenseType: invoiceDescription.ExpenseType || null,\\n        DataExtractionDate: jsonOutput.DataExtractionDate || null,\\n        FileName: jsonOutput.FileName || null,\\n        FileFormat: jsonOutput.FileFormat || null,\\n        AI_Model: jsonOutput.AI_Model || null,\\n        TokenIn: parseInt(jsonOutput.TokenIn, 10) || null,\\n        TokenOut: parseInt(jsonOutput.TokenOut, 10) || null\\n    };\\n    \\n    return {\\n        json: preparedData // Output the prepared data in the correct format for the next node\\n    };\\n});\"\n      },\n      \"id\": \"11b1e336-1c1f-4ed4-956e-3124be9db54d\",\n      \"name\": \"Format_XMLInvoice_Data\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -1960,\n        1380\n      ],\n      \"notesInFlow\": true,\n      \"executeOnce\": true,\n      \"alwaysOutputData\": true,\n      \"notes\": \"Prepara data factura para enviar a DB\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"b5db9061-d7ff-4482-98f9-f0c3ac0c4a18\",\n              \"name\": \"choices[0].message.content\",\n              \"value\": \"={{ $json.data[0] }}\",\n              \"type\": \"object\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"ceebbfad-5dc0-4254-881a-32bcc5a60add\",\n      \"name\": \"Items Data\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -4380,\n        1840\n      ],\n      \"executeOnce\": true\n    },\n    {\n      \"parameters\": {\n        \"modelId\": {\n          \"__rl\": true,\n          \"value\": \"={{ $item(1).$node[\\\"AI_Variables\\\"].json[\\\"ActualModel\\\"] }}\",\n          \"mode\": \"id\"\n        },\n        \"messages\": {\n          \"values\": [\n            {\n              \"content\": \"={{ $item(1).$node[\\\"AI_Variables\\\"].json[\\\"SystemPrompt\\\"] }}\",\n              \"role\": \"system\"\n            },\n            {\n              \"content\": \"={{ $item(1).$node[\\\"AI_Variables\\\"].json[\\\"UserPrompt_1\\\"] }}\"\n            },\n            {\n              \"content\": \"={{ $item(1).$node[\\\"AI_Variables\\\"].json[\\\"UserPrompt_2\\\"] }}\"\n            },\n            {\n              \"content\": \"={{ $item(1).$node[\\\"AI_Variables\\\"].json[\\\"UserPrompt_3\\\"] }}\"\n            },\n            {\n              \"content\": \"={{ $item(1).$node[\\\"AI_Variables\\\"].json[\\\"UserPrompt_4\\\"] }}\"\n            },\n            {\n              \"content\": \"={{ JSON.stringify($('Invoice Data').item.json.choices[0].message.content) }}\"\n            }\n          ]\n        },\n        \"simplify\": false,\n        \"jsonOutput\": true,\n        \"options\": {\n          \"maxTokens\": 4096,\n          \"temperature\": \"={{ $item(1).$node[\\\"AI_Variables\\\"].json[\\\"Temperature\\\"] }}\"\n        }\n      },\n      \"id\": \"2ff94115-de43-4112-9809-4cebecb063d9\",\n      \"name\": \"Invoice Description\",\n      \"type\": \"@n8n/n8n-nodes-langchain.openAi\",\n      \"typeVersion\": 1.4,\n      \"position\": [\n        -2740,\n        1400\n      ],\n      \"alwaysOutputData\": true,\n      \"credentials\": {\n        \"openAiApi\": {\n          \"id\": \"0r1L7QIDC5ZRtM0r\",\n          \"name\": \"OpenAi\"\n        }\n      },\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"fieldsToAggregate\": {\n          \"fieldToAggregate\": [\n            {\n              \"fieldToAggregate\": \"ParentDocumentID\"\n            },\n            {\n              \"fieldToAggregate\": \"SenderParty_CompanyID\"\n            },\n            {\n              \"fieldToAggregate\": \"SenderParty_RegistrationName\"\n            },\n            {\n              \"fieldToAggregate\": \"SenderParty_TaxLevelCode\"\n            },\n            {\n              \"fieldToAggregate\": \"Invoice_uuid\"\n            },\n            {\n              \"fieldToAggregate\": \"choices[0].message.content\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"9a9808ba-08e7-462d-aaba-f5a7c0b6529c\",\n      \"name\": \"Aggregate_DataItem\",\n      \"type\": \"n8n-nodes-base.aggregate\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -1600,\n        1820\n      ]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Retrieve aggregated data from Aggregate_DataItem node\\nconst aggregateData = $('Aggregate_DataItem').item.json;\\n\\n// Extract the common fields (these will be the same for all items)\\nconst parentDocumentID = aggregateData.ParentDocumentID[0];\\nconst senderPartyCompanyID = aggregateData.SenderParty_CompanyID[0];\\nconst senderPartyRegistrationName = aggregateData.SenderParty_RegistrationName[0];\\nconst senderPartyTaxLevelCode = aggregateData.SenderParty_TaxLevelCode[0];\\nconst Invoice_uuid = aggregateData.Invoice_uuid[0]\\n\\n// Extract the items from the content field\\nconst contentItems = aggregateData.content[0];\\n\\n// Prepare an array to hold the individual items\\nconst individualItems = [];\\n\\n// Iterate over the items in the content object and convert them to individual items\\nObject.keys(contentItems).forEach(itemKey => {\\n  const itemData = contentItems[itemKey];\\n\\n  // Create the final object for each individual item\\n  const finalItem = {\\n    ParentDocumentID: parentDocumentID,\\n    SenderParty_CompanyID: senderPartyCompanyID,\\n    SenderParty_RegistrationName: senderPartyRegistrationName,\\n    SenderParty_TaxLevelCode: senderPartyTaxLevelCode,\\n    ItemDescription: itemData.ItemDescription,\\n    Quantity: itemData.Quantity,\\n    Unit_Value: itemData.Unit_Value,\\n    Total_Value: itemData.Total_Value,\\n    Invoice_uuid: Invoice_uuid\\n  };\\n\\n  // Add the final item to the array\\n  individualItems.push({ json: finalItem });\\n});\\n\\n// Return the individual items\\nreturn individualItems;\"\n      },\n      \"id\": \"3b49f0b0-ace3-41bd-b5c7-db059bc28d1b\",\n      \"name\": \"Code\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -1600,\n        2080\n      ]\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\",\n            \"version\": 1\n          },\n          \"conditions\": [\n            {\n              \"id\": \"cb8215b3-b748-49ae-a7cb-1321694fb6bb\",\n              \"leftValue\": \"={{ $json.mimeType }}\",\n              \"rightValue\": \"xml\",\n              \"operator\": {\n                \"type\": \"string\",\n                \"operation\": \"contains\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {\n          \"ignoreCase\": false\n        }\n      },\n      \"id\": \"4b6ab7a1-36da-476b-93bf-0498d2c06721\",\n      \"name\": \"If\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2.1,\n      \"position\": [\n        -5640,\n        1800\n      ]\n    },\n    {\n      \"parameters\": {\n        \"respondWith\": \"allIncomingItems\",\n        \"options\": {}\n      },\n      \"id\": \"863785f9-3cc7-48af-ac9e-8f930c1af6c5\",\n      \"name\": \"Respond to Webhook\",\n      \"type\": \"n8n-nodes-base.respondToWebhook\",\n      \"typeVersion\": 1.1,\n      \"position\": [\n        -5700,\n        1640\n      ]\n    },\n    {\n      \"parameters\": {\n        \"fieldToSplitOut\": \"['File ID & Type']\",\n        \"options\": {}\n      },\n      \"id\": \"a6c61263-e95c-449c-b55d-8cda258ddc43\",\n      \"name\": \"Split Out\",\n      \"type\": \"n8n-nodes-base.splitOut\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -6100,\n        1780\n      ],\n      \"executeOnce\": true\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"625786f9-4187-451b-af3b-a5738f3d36fd\",\n              \"name\": \"File ID & Type\",\n              \"value\": \"={{ $('Webhook').item.json.body['File ID & Type'] }}\",\n              \"type\": \"array\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"2e4c08db-a481-42fd-bb9a-019f07f0beba\",\n      \"name\": \"File ID & Type\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -6280,\n        1780\n      ]\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"download\",\n        \"fileId\": \"={{ $json.id }}\"\n      },\n      \"id\": \"1d83a8f0-6689-4e77-ba18-41815407b874\",\n      \"name\": \"Get Files / XML\",\n      \"type\": \"n8n-nodes-base.microsoftOneDrive\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -5440,\n        1700\n      ],\n      \"executeOnce\": false,\n      \"credentials\": {\n        \"microsoftOneDriveOAuth2Api\": {\n          \"id\": \"VuffFQLziQK9I5pc\",\n          \"name\": \"Microsoft Drive account\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"delete\",\n        \"fileId\": \"={{ $('Get Files / XML').item.json.id }}\"\n      },\n      \"id\": \"073920f5-6722-4958-8f05-503a31012d09\",\n      \"name\": \"Delete Invoice1\",\n      \"type\": \"n8n-nodes-base.microsoftOneDrive\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -5360,\n        2120\n      ],\n      \"credentials\": {\n        \"microsoftOneDriveOAuth2Api\": {\n          \"id\": \"VuffFQLziQK9I5pc\",\n          \"name\": \"Microsoft Drive account\"\n        }\n      },\n      \"onError\": \"continueRegularOutput\"\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"copy\",\n        \"fileId\": \"={{ $('Get Files / XML').item.json.id }}\",\n        \"additionalFields\": {},\n        \"parentReference\": {\n          \"id\": \"01PHCLF5D773H3L3754BAKAPZJZARHYJQO\"\n        }\n      },\n      \"id\": \"c936020f-909b-4f13-a976-a27662a89d19\",\n      \"name\": \"Move Error File\",\n      \"type\": \"n8n-nodes-base.microsoftOneDrive\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -5140,\n        2120\n      ],\n      \"credentials\": {\n        \"microsoftOneDriveOAuth2Api\": {\n          \"id\": \"VuffFQLziQK9I5pc\",\n          \"name\": \"Microsoft Drive account\"\n        }\n      },\n      \"onError\": \"continueRegularOutput\"\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"InvoicesData\",\n        \"dataToSend\": \"autoMapInputData\"\n      },\n      \"id\": \"8d74af0f-87b8-4957-bd08-0c064412272c\",\n      \"name\": \"Upload Invoice Data\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -1760,\n        1380\n      ],\n      \"executeOnce\": true,\n      \"alwaysOutputData\": true,\n      \"retryOnFail\": false,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      },\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"Error_Log\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ParentDocumentID\",\n              \"fieldValue\": \"={{ $json.ParentDocumentID }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.SenderParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.SenderParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"FileName\",\n              \"fieldValue\": \"={{ $('Get Files / XML').item.json.name }}\"\n            },\n            {\n              \"fieldId\": \"Error_Log\",\n              \"fieldValue\": \"Error Carga Data Factura DB\"\n            },\n            {\n              \"fieldId\": \"CUFE\",\n              \"fieldValue\": \"={{ $json.CUFE }}\"\n            },\n            {\n              \"fieldId\": \"IssueDate\",\n              \"fieldValue\": \"={{ $json.IssueDate }}\"\n            },\n            {\n              \"fieldId\": \"Accounting_Records - Módulo\",\n              \"fieldValue\": \"2. Invoice Data\"\n            }\n          ]\n        }\n      },\n      \"id\": \"ac340f5a-8d9d-4129-8e19-1acae9f29872\",\n      \"name\": \"Error_Log3\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -2260,\n        2120\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"Error_Log\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ParentDocumentID\",\n              \"fieldValue\": \"={{ $json.ParentDocumentID }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.SenderParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.SenderParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"FileName\",\n              \"fieldValue\": \"={{ $('Get Files / XML').item.json.name }}\"\n            },\n            {\n              \"fieldId\": \"Error_Log\",\n              \"fieldValue\": \"Error AI - Descripción\"\n            },\n            {\n              \"fieldId\": \"CUFE\",\n              \"fieldValue\": \"={{ $json.CUFE }}\"\n            },\n            {\n              \"fieldId\": \"IssueDate\",\n              \"fieldValue\": \"={{ $json.IssueDate }}\"\n            },\n            {\n              \"fieldId\": \"Accounting_Records - Módulo\",\n              \"fieldValue\": \"2. Invoice Data\"\n            }\n          ]\n        }\n      },\n      \"id\": \"559934a4-800a-45bb-a13b-fe081cc8098b\",\n      \"name\": \"Error_Log2\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -2720,\n        2120\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"Error_Log\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ParentDocumentID\",\n              \"fieldValue\": \"={{ $json.ParentDocumentID }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.SenderParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.SenderParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"FileName\",\n              \"fieldValue\": \"={{ $('Get Files / XML').item.json.name }}\"\n            },\n            {\n              \"fieldId\": \"Error_Log\",\n              \"fieldValue\": \"Tercero Sin Parametrización\"\n            },\n            {\n              \"fieldId\": \"CUFE\",\n              \"fieldValue\": \"={{ $json.CUFE }}\"\n            },\n            {\n              \"fieldId\": \"IssueDate\",\n              \"fieldValue\": \"={{ $json.IssueDate }}\"\n            },\n            {\n              \"fieldId\": \"Accounting_Records - Módulo\",\n              \"fieldValue\": \"2. Invoice Data\"\n            }\n          ]\n        }\n      },\n      \"id\": \"ec3f59fe-4578-474c-96d3-678bfcd9b855\",\n      \"name\": \"Error_Log1\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3620,\n        2120\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"Error_Log\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ParentDocumentID\",\n              \"fieldValue\": \"={{ $json.ParentDocumentID }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.SenderParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.SenderParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"FileName\",\n              \"fieldValue\": \"={{ $('Get Files / XML').item.json.name }}\"\n            },\n            {\n              \"fieldId\": \"Error_Log\",\n              \"fieldValue\": \"Error Script Extracción Data\"\n            },\n            {\n              \"fieldId\": \"CUFE\",\n              \"fieldValue\": \"={{ $json.CUFE }}\"\n            },\n            {\n              \"fieldId\": \"IssueDate\",\n              \"fieldValue\": \"={{ $json.IssueDate }}\"\n            },\n            {\n              \"fieldId\": \"Accounting_Records - Módulo\",\n              \"fieldValue\": \"2. Invoice Data\"\n            }\n          ]\n        }\n      },\n      \"id\": \"f3045f63-a420-4d1b-9550-e2d9352b9341\",\n      \"name\": \"Error_Log\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -4840,\n        2120\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"Error_Log\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ParentDocumentID\",\n              \"fieldValue\": \"={{ $json.ParentDocumentID }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.SenderParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.SenderParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"FileName\",\n              \"fieldValue\": \"={{ $('Get Files / XML').item.json.name }}\"\n            },\n            {\n              \"fieldId\": \"Error_Log\",\n              \"fieldValue\": \"Error Carga Data Items DB\"\n            },\n            {\n              \"fieldId\": \"CUFE\",\n              \"fieldValue\": \"={{ $json.CUFE }}\"\n            },\n            {\n              \"fieldId\": \"IssueDate\",\n              \"fieldValue\": \"={{ $json.IssueDate }}\"\n            },\n            {\n              \"fieldId\": \"Accounting_Records - Módulo\",\n              \"fieldValue\": \"2. Invoice Data\"\n            }\n          ]\n        }\n      },\n      \"id\": \"18cc56f9-fce0-4638-95a0-be733a652ad8\",\n      \"name\": \"Error_Log4\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -1220,\n        2200\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"InvoicesItems\",\n        \"dataToSend\": \"autoMapInputData\"\n      },\n      \"id\": \"28075fce-f94f-4162-90c8-631b41fa412b\",\n      \"name\": \"Supabase\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -1400,\n        2140\n      ],\n      \"alwaysOutputData\": true,\n      \"executeOnce\": false,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      },\n      \"onError\": \"continueErrorOutput\"\n    },\n    {\n      \"parameters\": {\n        \"assignments\": {\n          \"assignments\": [\n            {\n              \"id\": \"a0c57517-58b1-490b-a6ea-70d7d2be7efb\",\n              \"name\": \"ParentDocumentID\",\n              \"value\": \"={{ $json.ParentDocumentID }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"de2c6c1a-85ac-4531-a5bb-c1e1e46edadc\",\n              \"name\": \"SenderParty_CompanyID\",\n              \"value\": \"={{ $json.SenderParty_CompanyID }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"bebb6b3d-90db-4b71-961d-f33d215790f7\",\n              \"name\": \"SenderParty_RegistrationName\",\n              \"value\": \"={{ $json.SenderParty_RegistrationName }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"fc1a1b80-e905-45de-a17c-ada3e93d5af4\",\n              \"name\": \"SenderParty_TaxLevelCode\",\n              \"value\": \"={{ $json.SenderParty_TaxLevelCode }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"c5b9f064-8aa0-41b4-8406-429bf44bf263\",\n              \"name\": \"ItemDescription\",\n              \"value\": \"={{ $json.ItemDescription }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"f902cfb2-66c4-47c1-b6e7-fe1d4c3d7349\",\n              \"name\": \"Quantity\",\n              \"value\": \"={{ $json.Quantity }}\",\n              \"type\": \"number\"\n            },\n            {\n              \"id\": \"392ea7c3-5714-459b-8adb-95e34b7a4a25\",\n              \"name\": \"Unit_Value\",\n              \"value\": \"={{ $json.Unit_Value }}\",\n              \"type\": \"number\"\n            },\n            {\n              \"id\": \"af0ce2d2-3929-4189-ba83-46bd8932d59a\",\n              \"name\": \"Total_Value\",\n              \"value\": \"={{ $json.Total_Value }}\",\n              \"type\": \"number\"\n            },\n            {\n              \"id\": \"81e19630-efef-4ac9-9e7b-7edb5788de5f\",\n              \"name\": \"Invoice_uuid\",\n              \"value\": \"={{ $('Code').item.json.Invoice_uuid }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"e7b623d7-925e-4cb8-abad-fb52d7e72fa6\",\n              \"name\": \"Fileid\",\n              \"value\": \"={{ $('Get Files / XML').item.json.id }}\",\n              \"type\": \"string\"\n            },\n            {\n              \"id\": \"17fc2578-36ca-4c65-8203-dac0061dc13c\",\n              \"name\": \"Item_uuid\",\n              \"value\": \"={{ $json.Item_uuid }}\",\n              \"type\": \"string\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"56b6707c-61ed-4996-b2be-fe9e1991fd2e\",\n      \"name\": \"Edit Fields\",\n      \"type\": \"n8n-nodes-base.set\",\n      \"typeVersion\": 3.4,\n      \"position\": [\n        -5720,\n        2120\n      ]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Get the current month and year\\nconst currentDate = new Date();\\nconst currentYear = currentDate.getFullYear();\\nconst currentMonth = currentDate.getMonth() + 1; // getMonth() is 0-indexed\\n\\n// Access IssueDate from the nested structure in \\\"Invoice Data\\\" node\\nconst issueDateString = $json.choices?.[0]?.message?.content?.IssueDate || \\\"\\\"; // Ensure IssueDate exists\\nif (!issueDateString) {\\n    return [{ json: { result: \\\"Error: IssueDate is missing\\\" }}];\\n}\\n\\n// Parse IssueDate\\nconst [issueYear, issueMonth] = issueDateString.split('-').map(Number);\\n\\n// Check if the IssueDate month and year match the current month and year\\nlet result;\\nif (issueYear === currentYear && issueMonth === currentMonth) {\\n    result = \\\"Mes Ok\\\";\\n} else {\\n    result = \\\"Error Mes\\\";\\n}\\n\\nreturn [{ json: { result } }];\"\n      },\n      \"id\": \"8bf60e66-26ff-456b-a208-8e24e8aa627e\",\n      \"name\": \"Date_Validation\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -4160,\n        1540\n      ],\n      \"executeOnce\": true\n    },\n    {\n      \"parameters\": {\n        \"tableId\": \"Error_Log\",\n        \"fieldsUi\": {\n          \"fieldValues\": [\n            {\n              \"fieldId\": \"ParentDocumentID\",\n              \"fieldValue\": \"={{ $json.ParentDocumentID }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.SenderParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"SenderParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.SenderParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_RegistrationName\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_RegistrationName }}\"\n            },\n            {\n              \"fieldId\": \"ReceiverParty_CompanyID\",\n              \"fieldValue\": \"={{ $json.ReceiverParty_CompanyID }}\"\n            },\n            {\n              \"fieldId\": \"FileName\",\n              \"fieldValue\": \"={{ $('Get Files / XML').item.json.name }}\"\n            },\n            {\n              \"fieldId\": \"Error_Log\",\n              \"fieldValue\": \"Error Fecha Factura\"\n            },\n            {\n              \"fieldId\": \"CUFE\",\n              \"fieldValue\": \"={{ $json.CUFE }}\"\n            },\n            {\n              \"fieldId\": \"IssueDate\",\n              \"fieldValue\": \"={{ $json.IssueDate }}\"\n            },\n            {\n              \"fieldId\": \"Accounting_Records - Módulo\",\n              \"fieldValue\": \"2. Invoice Data\"\n            }\n          ]\n        }\n      },\n      \"id\": \"15777ae7-cc2f-4a32-9e16-f3ad0a118201\",\n      \"name\": \"Error_Log0\",\n      \"type\": \"n8n-nodes-base.supabase\",\n      \"typeVersion\": 1,\n      \"position\": [\n        -3940,\n        2120\n      ],\n      \"executeOnce\": true,\n      \"credentials\": {\n        \"supabaseApi\": {\n          \"id\": \"U4Lx0acH9rOsOwsN\",\n          \"name\": \"Supabase InvoiceData\"\n        }\n      }\n    },\n    {\n      \"parameters\": {},\n      \"id\": \"f6bf3a80-e07c-4754-ad76-a276de006781\",\n      \"name\": \"Merge\",\n      \"type\": \"n8n-nodes-base.merge\",\n      \"typeVersion\": 3,\n      \"position\": [\n        -1980,\n        1820\n      ]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// Access the ParentDocumentID value\\nconst parentDocumentID = $json.ParentDocumentID?.[0] || null; // Get the first element of the array or null if undefined\\n\\n// Check if ParentDocumentID is neither null, 0, nor \\\"0:0\\\"\\nlet result;\\nif (parentDocumentID && parentDocumentID !== \\\"0\\\" && parentDocumentID !== \\\"0:0\\\") {\\n    result = \\\"Ok\\\";\\n} else {\\n    result = \\\"Error\\\";\\n}\\n\\nreturn [{ json: { result } }];\"\n      },\n      \"id\": \"35b2bdf7-05f4-4a38-81c3-aa2ab8a218f6\",\n      \"name\": \"Validador Items\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -1380,\n        1820\n      ]\n    },\n    {\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"caseSensitive\": true,\n                  \"leftValue\": \"\",\n                  \"typeValidation\": \"strict\",\n                  \"version\": 2\n                },\n                \"conditions\": [\n                  {\n                    \"leftValue\": \"={{ $json.result }}\",\n                    \"rightValue\": \"Mes Ok\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    }\n                  }\n                ],\n                \"combinator\": \"and\"\n              },\n              \"renameOutput\": true,\n              \"outputKey\": \"Fecha Ok\"\n            },\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"caseSensitive\": true,\n                  \"leftValue\": \"\",\n                  \"typeValidation\": \"strict\",\n                  \"version\": 2\n                },\n                \"conditions\": [\n                  {\n                    \"id\": \"a67ead85-b58e-4153-8b66-2005893c4ce0\",\n                    \"leftValue\": \"={{ $json.result }}\",\n                    \"rightValue\": \"Error Mes\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    }\n                  }\n                ],\n                \"combinator\": \"and\"\n              },\n              \"renameOutput\": true,\n              \"outputKey\": \"Error Fecha\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"4bd09ea7-bb3c-48ac-bb1d-74328de19601\",\n      \"name\": \"Validación Fecha\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"typeVersion\": 3.2,\n      \"position\": [\n        -3960,\n        1540\n      ]\n    },\n    {\n      \"parameters\": {\n        \"rules\": {\n          \"values\": [\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"caseSensitive\": true,\n                  \"leftValue\": \"\",\n                  \"typeValidation\": \"strict\",\n                  \"version\": 2\n                },\n                \"conditions\": [\n                  {\n                    \"leftValue\": \"={{ $json.result }}\",\n                    \"rightValue\": \"Ok\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    }\n                  }\n                ],\n                \"combinator\": \"and\"\n              },\n              \"renameOutput\": true,\n              \"outputKey\": \"Ok\"\n            },\n            {\n              \"conditions\": {\n                \"options\": {\n                  \"caseSensitive\": true,\n                  \"leftValue\": \"\",\n                  \"typeValidation\": \"strict\",\n                  \"version\": 2\n                },\n                \"conditions\": [\n                  {\n                    \"id\": \"954869de-9b4f-4cea-a4b6-47c164fc7f86\",\n                    \"leftValue\": \"={{ $json.result }}\",\n                    \"rightValue\": \"Error\",\n                    \"operator\": {\n                      \"type\": \"string\",\n                      \"operation\": \"contains\"\n                    }\n                  }\n                ],\n                \"combinator\": \"and\"\n              },\n              \"renameOutput\": true,\n              \"outputKey\": \"Error\"\n            }\n          ]\n        },\n        \"options\": {}\n      },\n      \"id\": \"94adb96f-71d5-4a68-824a-78d9950783bd\",\n      \"name\": \"Validación Item\",\n      \"type\": \"n8n-nodes-base.switch\",\n      \"typeVersion\": 3.2,\n      \"position\": [\n        -1840,\n        2100\n      ]\n    },\n    {\n      \"parameters\": {\n        \"httpMethod\": \"POST\",\n        \"path\": \"b3a8d8ae-7ffa-4b3d-b504-2d86d751281c\",\n        \"responseMode\": \"responseNode\",\n        \"options\": {}\n      },\n      \"id\": \"eb15add8-b8fe-4574-b552-667dc25ea465\",\n      \"name\": \"Webhook\",\n      \"type\": \"n8n-nodes-base.webhook\",\n      \"typeVersion\": 2,\n      \"position\": [\n        -6680,\n        1780\n      ],\n      \"webhookId\": \"b9e90ef1-03b8-4ae3-98ef-06d80af3acca\"\n    }\n  ],\n  \"connections\": {\n    \"XML Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"XML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Loop Over Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Respond to Webhook\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"If\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"XML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Extract XML Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Extract Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract XML Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Agregador DataXML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"VendorAccounts\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Clean JSON\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Agregador DataXML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Invoice Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Extract Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Agregador Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Agregador Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Items Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Invoice Description\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Invoice Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Date_Validation\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Clean JSON\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Agregador Parm Terceros\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Agregador Parm Terceros\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"If1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Description\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Data_XML_Invoice\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Data_XML_Invoice\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Format_XMLInvoice_Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Format_XMLInvoice_Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Upload Invoice Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Invoice Description\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Description\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log2\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Aggregate_DataItem\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validador Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Code\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Supabase\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"If\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Files / XML\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"AI_Variables\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"File ID & Type\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"File ID & Type\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Split Out\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Files / XML\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"XML Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Split Out\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Move Error File\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Delete Invoice1\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Delete Invoice1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Upload Invoice Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log3\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error_Log3\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move Error File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error_Log2\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move Error File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error_Log1\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move Error File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error_Log\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move Error File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error_Log4\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Move Error File\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Supabase\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Edit Fields\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Error_Log4\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Edit Fields\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Date_Validation\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"VendorAccounts\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error_Log0\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Items Data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Merge\",\n            \"type\": \"main\",\n            \"index\": 1\n          }\n        ]\n      ]\n    },\n    \"Merge\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Aggregate_DataItem\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validador Items\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Validación Item\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validación Fecha\": {\n      \"main\": [\n        [],\n        [\n          {\n            \"node\": \"Error_Log0\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Validación Item\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Code\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"Loop Over Items\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Webhook\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"AI_Variables\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"staticData\": null,\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true\n  },\n  \"pinData\": {\n    \"AI_Variables\": [\n      {\n        \"json\": {\n          \"id\": \"recLRrfXtvZJlZO2C\",\n          \"createdTime\": \"2024-09-01T22:12:57.000Z\",\n          \"Description\": \"Invoice Data Extraction XML or PDF\",\n          \"Projects\": [\n            \"recVlNBSZ9fVMzBIx\"\n          ],\n          \"UserPrompt_4\": \"# SPECIAL INSTRUCTIONS\\n- Make sure not to duplicate values.\\n- Assign each variable the corresponding value. Use the variable name and XML element to extract data accurately.\\n- Ensure that ReteIVA is extracted only when cac:TaxScheme/ID:05 and cac:TaxScheme/Name:ReteIVA are present.\\n- Ensure that ReteFuente is extracted only when cac:TaxScheme/ID:06 and cac:TaxScheme/Name:ReteFuente or <cbc:Name>ReteRenta are present.\\n- Ensure ReteICA is extracted only when cac:TaxScheme/ID:07 and cac:TaxScheme/Name:ReteICA are present.\\n- ReteIVA is not the same as ReteFuente, ReteRenta, or ReteICA.\\n- ReteICA is not the same as ReteFuente, ReteRenta, or ReteIVA.\\n- ReteFuente and ReteRenta are the same and distinct from ReteICA or ReteIVA.\\n- ReteICA is not the same as ICA. Both are independent variables.\\n- ReteIVA is not the same as IVA. Both are independent variables.\\n- Ensure to leave the value empty if there is no match for the corresponding tax field.\",\n          \"Temperature\": 0.6,\n          \"SystemPrompt\": \"# ROL\\nYou are an accountant with experience in Colombia, an expert in extracting data from invoices, and capable of reading and extracting data in both Spanish and English.\",\n          \"UserPrompt_1\": \"# TASK\\nExtract data from XML invoices. You will receive data from an XML text scrape of the invoice. Your task is to turn invoice data into structured fields: Parent Document ID, Issue Date, Sender Party Registration Name, Sender Party Company ID, Receiver Party Registration Name, Receiver Party Company ID, LineExtensionAmount, IVA, IC, ICA, INC, Rete IVA, Rete Fuente, Rete ICA, Tax Inclusive Amount, Payable Amount, Invoice Line, CUFE.\\n\\nEach variable has a unique value, do not duplicate values, and ensure accurate field allocation.\",\n          \"Platform\": [\n            \"recyNe6U43nbX3Nk4\"\n          ],\n          \"Model\": [\n            \"recjFBje60udzTklV\"\n          ],\n          \"UserPrompt_5\": \"__\",\n          \"UserPrompt_3\": \"# OUTPUT\\nEnsure that the output complies exactly with the JSON format and that all variables return a value extracted from the data given. If a value cannot be extracted, return an empty string for that field.\\n\\nReturn the result in JSON using this format:\\n\\n{  \\n  \\\"ParentDocumentID\\\": \\\"invoice id goes here. This is the invoice number or ID, it is not the file name. Avoid getting the file name\\\",\\n  \\\"IssueDate\\\": \\\"date when the invoice was issued\\\",\\n  \\\"SenderParty_RegistrationName\\\": \\\"vendor name goes here. This is the information of the party who issued the invoice\\\",\\n  \\\"SenderParty_CompanyID\\\": \\\"vendor tax ID goes here. This is the identification information of the party who issued the invoice\\\",\\n  \\\"ReceiverParty_RegistrationName\\\": \\\"customer name goes here. This is the information of the party who is receiving the invoice\\\",\\n  \\\"ReceiverParty_CompanyID\\\": \\\"customer tax ID goes here. This is the identification information of the party who is receiving the invoice\\\",\\n  \\\"LineExtensionAmount\\\": \\\"subtotal of the invoice. The value before taxes goes here\\\",\\n  \\\"TaxInclusiveAmount\\\": \\\"total taxable amount of the invoice. In Colombia, this includes the sales tax (IVA)\\\",\\n  \\\"IVA\\\": \\\"added sales value tax (IVA) in Colombia. The XML element and attribute is cac:TaxScheme/ID:01 and cac:TaxScheme/Name:IVA. Return the amount value, not the code value\\\", \\n  \\\"IC\\\": \\\"consumption tax (Impuesto al Consumo) in Colombia. The XML element and attribute is cac:TaxScheme/ID:02 and cac:TaxScheme/Name:IC. Return the amount value, not the code value\\\",\\n  \\\"ICA\\\": \\\"industry and commerce tax (Impuesto de Industria, Comercio y Aviso) in Colombia. The XML element and attribute is cac:TaxScheme/ID:03 and cac:TaxScheme/Name:ICA. Return the amount value, not the code value\\\",\\n  \\\"INC\\\": \\\"national consumption tax (Impuesto Nacional al Consumo) in Colombia. The XML element and attribute is cac:TaxScheme/ID:04 and cac:TaxScheme/Name:INC. Return the amount value, not the code value\\\",\\n  \\\"ReteFuente\\\": \\\"ReteFuente = ReteRenta (Income Withholding). The XML element and attribute is cac:TaxScheme/ID:06 and cac:TaxScheme/Name:ReteFuente or <cbc:Name>ReteRenta</cbc:Name>. Ensure to return only the amount value, not the code value, and ensure no overlap with ReteIVA or ReteICA.\\\",\\n  \\\"ReteICA\\\": \\\"Withholding for the industry and commerce tax. The XML element and attribute is cac:TaxScheme/ID:07 and cac:TaxScheme/Name:ReteICA. Ensure to return only the amount value, not the code value, and ensure no overlap with ReteFuente or ReteIVA.\\\",\\n  \\\"ReteIVA\\\": \\\"Withholding for added sales value tax, Retención sobre el IVA in Colombia. The XML element and attribute is cac:TaxScheme/ID:05 and cac:TaxScheme/Name:ReteIVA. Ensure to return only the amount value, not the code value, and ensure no overlap with ReteFuente or ReteICA.\\\",\\n  \\\"PayableAmount\\\": \\\"total payable amount of the invoice\\\",\\n  \\\"InvoiceLine\\\": \\\"description of all invoice items, including description, quantities, unit value, and total value of each item. If multiple invoice lines exist, concatenate the descriptions, separated by semicolons\\\",\\n  \\\"CUFE\\\": \\\"CUFE is an alphanumeric ID for the invoice\\\"  \\n}\\n\\nRespond only in JSON. The first character must be “{” and the last character “}”. Do not output “```json” or any other sort of format.\",\n          \"UserPrompt_2\": \"__\",\n          \"ID\": 1,\n          \"Name\": \"P1\",\n          \"ActualModel\": \"gpt-4o-mini\",\n          \"ActualPlatform\": \"openai\",\n          \"ActualProject\": \"Accounting Records\"\n        }\n      },\n      {\n        \"json\": {\n          \"id\": \"recICV5Bm4yuqT5yT\",\n          \"createdTime\": \"2024-09-05T23:20:19.000Z\",\n          \"Description\": \"Invoice Description\",\n          \"Projects\": [\n            \"recVlNBSZ9fVMzBIx\"\n          ],\n          \"UserPrompt_4\": \"__\",\n          \"Temperature\": 0.6,\n          \"SystemPrompt\": \"# ROL\\nYou are an accountant with experience in Colombia, an expert in extracting data from invoices, and capable of reading and extracting data in both Spanish and English. You are an expert in \\\"Plan Unico de Cuentas\\\" (PUC) and in all accounting regulations.\",\n          \"UserPrompt_1\": \"# TASK\\nRead the invoice information presented in a JSON schema. Your job is to write a short description of the invoice. The description must be concrete, succinct, and clear. It should contain the necessary information to classify the invoice properly in an accounting record for each relevant accounting statement according to the PUC. Do not include any monetary or quantity values, only the invoice description.\\n\\nThe description must be in spanish. Use up to 150 characters. \\n\\nDo not include any information from SenderParty and ReceiverParty. Do not include word \\\"Factura\\\".\\n\\nTo write the desciption only use the information in \\\"InvoiceLine\\\"\\n\\nMake sure to write a comprehensive and clear invoice description.\",\n          \"Platform\": [\n            \"recyNe6U43nbX3Nk4\"\n          ],\n          \"Model\": [\n            \"recjFBje60udzTklV\"\n          ],\n          \"UserPrompt_5\": \"__\",\n          \"UserPrompt_3\": \"# OUTPUT\\nEnsure that the output complies exactly with the JSON format and that all variables return a value extracted from the data given. If a value cannot be extracted, return an empty string for that field. \\n\\nReturn the result in JSON using this format: \\n\\n{ \\n\\\"InvoiceLineTxt\\\": ”Text from key value InvoiceLine. Is a must to present the data in a single string. Do not output the data in any other format”, \\n”Description”: ”Here goes the invoice Description. Do not include SenderParty_RegistrationName. No not include vendor name”,\\n\\\"ExpenseType\\\": \\\"Here you have to indicate if the invoice corresponds to a Purchase of Goods, Services Received, Asset Purchase or Inventory. In the clasification only use the types Purchase of Goods, Services Received, Asset Purchase or Inventory. Review in detail InvoiceLine to make the classification\\\"\\n} \\n\\nRespond only in JSON. The first character must be \\\"{\\\" and the last character \\\"}\\\". Do not output \\\"```json\\\" or any other sort of format. \\n\\nThe output must be a valid JSON. And all key values must output as simple strings\\n\",\n          \"UserPrompt_2\": \"# EXAMPLES\\nOutput examples\\n\\n### Example 1\\n\\n{\\n  \\\"InvoiceLineTxt\\\": \\\"Manzana Royal Gala, Manzana Verde, Mandarina Arrayana Kilo, Banano Urabá Kilo, Granadilla, Manzana Verde, Granadilla\\\",\\n  \\\"Description\\\": \\\"Compra de frutas variadas incluyendo manzanas, mandarinas, bananos y granadillas.\\\",\\n  \\\"ExpenseType\\\": \\\"Purchase of Goods\\\"\\n}\\n\\n### Example 2\\n\\n{\\n  \\\"InvoiceLineTxT\\\": \\\"POLIZA CUMPLIMIENTO 100036304 ANEXO 0, CERTIFICADO 97106840\\\",\\n  \\\"Description\\\": \\\"Póliza de cumplimiento relacionada con certificado.\\\",\\n  \\\"ExpenseType\\\": \\\"Services Received\\\"\\n}\",\n          \"ID\": 2,\n          \"Name\": \"P2\",\n          \"ActualModel\": \"gpt-4o-mini\",\n          \"ActualPlatform\": \"openai\",\n          \"ActualProject\": \"Accounting Records\"\n        }\n      },\n      {\n        \"json\": {\n          \"id\": \"recYjl3SvcSpi1yWM\",\n          \"createdTime\": \"2024-09-05T23:20:22.000Z\",\n          \"Description\": \"Account Classification\",\n          \"Projects\": [\n            \"recVlNBSZ9fVMzBIx\"\n          ],\n          \"UserPrompt_4\": \"# SPECIAL INSTRUCTIONS\\n- Output with extracted value only the identified and classified debit records.\\n- The output must be only the response in JSON. Do not include any additional information or explanation.\\n- Make sure to not repeat AccountNum8 in any other variable.\\n- Do not repeat accounts.\\n- Respond only in JSON. The first character must be `{` and the last character `}`. Do not output “```json” or any other sort of format.\\n- **Ensure that all values from `LineExtensionAmount`, `IVA`, `IC`, `ICA`, `INC`, `ReteIVA`, `ReteFuente`, `ReteICA` are allocated to the corresponding account.**\\n- Use the value from \\\"Account_to_InvoiceData_[1-40]\\\" to match invoice values with the corresponding account.\\n- If an exact match is not found, use context from `InvoiceDescription` or `ExpenseType` to classify.\",\n          \"Temperature\": 0.6,\n          \"SystemPrompt\": \"# ROL\\nYou are an accountant with extensive experience in Colombia, specializing in extracting and processing data from invoices in both Spanish and English. You are an expert in “NIIF” and the “Plan Unico de Cuentas” (PUC), and are well-versed in all relevant accounting regulations and procedures in Colombian accounting.\",\n          \"UserPrompt_1\": \"# Task\\nYour task is to read the invoice information and make the corresponding accounting record for the invoice. Based on the PUC, assign the appropriate account numbers to register the invoice in the accounting books.\\n\\n- Understand Invoice Description, Invoice Information, items included in InvoiceLine, and ExpenseType to accurately assign accounting accounts.\\n- Ensure all invoice values (LineExtensionAmount, IVA, IC, ICA, INC, ReteIVA, ReteFuente, ReteICA) are classified. Each value must be mapped to an appropriate PUC account.\\n- Include all necessary accounts to register the expenses or income, as well as taxes.\\n- For each account, specify whether it is a debit or a credit entry.\\n- Follow all Colombian accounting regulations and procedures meticulously.\\n- If a value cannot be directly mapped to an account from the provided PUC list, use context clues from InvoiceDescription and ExpenseType to classify it.\\n- If certain fields in the invoice data are empty or missing, indicate this by leaving the respective account values and descriptions as null.\",\n          \"Platform\": [\n            \"recyNe6U43nbX3Nk4\"\n          ],\n          \"Model\": [\n            \"recTgi0FhubRiARnu\"\n          ],\n          \"UserPrompt_5\": \"__\",\n          \"UserPrompt_3\": \"# OUTPUT\\nEnsure that the output complies exactly with the JSON format and that all variables return a value extracted from the data given. If a value cannot be extracted, return an empty string for that field.\\n\\n### JSON Output Structure:\\n{\\n  \\\"AccountNum[number]\\\": \\\"Here goes the account number\\\",\\n  \\\"AccountNum[number]_Des\\\": \\\"Here goes the account description AccountNum[number]\\\",\\n  \\\"AccountNum[number]_Val\\\": \\\"Here goes the monetary value from AccountNum[number] taken from invoice data\\\",\\n  \\\"AccountNum[number]_Deb_Cred\\\": \\\"Here goes only the classification Debit or Credit\\\",\\n  \\\"AccountNum8\\\": \\\"Here goes the account number of the liability\\\",\\n  \\\"AccountNum8_Des\\\": \\\"Here goes the account description AccountNum8, a liability account\\\",\\n  \\\"AccountNum8_Val\\\": \\\"Value = 0\\\",\\n  \\\"AccountNum8_Deb_Cred\\\": \\\"Equal to Credit\\\",\\n  \\\"Confidence\\\": \\\"Write the confidence level of the job done. The confidence value goes from 0.0 to 1.0. For example, a level of 0.2 represents low confidence in the account classification, while 0.9 represents high confidence in the account classification\\\"\\n}\\n\\n- [number] should be an iteration from 1 to 7.\\n- AccountNum1. The first Account is a Purchase of Goods, Services Received, Asset Purchase, or Inventory. From that, classify the other accounts.\\n- AccountNum1. Is a number greater than 50000000.\\n- AccountNum8 is a number greater than 20000000 and lower than 23999999. Ensure the selected account number meets this criterion.\\n- AccountNum1 and AccountNum8 always have to return a value and must be different from 0, cannot be empty.\",\n          \"UserPrompt_2\": \"# Examples\\n\\n## Example 1 Output\\n\\n{\\n  \\\"AccountNum1\\\": 52356005,\\n  \\\"AccountNum1_Des\\\": \\\"PUBLICIDAD, PROPAGANDA Y PROMOCIÓN\\\",\\n  \\\"AccountNum1_Val\\\": \\\"235000.00\\\",\\n  \\\"AccountNum1_Deb_Cred\\\": \\\"Debit\\\",\\n  \\\"AccountNum2\\\": 24080205,\\n  \\\"AccountNum2_Des\\\": \\\"IVA POR COMPRAS 19%\\\",\\n  \\\"AccountNum2_Val\\\": \\\"44650.00\\\",\\n  \\\"AccountNum2_Deb_Cred\\\": \\\"Debit\\\",\\n  \\\"AccountNum3\\\": 23680107,\\n  \\\"AccountNum3_Des\\\": \\\"RETENCION ICA 9.66\\\",\\n  \\\"AccountNum3_Val\\\": \\\"2270.10\\\",\\n  \\\"AccountNum3_Deb_Cred\\\": \\\"Credit\\\",\\n  \\\"AccountNum4\\\": 23654001,\\n  \\\"AccountNum4_Des\\\": \\\"RETENCION POR COMPRAS (DECLARANTES) 2.5%\\\",\\n  \\\"AccountNum4_Val\\\": \\\"9400.00\\\",\\n  \\\"AccountNum4_Deb_Cred\\\": \\\"Credit\\\",\\n  \\\"AccountNum5\\\": null,\\n  \\\"AccountNum5_Des\\\": null,\\n  \\\"AccountNum5_Val\\\": null,\\n  \\\"AccountNum5_Deb_Cred\\\": null,\\n  \\\"AccountNum6\\\": null,\\n  \\\"AccountNum6_Des\\\": null,\\n  \\\"AccountNum6_Val\\\": null,\\n  \\\"AccountNum6_Deb_Cred\\\": null,\\n  \\\"AccountNum7\\\": null,\\n  \\\"AccountNum7_Des\\\": null,\\n  \\\"AccountNum7_Val\\\": null,\\n  \\\"AccountNum7_Deb_Cred\\\": null,\\n  \\\"AccountNum8\\\": 22050501,\\n  \\\"AccountNum8_Des\\\": \\\"PROVEEDORES NACIONALES\\\",\\n  \\\"AccountNum8_Deb_Cred\\\": \\\"Credit\\\",\\n  \\\"Confidence\\\": \\\"0.90\\\"\\n}\\n\\n## Example 2 Output\\n\\n{\\n   \\\"AccountNum1\\\": 52550505,\\n  \\\"AccountNum1_Des\\\": \\\"ALOJAMIENTO Y MANUTENCIÓN\\\",\\n  \\\"AccountNum1_Val\\\": \\\"425742.88\\\",\\n  \\\"AccountNum1_Deb_Cred\\\": \\\"Debit\\\",\\n  \\\"AccountNum2\\\": 24080225,\\n  \\\"AccountNum2_Des\\\": \\\"COMPRAS DE SERV GRAV A TARIFA DE 19%\\\",\\n  \\\"AccountNum2_Val\\\": \\\"80891.14\\\",\\n  \\\"AccountNum2_Deb_Cred\\\": \\\"Debit\\\",\\n  \\\"AccountNum3\\\": null,\\n  \\\"AccountNum3_Des\\\": null,\\n  \\\"AccountNum3_Val\\\": null,\\n  \\\"AccountNum3_Deb_Cred\\\": null,\\n  \\\"AccountNum4\\\": null,\\n  \\\"AccountNum4_Des\\\": null,\\n  \\\"AccountNum4_Val\\\": null,\\n  \\\"AccountNum4_Deb_Cred\\\": null,\\n  \\\"AccountNum5\\\": null,\\n  \\\"AccountNum5_Des\\\": null,\\n  \\\"AccountNum5_Val\\\": null,\\n  \\\"AccountNum5_Deb_Cred\\\": null,\\n  \\\"AccountNum6\\\": null,\\n  \\\"AccountNum6_Des\\\": null,\\n  \\\"AccountNum6_Val\\\": null,\\n  \\\"AccountNum6_Deb_Cred\\\": null,\\n  \\\"AccountNum7\\\": null,\\n  \\\"AccountNum7_Des\\\": null,\\n  \\\"AccountNum7_Val\\\": null,\\n  \\\"AccountNum7_Deb_Cred\\\": null,\\n  \\\"AccountNum8\\\": 23356005,\\n  \\\"AccountNum8_Des\\\": \\\"GASTOS DE VIAJE\\\",\\n  \\\"AccountNum8_Deb_Cred\\\": \\\"Credit\\\",\\n  \\\"Confidence\\\": \\\"0.90\\\"\\n}\\n\\n\",\n          \"ID\": 3,\n          \"Name\": \"P3\",\n          \"ActualModel\": \"gpt-4o-2024-08-06\",\n          \"ActualPlatform\": \"openai\",\n          \"ActualProject\": \"Accounting Records\"\n        }\n      },\n      {\n        \"json\": {\n          \"id\": \"recRYuF3AGEi2eQBJ\",\n          \"createdTime\": \"2024-10-18T00:09:40.000Z\",\n          \"Description\": \"Item Description / ReteFuente - Category Classification\",\n          \"Projects\": [\n            \"recVlNBSZ9fVMzBIx\"\n          ],\n          \"UserPrompt_4\": \"__\",\n          \"Temperature\": 0.6,\n          \"SystemPrompt\": \"# ROL\\nYou are an accountant with experience in Colombia, an expert in extracting data from invoices, and capable of reading and extracting data in both Spanish and English. You are an expert in \\\"Plan Unico de Cuentas\\\" (PUC) and in all accounting regulations.\",\n          \"UserPrompt_1\": \"# TASK\\nRead the item description extracted from an invoice and classify the item into an \\\"Expense Type\\\" as either \\\"Purchase of Goods\\\" or \\\"Services Received.\\\"\\n\\n## Steps\\n\\n1. Analyze the item description provided.\\n2. Determine if the item is a \\\"Purchase of Goods\\\" or \\\"Services Received\\\" based on the description.\\n3. Assign the \\\"Expense Type\\\" based on the classification.\\n\",\n          \"Platform\": [\n            \"recyNe6U43nbX3Nk4\"\n          ],\n          \"Model\": [\n            \"recjFBje60udzTklV\"\n          ],\n          \"UserPrompt_5\": \"__\",\n          \"UserPrompt_3\": \"# OUTPUT\\nEnsure that the output complies exactly with the JSON format and that all variables return a value extracted from the data given. If a value cannot be extracted, return an empty string for that field. \\n\\nReturn the result in JSON using this format: \\n\\n{\\n\\\"ExpenseType\\\": \\\"Here you have to indicate if the item corresponds to a Purchase of Goods or Services Received.\\\"\\n}\\n\\n\\nRespond only in JSON. The first character must be \\\"{\\\" and the last character \\\"}\\\". Do not output \\\"```json\\\" or any other sort of format. \\n\\nThe output must be a valid JSON. And all key values must output as simple strings\\n\\n\",\n          \"UserPrompt_2\": \"__\",\n          \"ID\": 9,\n          \"Name\": \"P9\",\n          \"ActualModel\": \"gpt-4o-mini\",\n          \"ActualPlatform\": \"openai\",\n          \"ActualProject\": \"Accounting Records\"\n        }\n      },\n      {\n        \"json\": {\n          \"id\": \"rec8npiJ3wkxXmwhk\",\n          \"createdTime\": \"2024-10-18T22:20:02.000Z\",\n          \"Description\": \"ReteFuente - Type Classification\",\n          \"Projects\": [\n            \"recVlNBSZ9fVMzBIx\"\n          ],\n          \"UserPrompt_4\": \"__\",\n          \"Temperature\": 0.6,\n          \"SystemPrompt\": \"# ROL\\nYou are an accountant with experience in Colombia, an expert in extracting data from invoices, and capable of reading and extracting data in both Spanish and English. You are an expert in Tax classification, you classify conditions to calculate tax withholding for \\\"Retención en la Fuente\\\" or \\\"ReteFuente\\\"\",\n          \"UserPrompt_1\": \"# TASK\\nRead the item description extracted from an invoice and classify the item into its corresponding \\\"Type\\\". Select one type from the list provided that match with the item description.\\n\\n## Steps\\n\\n1. Analyze the item description provided.\\n2. Assign the \\\"Type\\\" based on the classification from the list provided.\\n\",\n          \"Platform\": [\n            \"recyNe6U43nbX3Nk4\"\n          ],\n          \"Model\": [\n            \"recjFBje60udzTklV\"\n          ],\n          \"UserPrompt_5\": \"__\",\n          \"UserPrompt_3\": \"# OUTPUT\\nEnsure that the output complies exactly with the JSON format and that all variables return a value extracted from the data given. If a value cannot be extracted, return an empty string for that field. \\n\\nReturn the result in JSON using this format: \\n\\n{\\n\\\"Type\\\": \\\"Here you have to write the type that matches the item description. For the classification only use data provided in list \\\"Type\\\"\\n}\\n\\n\\nRespond only in JSON. The first character must be \\\"{\\\" and the last character \\\"}\\\". Do not output \\\"```json\\\" or any other sort of format. \\n\\nThe output must be a valid JSON. And all key values must output as simple strings\\n\\n\",\n          \"UserPrompt_2\": \"__\",\n          \"ID\": 10,\n          \"Name\": \"P10\",\n          \"ActualModel\": \"gpt-4o-mini\",\n          \"ActualPlatform\": \"openai\",\n          \"ActualProject\": \"Accounting Records\"\n        }\n      },\n      {\n        \"json\": {\n          \"id\": \"rechJoSRqi80UJ23o\",\n          \"createdTime\": \"2024-10-20T15:07:45.000Z\",\n          \"Description\": \"ReteFuente - Concept Classification\",\n          \"Projects\": [\n            \"recVlNBSZ9fVMzBIx\"\n          ],\n          \"UserPrompt_4\": \"__\",\n          \"Temperature\": 0.6,\n          \"SystemPrompt\": \"# ROL\\nYou are an accountant with experience in Colombia, an expert in extracting data from invoices, and capable of reading and extracting data in both Spanish and English. You are an expert in Tax classification, and can classify conditions to calculate tax withholding for \\\"Retención en la Fuente\\\" or \\\"ReteFuente\\\"\",\n          \"UserPrompt_1\": \"# TASK\\nYou will be provided with an item description extracted from an invoice, along with a category, type, and a list of tax concepts. \\n\\nYour task is to:\\n1. Analyze the item description.\\n2. Identify the closest match based on the description, category, and type from the provided \\\"Concept List.\\\"\\n3. Based on the item description, classify the item into the corresponding \\\"CONCEPT\\\" value and assign the corresponding \\\"NUM\\\" value. You can only use \\\"CONCEPT\\\" and \\\"NUM\\\" values from the \\\"Concept List\\\" provided.\\n\\nAlways return a classification, selecting the most relevant option from the provided \\\"Concept List.\\\"\\n\",\n          \"Platform\": [\n            \"recyNe6U43nbX3Nk4\"\n          ],\n          \"Model\": [\n            \"recjFBje60udzTklV\"\n          ],\n          \"UserPrompt_5\": \"__\",\n          \"UserPrompt_3\": \"# OUTPUT\\nReturn the result in JSON format using the following structure:\\n\\n```json\\n{\\n    \\\"NUM\\\": \\\"The number of the closest matching concept from the 'Concept List'\\\",\\n    \\\"CONCEPT\\\": \\\"The concept that best matches the item description from the 'Concept List'\\\"\\n}\\n\\n\\nRespond only in JSON. The first character must be \\\"{\\\" and the last character \\\"}\\\". Do not output \\\"```json\\\" or any other sort of format. \\n\\nThe output must be a valid JSON. And all key values must output as simple strings\\n\\n\\\"NUM\\\" return the value as a valid number\\n\\\"NUM\\\" and \\\"CONCEPT\\\" Can not be empty, always return value\\n\\n\\n\",\n          \"UserPrompt_2\": \"__\",\n          \"ID\": 12,\n          \"Name\": \"P12\",\n          \"ActualModel\": \"gpt-4o-mini\",\n          \"ActualPlatform\": \"openai\",\n          \"ActualProject\": \"Accounting Records\"\n        }\n      }\n    ]\n  },\n  \"versionId\": \"58da4450-4593-4cf5-ae24-b0a40cf01ca9\",\n  \"triggerCount\": 1,\n  \"tags\": [\n    {\n      \"createdAt\": \"2025-02-04T13:55:27.606Z\",\n      \"updatedAt\": \"2025-02-04T13:55:27.606Z\",\n      \"id\": \"sFbVSiMOCzwy8ZoJ\",\n      \"name\": \"Causacion\"\n    }\n  ]\n}"
}
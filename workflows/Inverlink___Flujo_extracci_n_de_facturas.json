{
  "createdAt": "2025-06-20T20:16:08.272Z",
  "updatedAt": "2025-07-18T15:03:26.060Z",
  "id": "UYCF8M7fGlBIosgs",
  "name": "Inverlink - Flujo extracción de facturas",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2480,
        -160
      ],
      "id": "5a73739c-75f3-4463-9b93-7cdc374b918e",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "content": "ENLISTAR ARCHIVOS\n\nSe busca archivos de la carpeta facturas para ser procedas",
        "height": 540,
        "width": 2460,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2500,
        -300
      ],
      "typeVersion": 1,
      "id": "340c8e8c-d28d-4b94-a9ab-2476e959e4d7",
      "name": "Sticky Note"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me1",
      "typeVersion": 1,
      "position": [
        3380,
        60
      ],
      "id": "8cf07eca-5f54-480f-a927-6ac131afda43"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        800,
        -320
      ],
      "id": "d20dd0e1-2ab3-470a-91a6-35188835127e",
      "name": "PDF_Base"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d4c66d57-96de-47dc-a38e-1c73c242631a",
              "name": "Prompt_PDF",
              "value": "ROL\nEres una IA altamente especializada en extraer datos de facturas, recibos, tiquetes o comprobantes de pago en español, emitidos por aerolíneas, agencias, bancos, hoteles, plataformas de pago o empresas internacionales. Eres un OCR avanzado capaz de analizar PDF con texto, imágenes o ambos. Tu objetivo es identificar y extraer solamente los datos relevantes de cualquier documento recibido.\n\nINSTRUCCIONES\n-Extrae solo los datos solicitados según el esquema.\n-Usa la herramienta adecuada para leer el PDF (por ejemplo, Facturas_PDF).\n-Responde únicamente con los datos extraídos del PDF. No incluyas explicaciones ni texto adicional.\n-Si algún dato no está disponible en el PDF, asígnale el valor 0.\n-La respuesta debe estar en español y usar el formato solicitado.\n-Si en el PDF algún dato está en inglés (ej: “Recieved from”, “Amount Charged”), tradúcelo en la etiqueta pero no en el valor.\n-No inventes información ni uses datos de ejemplo; responde solo con lo que esté en el PDF.\n-Usa los ejemplos para validar formato, pero no los repitas.\n-En los productos de las facturas deseo que busques productos que contengan alcohol (Vinos, cervezas, Brandy, Ginebra, trequila/Mezcal) de todas las marcas del mundo y si se encuentra algún producto de este tipo que se muestre en el campo Alerta que pongas el texto Revisar\n- En el campo de Descripción error, vas a poner el texto \"Factura con bebida alcohólica\", si encuentras una factura con una bebida de este tipo.\n- Adicional te voy a pasar una lista de la cuenta 51 del PUC y vas a validar únicamente con la lista en que cuenta del PUC va la factura con base a la descripción de la factura, la estructura de las cuentas es la siguiente ejemplo: { \"codigo\": \"510503\", \"nombre\": \"SALARIO INTEGRAL\" }. Esta validación la vas a agregar en el campo del JSON que se llama cuentaPUC1 y DescripcionCuentaPUC1, importante no dejes estos dos campos vacios, busca bien a que cuenta pertenece.\nejemplo si vez algo de comida puede ser: cuentaPUC: 519520, DescripcionCuentaPUC: GASTOS REPRESENTACION RELACIONES PUBLICA\n- agrega la naturaleza de la cuenta obtenida en el campo NaturalezaCuentaPUC1: Débito o Crédito\n- Es importante que la información que dejes en el campo descripcion, sea Mayúscula la primera y el resto en minúscula, salvo nombres propios\n- El campo Nombre del cliente o beneficiario. Debes dejar los Nombres en el formato Como por ejemplo Juan Pablo\n- El campo ultimosCuatro guarda los 4 ultimos digitos de la tarjera de credito, Visa o mastercard\n- En el campo \"Codigo centro\": vas a asignar el valor que encontraras llamado: centroCostoCoincidente\n- En el campo \"Centro costo\": vas a asignar el valor que encontraras llamado: centroCostoCoincidenten\n\n\n\nOUTPUT\n\nExtrae y entrega únicamente los siguientes campos, usando este esquema:\n\n{\n  \"Nombre del cliente o beneficiario\": \"Nombre de la persona o empresa que paga o recibe el servicio. Puede estar como 'Recibido de', 'Recieved from', 'Cliente', 'Nombre pasajero', etc.\",\n  \"Correo\": \"Correo electrónico del cliente o beneficiario si existe.\",\n  \"Empresa emisora\": \"Empresa o entidad que emite la factura, recibo, tiquete o comprobante.\",\n  \"NIT empresa emisora\": \"NIT (Número de Identificación Tributaria)\"\n  \"Fecha de pago o compra\": \"Fecha de la compra, pago o emisión. Formato DD/MM/AAAA.\",\n  \"Número de comprobante o referencia\": \"Número de referencia, ticket, comprobante, factura o transacción.\",\n  \"Descripción\": \"Descripción del producto, servicio, fee, o motivo del pago.\",\n  \"Monto total cobrado\": \"Valor total pagado/cobrado. Solo el valor numérico.\",\n  \"Moneda\": \"Moneda en la que se hizo el pago (COP, USD, etc).\",\n  \"Valor impuestos\": \"Suma de todos los impuestos/tasas cobrados. Si no aparecen discriminados, escribir 0.\",\n  \"Método de pago\": \"Medio de pago utilizado, por ejemplo: Tarjeta Visa 6602, Mastercard 1234, PSE, Efectivo, etc.\",\n  \"Proveedor de pago\": \"Entidad o plataforma que procesa el pago, por ejemplo: Redeban, GlobalPay, Stripe.\",\n  \"Estado de la transacción\": \"Estado de la transacción/pago, por ejemplo: Approved, Pagado, Rechazado, etc.\",\n  \"País de origen del pago\": \"País o jurisdicción desde donde se realiza o recibe el pago, si está especificado.\",\n  \"Alerta\": \"\",\n  \"Descripción error\":\"\",\n  \"cuentaPUC1\": \"\",\n  \"DescripcionCuentaPUC1\": \"\",\n  \"NaturalezaCuentaPUC1\": \"Débito o Crédito\",\n  \"Codigo centro\": \"\",\n  \"Centro costo\": \"\",\n  \"ultimosCuatro\": \"ultimos 4 digitos de una tarjeta visa o mastercard que se encuentren en una factura ejemplo: visa **6602\"\n\nEJEMPLO: \n\n{\n  \"Nombre del cliente o beneficiario\": \"Enrique Vargas Garcia\",\n  \"Correo\": \"davella@inverlink.com\",\n  \"Empresa emisora\": \"Avianca\",\n  \"NIT empresa emisora\": \"890903938\",\n  \"Fecha de pago o compra\": \"22/01/2025\",\n  \"Número de comprobante o referencia\": \"1342139118392\",\n  \"Descripción\": \"STELLA ARTIOS, COCA COLA SIN AZUCAR\",\n  \"Monto total cobrado\": \"1321510\",\n  \"Moneda\": \"COP\",\n  \"Valor impuestos\": \"658210\",\n  \"Método de pago\": \"Visa 6602\",\n  \"Proveedor de pago\": \"0\",\n  \"Estado de la transacción\": \"Aprobada\",\n  \"País de origen del pago\": \"0\",\n  \"Alerta\": \"Revisar\",\n  \"Descripción error\":\"Factura con bebida alcohólica\",\n  \"cuentaPUC1\": \"519520\",\n  \"DescripcionCuentaPUC1\": \"GASTOS REPRESENTACION RELACIONES PUBLICA\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"Codigo centro\": \"001006\",\n  \"Centro costo\": \"MERCADEO EV\",\n  \"ultimosCuatro\": \"5679\"\n}\n{\n  \"Nombre del cliente o beneficiario\": \"Gateway FC - P. Leste\",\n  \"Correo\": \"0\",\n  \"Empresa emisora\": \"CIMA\",\n  \"NIT empresa emisora\": \"899999068\",\n  \"Fecha de pago o compra\": \"24/05/2025\",\n  \"Número de comprobante o referencia\": \"FCP-CAI-2025-0512\",\n  \"Descripción\": \"Fee pago gestión Cayman Islands\",\n  \"Monto total cobrado\": \"395 USD\",\n  \"Moneda\": \"USD\",\n  \"Valor impuestos\": \"0\",\n  \"Método de pago\": \"0\",\n  \"Proveedor de pago\": \"0\",\n  \"Estado de la transacción\": \"Confirmed\",\n  \"País de origen del pago\": \"Islas Caimán\",\n  \"Alerta\": \"\",\n  \"Descripción error\":\"\",\n  \"cuentaPUC1\": \"511095\",\n  \"DescripcionCuentaPUC1\": \"OTROS (HONORARIOS / SERVICIOS EXTERNOS)\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"Codigo centro\": \"001004\",\n  \"Centro costo\": \"MERCADEO FC\",\n  \"ultimosCuatro\": \"5467\"\n}\n{\n  \"Nombre del cliente o beneficiario\": \"INVERLINK S.A.S\",\n  \"Correo\": \"dbedoya@inverlink.com\",\n  \"Empresa emisora\": \"Global Pay\",\n  \"NIT empresa emisora\": \"899999230\",\n  \"Fecha de pago o compra\": \"21/02/2025\",\n  \"Número de comprobante o referencia\": \"DRL669\",\n  \"Descripción\": \"EXCEDENTE TRAMITE TRASPASO PLACA DRL669\",\n  \"Monto total cobrado\": \"18405\",\n  \"Moneda\": \"COP\",\n  \"Valor impuestos\": \"0\",\n  \"Método de pago\": \"Tarjeta crédito Visa 6602\",\n  \"Proveedor de pago\": \"Redeban\",\n  \"Estado de la transacción\": \"Pagado\",\n  \"País de origen del pago\": \"0\",\n  \"Alerta\": \"\",\n  \"cuentaPUC1\": \"514015\",\n  \"DescripcionCuentaPUC1\": \"TRAMITES Y LICENCIAS\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"Codigo centro\": \"001001\",\n  \"Centro costo\": \"PRINCIPAL\",\n  \"ultimosCuatro\": \"2356\"\n}",
              "type": "string"
            },
            {
              "id": "5c4810f7-0a2f-47d7-8d61-a7423b5eb946",
              "name": "nombrePDF",
              "value": "=",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        980,
        -120
      ],
      "id": "d4d7cdb9-55f8-44a8-9ec8-8dde910b775e",
      "name": "Prompts1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.anthropic.com/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "anthropicApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "anthropic-version",
              "value": "2023-06-01"
            },
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('Define Prompt').item.json.toJsonString() }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "759fd565-6e0a-40c3-a2a5-74d47accd892",
      "name": "AI - PDF1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1940,
        -120
      ],
      "typeVersion": 4.2,
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 5000,
      "credentials": {
        "anthropicApi": {
          "id": "lMcrEsjfTndw8b1i",
          "name": "Anthropic Bacamia"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Función para generar ID factura único\nfunction generateFacturaId() {\n  const prefix = 'FAC';\n  const timestamp = Date.now();\n  const random = Math.floor(Math.random() * 1000);\n  return `${prefix}-${timestamp}-${random}`;\n}\n\nconst codigocentro = $node[\"procesado analista_carpeta\"].json.centroCostoCoincidente.codigo;\nconst nombreCentro = $node[\"procesado analista_carpeta\"].json.centroCostoCoincidente.nombre;\n\n// Parsear el contenido JSON de la IA\nconst iaResponse = JSON.parse($json.content[0].text);\n\n// Si iaResponse es un array, agregar ID a cada item\nif (Array.isArray(iaResponse)) {\n  iaResponse.forEach(item => {\n    item.ID_FACTURA = generateFacturaId();\n  });\n}\n// Si es un objeto único, agregar ID\nelse if (iaResponse && typeof iaResponse === 'object') {\n  iaResponse.ID_FACTURA = generateFacturaId();\n}\n\n// Retornar todos los campos juntos\nreturn {\n  ...iaResponse,\n  //codigoCentro: codigocentro,\n  //nombreCentro: nombreCentro,\n  NOMBRE_PDF: $('Edición PDF').item.json.NOMBRE_PDF,\n  ID_PDF: $('Edición PDF').item.json.ID_PDF,\n  URL_DESCARGA: $('Edición PDF').item.json.URL_DESCARGA,\n  DRIVE_ID: $('Edición PDF').item.json.DRIVE_ID,\n  CARPETA_ID: $('Edición PDF').item.json.CARPETA_ID\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1800,
        -340
      ],
      "id": "1fe0ecba-b9f7-4f3a-83fc-96f728e7bba1",
      "name": "Depuración_Info1",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2620,
        40
      ],
      "id": "df8a3145-2d32-4c0b-9af8-abed2291647f",
      "name": "No Operation, do nothing3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0e1deca5-c14f-46e6-a9d5-288eb4730b18",
              "name": "=NOMBRE_PDF",
              "value": "=2025_{{ $json[\"Empresa emisora\"] || 'Revi' }}_{{ $json[\"Número de comprobante o referencia\"] }}_{{ $('Edición IMG').item.json.ID_PDF.slice(-4) }}.pdf",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2400,
        -460
      ],
      "id": "111b1069-a15f-4312-82ee-eda82edcf350",
      "name": "Rename1",
      "notesInFlow": false
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://graph.microsoft.com/v1.0/drives/{{$json[\"DRIVE_ID\"]}}/items/{{$json[\"ID_PDF\"]}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"name\": \"{{ $json['NOMBRE_PDF'] }}\",\n  \"parentReference\": {\n    \"id\": \"01IJRIS2SIB6I6ZS3IIBFZQXY2PYHXHAZQ\"\n  }\n}\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2300,
        -280
      ],
      "id": "14e26b6d-0218-48ab-9bc4-677dde58654b",
      "name": "HTTP Request1",
      "credentials": {
        "oAuth2Api": {
          "id": "h0MhrHGnW5SCKZID",
          "name": "Unnamed credential"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2820,
        40
      ],
      "id": "48c6a532-4fee-4c6c-994b-ade9da752d6f",
      "name": "No Operation, do nothing4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3040,
        40
      ],
      "id": "c960d349-02c4-4674-a4ab-61ab32594e93",
      "name": "No Operation, do nothing5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fea6a435-7330-4ae6-bd61-6e1dbeaa661f",
              "name": "URL Factura",
              "value": "={{ $json.URL_DESCARGA }}",
              "type": "string"
            },
            {
              "id": "9beb7e70-c4f0-401f-bf32-e3f3e590455d",
              "name": "=NOMBRE_PDF",
              "value": "={{ $json.NOMBRE_PDF }}",
              "type": "string"
            },
            {
              "id": "04adc5f4-6dd6-43c9-968b-f76f2d38e4d2",
              "name": "Nombre del cliente o beneficiario",
              "value": "={{ $('Rename1').item.json[\"Nombre del cliente o beneficiario\"]",
              "type": "string"
            },
            {
              "id": "d68be85e-7295-44b4-8a9a-2cbd59eba843",
              "name": "Correo",
              "value": "={{ $('Rename1').item.json[\"Correo\"]",
              "type": "string"
            },
            {
              "id": "2e30ff3e-d3ae-4f8f-91ca-7e15e2867eb0",
              "name": "Empresa emisora",
              "value": "={{ $('Rename1').item.json[\"Empresa emisora\"]",
              "type": "string"
            },
            {
              "id": "d7fc1f30-441d-49d7-8495-8545ec4bc6ee",
              "name": "Fecha de pago o compra",
              "value": "={{ $('Rename1').item.json[\"Fecha de pago o compra\"]",
              "type": "string"
            },
            {
              "id": "5a0e351a-69ec-4bf8-9d7a-2bd08285e571",
              "name": "Número de comprobante o referencia",
              "value": "={{ $('Rename1').item.json[\"Número de comprobante o referencia\"]",
              "type": "string"
            },
            {
              "id": "bc5428f2-7695-4acf-a378-b2572285aae4",
              "name": "Descripción",
              "value": "={{ $('Rename1').item.json[\"Descripción\"]",
              "type": "string"
            },
            {
              "id": "f3ee08fe-f6de-44b5-be44-a36b9e7fe06e",
              "name": "Monto total cobrado",
              "value": "={{ $('Rename1').item.json[\"Monto total cobrado\"]",
              "type": "string"
            },
            {
              "id": "052770fb-6ad0-470b-b8d0-365fa9f93f04",
              "name": "Moneda",
              "value": "={{ $('Rename1').item.json[\"Moneda\"]",
              "type": "string"
            },
            {
              "id": "60e75716-9a64-490e-9663-948c75fe0c56",
              "name": "Valor impuestos",
              "value": "={{ $('Rename1').item.json[\"Valor impuestos\"]",
              "type": "string"
            },
            {
              "id": "3f6b9073-b481-418f-9599-380918a7ad69",
              "name": "Método de pago",
              "value": "={{ $('Rename1').item.json[\"Método de pago\"]",
              "type": "string"
            },
            {
              "id": "d4990917-2a1e-4807-9986-9a9f0603c12a",
              "name": "Proveedor de pago",
              "value": "={{ $('Rename1').item.json[\"Proveedor de pago\"]",
              "type": "string"
            },
            {
              "id": "695427cb-ba8a-4fad-b9bf-0e8ed417f47b",
              "name": "Estado de la transacción",
              "value": "={{ $('Rename1').item.json[\"Estado de la transacción\"]",
              "type": "string"
            },
            {
              "id": "fe829a6c-c33b-430a-846f-5b502327e4f0",
              "name": "País de origen del pago",
              "value": "={{ $('Rename1').item.json[\"País de origen del pago\"]",
              "type": "string"
            },
            {
              "id": "f18ed321-fd8b-4413-991e-2b0e999c75fe",
              "name": "Error",
              "value": "={{ $('Rename1').item.json[\"Alerta\"]",
              "type": "string"
            },
            {
              "id": "ce277f91-a228-4602-a275-9e0074b0fb25",
              "name": "FECHA_EXTRACCION",
              "value": "={{ $now.setLocale('es').toFormat('dd/LL/yyyy') }}",
              "type": "string"
            },
            {
              "id": "36305207-d96a-4f19-a252-5480f78b0414",
              "name": "Cuenta puc 1",
              "value": "={{ $('Rename1').item.json.cuentaPUC1 }}",
              "type": "string"
            },
            {
              "id": "af144341-eb10-462b-86d4-c793cf3a5a71",
              "name": "Descripción cuenta puc 1",
              "value": "={{ $('Rename1').item.json.DescripcionCuentaPUC1 }}",
              "type": "string"
            },
            {
              "id": "e6f80503-a7bc-47ef-999e-9c8e7ef2b1f8",
              "name": "Naturaleza 1",
              "value": "={{ $('Rename1').item.json.NaturalezaCuentaPUC1 }}",
              "type": "string"
            },
            {
              "id": "c50e65c1-4370-4489-8100-46d102e4430b",
              "name": "NIT empresa emisora",
              "value": "={{ $('Rename1').item.json['NIT empresa emisora'] }}",
              "type": "string"
            },
            {
              "id": "0f76bd03-7647-4d86-9e3f-0506efc82151",
              "name": "Descripción error",
              "value": "={{ $('Rename1').item.json['Descripción error'] }}",
              "type": "string"
            },
            {
              "id": "41b39662-f99a-4edf-ba63-8400b991a40f",
              "name": "codigocc",
              "value": "={{ $json['Codigo centro'] }}",
              "type": "string"
            },
            {
              "id": "6401b233-25e5-4061-8c89-3889a5033ef7",
              "name": "centroCosto",
              "value": "={{ $json['Centro costo'] }}",
              "type": "string"
            },
            {
              "id": "561cffbc-94fd-42b1-8dee-c764c1181f15",
              "name": "=Id factura",
              "value": "={{ $json.ID_FACTURA }}",
              "type": "string"
            },
            {
              "id": "3ff9c8b9-289b-437e-a071-dd47903c171c",
              "name": "ultimosCuatro",
              "value": "={{ $json.ultimosCuatro }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2720,
        -460
      ],
      "id": "dac4947e-66ba-4f90-8106-98de1cfb40cb",
      "name": "Set Datos Completos1"
    },
    {
      "parameters": {
        "content": "PROCESAMIENTO\n-Descarga de archivo\n-Extración de data de PDF\n-Revisión y extracción con IA",
        "height": 1160,
        "width": 2120,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        -780
      ],
      "typeVersion": 1,
      "id": "7f558f31-123b-4971-a748-567f41701d39",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "DEPURACIÓN Y CARGUE FINAL\n-Depura la información suministrada por la IA\n-Carga la información en un archivo Excel",
        "height": 820,
        "width": 1460,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2120,
        -580
      ],
      "typeVersion": 1,
      "id": "7d49201a-45b7-4763-8708-447920cf5dbf",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "dc7ff997-0402-4b12-b6f3-d655991b9ac5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagenes"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a939d6eb-bcde-4975-bf4c-f2dcb9e3147e",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "=application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pdf"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4fee4058-5f53-4edd-a9e8-1e3089462ea9",
                    "leftValue": "={{ $json.mimeType }}",
                    "rightValue": "sheet",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Excel"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        0,
        -60
      ],
      "id": "14ddf767-4f11-44e0-a519-c3966291f923",
      "name": "Switch"
    },
    {
      "parameters": {
        "url": "={{ $('Edición IMG').item.json.URL_DESCARGA }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        920,
        -560
      ],
      "id": "3979c932-6a4c-4963-a446-5ca74a618262",
      "name": "Descarga Imagen",
      "credentials": {
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      },
      "notes": "Con este nodo se descargan las imágenes, en formato "
    },
    {
      "parameters": {
        "url": "={{$json[\"URL_DESCARGA\"]}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        -320
      ],
      "id": "2cf247bc-0972-47cd-a550-f872fffb8ad0",
      "name": "Descarga pdf",
      "credentials": {
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d0fc399-fdea-48d1-bba4-5bccb7dc971b",
              "name": "NOMBRE_PDF",
              "value": "={{$json[\"name\"]}}",
              "type": "string"
            },
            {
              "id": "aa0c6fe1-b566-435e-9405-bcca6a748c67",
              "name": "ID_PDF",
              "value": "={{ $json.ID_PDF }}",
              "type": "string"
            },
            {
              "id": "cd03936b-6e2f-48a9-a7a1-afd31401ea44",
              "name": "URL_DESCARGA",
              "value": "={{ $json.urlDownload }}",
              "type": "string"
            },
            {
              "id": "1fd837ff-45b4-48af-9232-93f39b0bef31",
              "name": "DRIVE_ID",
              "value": "={{ $json.DRIVE_ID }}",
              "type": "string"
            },
            {
              "id": "90ff3a02-b31a-41c3-8660-1f53dfefd3bb",
              "name": "CARPETA_ID",
              "value": "={{ $json.CARPETA_ID }}",
              "type": "string"
            },
            {
              "id": "91896da8-b5b2-4f74-9dc0-d77ad159407c",
              "name": "carpetaAnalista",
              "value": "={{ $json.carpetaAnalista }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        -560
      ],
      "id": "9891d22e-3518-4b2f-b0b4-ab5fd4dc84e0",
      "name": "Edición IMG",
      "notes": "Se obtienen los datos de identificación de la imagen "
    },
    {
      "parameters": {
        "url": "={{$json[\"URL_DESCARGA\"]}}",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        660,
        140
      ],
      "id": "9207e914-2f08-4f25-9641-63ec2dbf65bb",
      "name": "Descarga xlsx",
      "credentials": {
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d0fc399-fdea-48d1-bba4-5bccb7dc971b",
              "name": "NOMBRE_PDF",
              "value": "={{$json[\"name\"]}}",
              "type": "string"
            },
            {
              "id": "aa0c6fe1-b566-435e-9405-bcca6a748c67",
              "name": "ID_PDF",
              "value": "=",
              "type": "string"
            },
            {
              "id": "cd03936b-6e2f-48a9-a7a1-afd31401ea44",
              "name": "URL_DESCARGA",
              "value": "={{ $json.urlDownload }}",
              "type": "string"
            },
            {
              "id": "1fd837ff-45b4-48af-9232-93f39b0bef31",
              "name": "DRIVE_ID",
              "value": "=",
              "type": "string"
            },
            {
              "id": "90ff3a02-b31a-41c3-8660-1f53dfefd3bb",
              "name": "CARPETA_ID",
              "value": "=",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        380,
        140
      ],
      "id": "da9325e4-2eb4-48d4-89b5-308169d79974",
      "name": "Edición XLSX"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9d0fc399-fdea-48d1-bba4-5bccb7dc971b",
              "name": "NOMBRE_PDF",
              "value": "={{$json[\"name\"]}}",
              "type": "string"
            },
            {
              "id": "aa0c6fe1-b566-435e-9405-bcca6a748c67",
              "name": "ID_PDF",
              "value": "={{ $json.ID_PDF }}",
              "type": "string"
            },
            {
              "id": "cd03936b-6e2f-48a9-a7a1-afd31401ea44",
              "name": "URL_DESCARGA",
              "value": "={{ $json.urlDownload }}",
              "type": "string"
            },
            {
              "id": "1fd837ff-45b4-48af-9232-93f39b0bef31",
              "name": "DRIVE_ID",
              "value": "={{ $json.DRIVE_ID }}",
              "type": "string"
            },
            {
              "id": "90ff3a02-b31a-41c3-8660-1f53dfefd3bb",
              "name": "CARPETA_ID",
              "value": "={{ $json.CARPETA_ID }}",
              "type": "string"
            },
            {
              "id": "723ac2a2-4c30-48b2-9077-f166edf85ebe",
              "name": "carpetaAnalista",
              "value": "={{ $json.carpetaAnalista }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        360,
        -320
      ],
      "id": "2cef9121-5839-4a8c-b953-f10e30765766",
      "name": "Edición PDF"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2160,
        -380
      ],
      "id": "54cd6eda-b222-431b-a5d4-bd268d800512",
      "name": "Merge",
      "alwaysOutputData": true,
      "executeOnce": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Cambios de proceso\n\n- se agrega validación para tipos de archivos pdf.\n- Se validan todo tipo de imágenes para OCR\n- se cambia anthropic por chat GPT\n- se realiza extracción de información de Uber y Cabify, se realiza limpieza de archivos y modificación de los archivos. \n## Crédito VS Débito",
        "height": 340,
        "width": 500
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        -1240
      ],
      "id": "6bead54f-a19e-44ac-b1b8-06a9aef0a882",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "63a39e95-fb0f-4962-a2a1-ad4bbddfe40b",
              "leftValue": "={{ $json.NOMBRE_PDF }}",
              "rightValue": "UBER",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "88225e6d-c76e-40f6-9ee8-52458fda7bb4",
              "leftValue": "={{ $json.NOMBRE_PDF}}",
              "rightValue": "uber",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "4647fd2b-0167-466d-a30e-8167d5b3afe1",
              "leftValue": "={{ $json.NOMBRE_PDF }}",
              "rightValue": "Uber",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        840,
        140
      ],
      "id": "8d8ab075-4daf-4f96-8889-f2ff2607a5fe",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "headerRow": "=1",
          "range": "A6:BP1000"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1040,
        60
      ],
      "id": "d03f952e-03ae-4d91-87ab-8fca595f218c",
      "name": "Extract UBER",
      "notes": "Se genera el formato de Uber para enviar a la base de datos y realizar la consolidación. "
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1040,
        220
      ],
      "id": "14b5c46e-5080-4a91-9c11-3d440e2cfec8",
      "name": "Extract Cabify",
      "notes": "Se genera el formato de Cabify para enviar a la base de datos y realizar la consolidación. "
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1680,
        120
      ],
      "id": "e49dac7f-abef-47aa-8d01-e282bd4cbccd",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "let items = $input.all();\nconst date = new Date();\nconst day = String(date.getDate()).padStart(2, '0');\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst month = monthNames[date.getMonth()];\nconst year = date.getFullYear();\nconst formattedDate = `${day}-${month} ${year}`;\n\nconst personas = [\n  {\n    nombre: \"ENRIQUE VARGAS GARCIA\",\n    codigo: \"001006\",\n    centroCosto: \"MERCADEO EV\"\n  },\n  {\n    nombre: \"ANDRES FELIPE CAMACHO GONZALEZ\",\n    codigo: \"001004\",\n    centroCosto: \"MERCADEO FC\"\n  },\n  {\n    nombre: \"MAURICIO SALDARRIAGA NAVARRO\",\n    codigo: \"001002\",\n    centroCosto: \"MERCADEO MSN\"\n  },\n  {\n    nombre: \"NICOLAS GOMEZ SAAVEDRA\",\n    codigo: \"001003\",\n    centroCosto: \"MERCADEO NGS\"\n  },\n  {\n    nombre: \"FELIPE GAVIRIA LOPEZ\",\n    codigo: \"001015\",\n    centroCosto: \"MERCADEO FG\"\n  },\n  {\n    nombre: \"NICOLAS GOMEZ SAAVEDRA\",\n    codigo: \"001003\",\n    centroCosto: \"MERCADEO NGS\"\n  },\n  {\n    nombre: \"PEDRO LIEVANO L\",\n    codigo: \"001024\",\n    centroCosto: \"MERCADEO PD\"\n  }\n];\n\nfunction capitalizarNombre(nombre) {\n  return nombre\n    .toLowerCase()\n    .split(' ')\n    .map(palabra => palabra.charAt(0).toUpperCase() + palabra.slice(1))\n    .join(' ');\n}\n\nfunction normalizartarjetas(ultimosCuatro){\n  return ultimosCuatro.replace(/\\D/g, '');\n}\n\nfunction limpiarTexto(texto) {\n  return texto\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\") // quita tildes\n    .replace(/[^a-z]/g, \"\");         // elimina todo excepto letras\n}\n\nfunction buscarPersona(nombreApellido) {\n  const limpioOriginal = limpiarTexto(nombreApellido);\n  \n  // Primer intento: tal cual\n  let match = personas.find(p =>\n    limpiarTexto(p.nombre).includes(limpioOriginal)\n  );\n  if (match) return match;\n\n  // Segundo intento: invertir el orden si hay más de una palabra\n  const partes = nombreApellido.replace(',', '').split(/\\s+/);\n  if (partes.length >= 2) {\n    const invertido = limpiarTexto(partes.reverse().join(' '));\n    match = personas.find(p =>\n      limpiarTexto(p.nombre).includes(invertido)\n    );\n    if (match) return match;\n  }\n\n  // Tercer intento: detectar nombres concatenados y separarlos\n  const nombreLimpio = nombreApellido.replace(',', '').trim();\n  const palabrasExtraidas = [];\n  \n  // Separar por espacios\n  palabrasExtraidas.push(...nombreLimpio.split(/\\s+/));\n  \n  // Intentar separar palabras concatenadas (buscar patrones comunes)\n  const nombreSinEspacios = nombreLimpio.replace(/\\s+/g, '');\n  \n  // Buscar patrones conocidos en los apellidos de la lista\n  const apellidosConocidos = ['camacho', 'felipe', 'andres', 'vargas', 'garcia', 'gonzalez', 'saldarriaga', 'navarro', 'gomez', 'saavedra', 'gaviria', 'lopez', 'lievano'];\n  \n  apellidosConocidos.forEach(apellido => {\n    const regex = new RegExp(apellido, 'i');\n    if (regex.test(nombreSinEspacios)) {\n      const limpio = limpiarTexto(apellido);\n      if (!palabrasExtraidas.some(p => limpiarTexto(p) === limpio)) {\n        palabrasExtraidas.push(apellido);\n      }\n    }\n  });\n  \n  // Limpiar y filtrar palabras\n  const palabrasLimpias = palabrasExtraidas\n    .map(p => limpiarTexto(p))\n    .filter(p => p.length > 2);\n  \n  if (palabrasLimpias.length > 0) {\n    match = personas.find(p => {\n      const nombrePersona = limpiarTexto(p.nombre);\n      // Verificar si al menos 2 palabras coinciden\n      const coincidencias = palabrasLimpias.filter(palabra => \n        nombrePersona.includes(palabra)\n      );\n      return coincidencias.length >= 2;\n    });\n    if (match) return match;\n  }\n\n  // Cuarto intento: buscar coincidencias parciales por longitud\n  const palabrasOriginales = nombreApellido.replace(',', '').split(/\\s+/).map(p => limpiarTexto(p));\n  \n  match = personas.find(p => {\n    const nombrePersona = limpiarTexto(p.nombre);\n    return palabrasOriginales.some(palabra => {\n      if (palabra.length > 4) {\n        // Para palabras largas, buscar si contiene partes del nombre\n        const partesNombre = nombrePersona.split(' ');\n        return partesNombre.some(parte => \n          palabra.includes(parte) || parte.includes(palabra)\n        );\n      }\n      return false;\n    });\n  });\n\n  return match;\n}\n\n// Función para normalizar el servicio\nfunction normalizarServicio(servicio) {\n  const serviciosUber = [\n    \"Travel | Comfort\",\n    \"Travel | Economy\", \n    \"Travel | UberYa\",\n    \"Travel | UberXL\"\n  ];\n  \n  return serviciosUber.includes(servicio) ? \"Uber\" : servicio;\n}\n\nlet resultados = items.map((item, index) => {\n    let marcaTemporal = item.json[\"Marca temporal de la transacción (UTC)\"];\n    let soloFecha = marcaTemporal.split(' ')[0];\n\n    let nombreFormateado = capitalizarNombre(item.json[\"Nombre\"]);\n    let apellidoFormateado = capitalizarNombre(item.json[\"Apellido\"]);\n    let nombreApellido = nombreFormateado + \" \" + apellidoFormateado;\n\n    // Buscar coincidencia en personas\n    let personaEncontrada = buscarPersona(nombreApellido);\n\n    const prefix = 'FAC';\n    const timestamp = Date.now();\n    const random = Math.floor(Math.random() * 1000);\n\n    let ultimosCuatro = item.json[\"Método de pago\"]\n\n    // Normalizar el servicio\n    const servicioOriginal = item.json[\"Servicio\"];\n    const servicioNormalizado = normalizarServicio(servicioOriginal);\n\n    return {\n        json: {\n            \"Id factura\": `${prefix}-${timestamp}-${random}-${index}`,\n            \"Nombre del cliente o beneficiario\": nombreApellido,\n            Correo: item.json[\"Correo electrónico\"],\n            \"Empresa emisora\": servicioNormalizado,\n            \"NIT empresa emisora\": \"900676165-2\",\n            \"Fecha de pago o compra\": soloFecha,\n            \"Número de comprobante o referencia\": item.json[\"Id, de viaje/pedido\"],\n            \"Descripción\": \"Viaje\",\n            \"Monto total cobrado\": item.json[\"Monto de la transacción en moneda local (se incluyen impuestos)\"],\n            \"Moneda\": item.json[\"Código de la moneda local\"],\n            \"Valor impuestos\": item.json[\"Impuestos en COP\"],\n            \"Método de pago\": item.json[\"Método de pago\"],\n            \"Proveedor de pago\": \"\",\n            \"Estado de la transacción\": \"\",\n            \"País de origen del pago\": item.json[\"Ciudad\"],\n            \"NOMBRE_PDF\": $('Descarga xlsx').first().json.NOMBRE_XLSX,\n            \"URL Factura\": $('Listar analistas').first().json.value[0].webUrl,\n            \"FECHA_EXTRACCION\": formattedDate,\n            Error: \"\",\n            \"Descripción error\": personaEncontrada ? \"\" : \"No encontrado en lista de personas\",\n            \"Cuenta puc 1\": \"519545\",\n            \"Descripción cuenta puc 1\": \"TAXIS Y BUSES\",\n            \"Naturaleza 1\": \"Débito\",\n            \"codigocc\": personaEncontrada ? personaEncontrada.codigo : \"\",\n            \"centroCosto\": personaEncontrada ? personaEncontrada.centroCosto : \"\",\n            \"ultimosCuatro\": normalizartarjetas(ultimosCuatro)\n        }\n    };\n});\n\nreturn resultados;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        60
      ],
      "id": "2c1bf246-e305-4028-9de4-dec6c9af3235",
      "name": "Format UBER"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "text": "=ROL\nEres una IA altamente especializada en extraer datos de facturas, recibos, tiquetes o comprobantes de pago en español, emitidos por aerolíneas, agencias, bancos, hoteles, plataformas de pago o empresas internacionales. Eres un OCR avanzado capaz de analizar PDF con texto, imágenes o ambos. Tu objetivo es identificar y extraer solamente los datos relevantes de cualquier documento recibido.\n\nINSTRUCCIONES\n-Extrae solo los datos solicitados según el esquema.\n-Usa la herramienta adecuada para leer el PDF (por ejemplo, Facturas_PDF).\n-Responde únicamente con los datos extraídos del PDF. No incluyas explicaciones ni texto adicional.\n-Si algún dato no está disponible en el PDF, asígnale el valor 0.\n-La respuesta debe estar en español y usar el formato solicitado.\n-Si en el PDF algún dato está en inglés (ej: “Recieved from”, “Amount Charged”), tradúcelo en la etiqueta pero no en el valor.\n-No inventes información ni uses datos de ejemplo; responde solo con lo que esté en el PDF.\n-Usa los ejemplos para validar formato, pero no los repitas.\n-En los productos de las facturas deseo que busques productos que contengan alcohol (Vinos, cervezas, Brandy, Ginebra, trequila/Mezcal) de todas las marcas del mundo y si se encuentra algún producto de este tipo que se muestre en el campo Alerta que pongas el texto Revisar\n- En el campo de Descripción error, vas a poner el texto \"Factura con bebida alcohólica\", si encuentras una factura con una bebida de este tipo.\n- Adicional te voy a pasar una lista de la cuenta 51 del PUC y vas a validar únicamente con la lista en que cuenta del PUC va la factura con base a la descripción de la factura, la estructura de las cuentas es la siguiente ejemplo: { \"codigo\": \"510503\", \"nombre\": \"SALARIO INTEGRAL\" }. Esta validación la vas a agregar en el campo del JSON que se llama cuentaPUC1 y DescripcionCuentaPUC1, importante no dejes estos dos campos vacios, busca bien a que cuenta pertenece.\nejemplo si vez algo de comida puede ser: cuentaPUC: 519520, DescripcionCuentaPUC: GASTOS REPRESENTACION RELACIONES PUBLICA\n- agrega la naturaleza de la cuenta obtenida en el campo NaturalezaCuentaPUC1: Débito o Crédito\n- Es importante que la información que dejes en el campo descripcion, sea Mayúscula la primera y el resto en minúscula, salvo nombres propios\n- El campo Nombre del cliente o beneficiario. Debes dejar los Nombres en el formato Como por ejemplo Juan Pablo\n- El campo ultimosCuatro guarda los 4 ultimos digitos de la tarjera de credito, Visa o mastercard\n- En el campo \"Codigo centro\": vas a asignar el valor que encontraras llamado: centroCostoCoincidente\n- En el campo \"Centro costo\": vas a asignar el valor que encontraras llamado: centroCostoCoincidenten\n\n\n\nOUTPUT\n\nExtrae y entrega únicamente los siguientes campos, usando este esquema:\n\n{\n  \"Nombre del cliente o beneficiario\": \"Nombre de la persona o empresa que paga o recibe el servicio. Puede estar como 'Recibido de', 'Recieved from', 'Cliente', 'Nombre pasajero', etc.\",\n  \"Correo\": \"Correo electrónico del cliente o beneficiario si existe.\",\n  \"Empresa emisora\": \"Empresa o entidad que emite la factura, recibo, tiquete o comprobante.\",\n  \"NIT empresa emisora\": \"NIT (Número de Identificación Tributaria)\"\n  \"Fecha de pago o compra\": \"Fecha de la compra, pago o emisión. Formato DD/MM/AAAA.\",\n  \"Número de comprobante o referencia\": \"Número de referencia, ticket, comprobante, factura o transacción.\",\n  \"Descripción\": \"Descripción del producto, servicio, fee, o motivo del pago.\",\n  \"Monto total cobrado\": \"Valor total pagado/cobrado. Solo el valor numérico.\",\n  \"Moneda\": \"Moneda en la que se hizo el pago (COP, USD, etc).\",\n  \"Valor impuestos\": \"Suma de todos los impuestos/tasas cobrados. Si no aparecen discriminados, escribir 0.\",\n  \"Método de pago\": \"Medio de pago utilizado, por ejemplo: Tarjeta Visa 6602, Mastercard 1234, PSE, Efectivo, etc.\",\n  \"Proveedor de pago\": \"Entidad o plataforma que procesa el pago, por ejemplo: Redeban, GlobalPay, Stripe.\",\n  \"Estado de la transacción\": \"Estado de la transacción/pago, por ejemplo: Approved, Pagado, Rechazado, etc.\",\n  \"País de origen del pago\": \"País o jurisdicción desde donde se realiza o recibe el pago, si está especificado.\",\n  \"Alerta\": \"\",\n  \"Descripción error\":\"\",\n  \"cuentaPUC1\": \"\",\n  \"DescripcionCuentaPUC1\": \"\",\n  \"NaturalezaCuentaPUC1\": \"Débito o Crédito\",\n  \"Codigo centro\": \"\",\n  \"Centro costo\": \"\",\n  \"ultimosCuatro\": \"ultimos 4 digitos de una tarjeta visa o mastercard que se encuentren en una factura ejemplo: visa **6602\"\n\nEJEMPLO: \n\n{\n  \"Nombre del cliente o beneficiario\": \"Enrique Vargas Garcia\",\n  \"Correo\": \"davella@inverlink.com\",\n  \"Empresa emisora\": \"Avianca\",\n  \"NIT empresa emisora\": \"890903938\",\n  \"Fecha de pago o compra\": \"22/01/2025\",\n  \"Número de comprobante o referencia\": \"1342139118392\",\n  \"Descripción\": \"STELLA ARTIOS, COCA COLA SIN AZUCAR\",\n  \"Monto total cobrado\": \"1321510\",\n  \"Moneda\": \"COP\",\n  \"Valor impuestos\": \"658210\",\n  \"Método de pago\": \"Visa 6602\",\n  \"Proveedor de pago\": \"0\",\n  \"Estado de la transacción\": \"Aprobada\",\n  \"País de origen del pago\": \"0\",\n  \"Alerta\": \"Revisar\",\n  \"Descripción error\":\"Factura con bebida alcohólica\",\n  \"cuentaPUC1\": \"519520\",\n  \"DescripcionCuentaPUC1\": \"GASTOS REPRESENTACION RELACIONES PUBLICA\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"Codigo centro\": \"001006\",\n  \"Centro costo\": \"MERCADEO EV\",\n  \"ultimosCuatro\": \"5679\"\n}\n{\n  \"Nombre del cliente o beneficiario\": \"Gateway FC - P. Leste\",\n  \"Correo\": \"0\",\n  \"Empresa emisora\": \"CIMA\",\n  \"NIT empresa emisora\": \"899999068\",\n  \"Fecha de pago o compra\": \"24/05/2025\",\n  \"Número de comprobante o referencia\": \"FCP-CAI-2025-0512\",\n  \"Descripción\": \"Fee pago gestión Cayman Islands\",\n  \"Monto total cobrado\": \"395 USD\",\n  \"Moneda\": \"USD\",\n  \"Valor impuestos\": \"0\",\n  \"Método de pago\": \"0\",\n  \"Proveedor de pago\": \"0\",\n  \"Estado de la transacción\": \"Confirmed\",\n  \"País de origen del pago\": \"Islas Caimán\",\n  \"Alerta\": \"\",\n  \"Descripción error\":\"\",\n  \"cuentaPUC1\": \"511095\",\n  \"DescripcionCuentaPUC1\": \"OTROS (HONORARIOS / SERVICIOS EXTERNOS)\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"Codigo centro\": \"001004\",\n  \"Centro costo\": \"MERCADEO FC\",\n  \"ultimosCuatro\": \"5467\"\n}\n{\n  \"Nombre del cliente o beneficiario\": \"INVERLINK S.A.S\",\n  \"Correo\": \"dbedoya@inverlink.com\",\n  \"Empresa emisora\": \"Global Pay\",\n  \"NIT empresa emisora\": \"899999230\",\n  \"Fecha de pago o compra\": \"21/02/2025\",\n  \"Número de comprobante o referencia\": \"DRL669\",\n  \"Descripción\": \"EXCEDENTE TRAMITE TRASPASO PLACA DRL669\",\n  \"Monto total cobrado\": \"18405\",\n  \"Moneda\": \"COP\",\n  \"Valor impuestos\": \"0\",\n  \"Método de pago\": \"Tarjeta crédito Visa 6602\",\n  \"Proveedor de pago\": \"Redeban\",\n  \"Estado de la transacción\": \"Pagado\",\n  \"País de origen del pago\": \"0\",\n  \"Alerta\": \"\",\n  \"cuentaPUC1\": \"514015\",\n  \"DescripcionCuentaPUC1\": \"TRAMITES Y LICENCIAS\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"Codigo centro\": \"001001\",\n  \"Centro costo\": \"PRINCIPAL\",\n  \"ultimosCuatro\": \"2356\"\n}\n\ncentroCostoCoincidente: {{ $('procesado analista_carpeta1').item.json.centroCostoCoincidente }}\ncentroCostoCoincidenten: {{ $('procesado analista_carpeta1').item.json.centroCostoCoincidenten }}\n",
        "inputType": "base64",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1320,
        -500
      ],
      "id": "ffe93ba9-7039-46cd-917c-a77be1526211",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "yZlfCUHt0ePFAzG1",
          "name": "OpenAi Inverlink"
        }
      },
      "onError": "continueErrorOutput",
      "notes": "Este nodo recibe la información de imagen, posterior a su descarga y hace el procesamiento con GPT-4O"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1120,
        -560
      ],
      "id": "6d58d653-4075-4a2b-9f93-361d71bbf735",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        960,
        -320
      ],
      "id": "f2ad6058-af8f-452f-adb0-efb663d46d87",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "const cuenta51 = [\n  { \"codigo\": \"510503\", \"nombre\": \"SALARIO INTEGRAL\" },\n  { \"codigo\": \"510506\", \"nombre\": \"SUELDOS\" },\n  { \"codigo\": \"510524\", \"nombre\": \"INCAPACIDADES\" },\n  { \"codigo\": \"510527\", \"nombre\": \"AUXILIO DE TRANSPORTE\" },\n  { \"codigo\": \"510528\", \"nombre\": \"VIVIENDA\" },\n  { \"codigo\": \"510530\", \"nombre\": \"CESANTIA\" },\n  { \"codigo\": \"510533\", \"nombre\": \"INTERESES SOBRE CESANTIAS\" },\n  { \"codigo\": \"510536\", \"nombre\": \"PRIMA DE SERVICIOS\" },\n  { \"codigo\": \"510539\", \"nombre\": \"VACACIONES\" },\n  { \"codigo\": \"510545\", \"nombre\": \"AUXILIOS\" },\n  { \"codigo\": \"510548\", \"nombre\": \"BONIFICACIONES\" },\n  { \"codigo\": \"510551\", \"nombre\": \"DOTACION\" },\n  { \"codigo\": \"510554\", \"nombre\": \"SEGUROS DE PERSONAL\" },\n  { \"codigo\": \"510560\", \"nombre\": \"INDEMNIZACIONES LABORALES\" },\n  { \"codigo\": \"510563\", \"nombre\": \"CAPACITACIONES AL PERSONAL\" },\n  { \"codigo\": \"510566\", \"nombre\": \"EVENTOS Y REUNIONES\" },\n  { \"codigo\": \"510568\", \"nombre\": \"APORTES ARP\" },\n  { \"codigo\": \"510569\", \"nombre\": \"APORTES E.P.S.\" },\n  { \"codigo\": \"510570\", \"nombre\": \"APORTES FONDO DE PENSIONES\" },\n  { \"codigo\": \"510572\", \"nombre\": \"APORTES CAJA DE COMPENSACION\" },\n  { \"codigo\": \"510575\", \"nombre\": \"APORTES ICBF\" },\n  { \"codigo\": \"510578\", \"nombre\": \"APORTES SENA\" },\n  { \"codigo\": \"510584\", \"nombre\": \"GASTOS MEDICOS Y DROGAS\" },\n  { \"codigo\": \"510590\", \"nombre\": \"REINTEGRO\" },\n  { \"codigo\": \"510599\", \"nombre\": \"AJUSTES POR INFLACION\" },\n  { \"codigo\": \"510601\", \"nombre\": \"ADMINISTRACION P.C.\" },\n  { \"codigo\": \"510602\", \"nombre\": \"ALIMENTACION P.C.\" },\n  { \"codigo\": \"510603\", \"nombre\": \"VIVIENDA P.C.\" },\n  { \"codigo\": \"510604\", \"nombre\": \"EDUCACION P.C.\" },\n  { \"codigo\": \"510605\", \"nombre\": \"GASOLINA P.C.\" },\n  { \"codigo\": \"510606\", \"nombre\": \"POLIZA P.C.\" },\n  { \"codigo\": \"510607\", \"nombre\": \"VEHICULO P.C.\" },\n  { \"codigo\": \"510608\", \"nombre\": \"SALUD PREPAGADA P.C.\" },\n  { \"codigo\": \"511005\", \"nombre\": \"JUNTA DIRECTIVA\" },\n  { \"codigo\": \"511010\", \"nombre\": \"HONORARIOS\" },\n  { \"codigo\": \"511015\", \"nombre\": \"AUDITORIA EXTERNA\" },\n  { \"codigo\": \"511020\", \"nombre\": \"AVALUOS\" },\n  { \"codigo\": \"511025\", \"nombre\": \"ASESORIA JURIDICA\" },\n  { \"codigo\": \"511030\", \"nombre\": \"ASESORIA FINANCIERA\" },\n  { \"codigo\": \"511035\", \"nombre\": \"ASESORIAS TECNICAS\" },\n  { \"codigo\": \"511040\", \"nombre\": \"ASESORIA CONTABLE\" },\n  { \"codigo\": \"511080\", \"nombre\": \"VETERINARIOS\" },\n  { \"codigo\": \"511090\", \"nombre\": \"MEDICOS\" },\n  { \"codigo\": \"511095\", \"nombre\": \"OTROS\" },\n  { \"codigo\": \"511099\", \"nombre\": \"AJUSTES POR INFLACION\" },\n  { \"codigo\": \"511505\", \"nombre\": \"DE INDUSTRIA Y COMERCIO.\" },\n  { \"codigo\": \"511510\", \"nombre\": \"IMPUESTO TIMBRE\" },\n  { \"codigo\": \"511515\", \"nombre\": \"A LA PROPIEDAD RAIZ\" },\n  { \"codigo\": \"511520\", \"nombre\": \"4 X MIL.\" },\n  { \"codigo\": \"511525\", \"nombre\": \"VALORIZACION\" },\n  { \"codigo\": \"511540\", \"nombre\": \"IMPUESTO VEHICULOS\" },\n  { \"codigo\": \"511545\", \"nombre\": \"CONTRIBUCION FOGAFIN\" },\n  { \"codigo\": \"511565\", \"nombre\": \"IMPOCONSUMO\" },\n  { \"codigo\": \"511570\", \"nombre\": \"IVA DESCONTABLE.\" },\n  { \"codigo\": \"511575\", \"nombre\": \"CONTIBUCION DEC 2331\" },\n  { \"codigo\": \"511580\", \"nombre\": \"IMPUESTO SEGURIDAD DEMOCRATICA\" },\n  { \"codigo\": \"511585\", \"nombre\": \"DE RENTA\" },\n  { \"codigo\": \"511599\", \"nombre\": \"AJUSTES POR INFLACION\" },\n  { \"codigo\": \"512005\", \"nombre\": \"INMUEBLES\" },\n  { \"codigo\": \"512010\", \"nombre\": \"OFICINAS\" },\n  { \"codigo\": \"512015\", \"nombre\": \"MAQUINARIA Y EQUIPO\" },\n  { \"codigo\": \"512020\", \"nombre\": \"EQUIPO DE OFICINA\" },\n  { \"codigo\": \"512025\", \"nombre\": \"EQUIPO DE COMPUTACION Y COMUNICACION\" },\n  { \"codigo\": \"512040\", \"nombre\": \"CUOTAS LEASING VEHICULOS\" },\n  { \"codigo\": \"512095\", \"nombre\": \"OTROS\" },\n  { \"codigo\": \"512099\", \"nombre\": \"AJUSTES POR INFLACION\" },\n  { \"codigo\": \"512505\", \"nombre\": \"CONTRIBUCIONES\" },\n  { \"codigo\": \"512510\", \"nombre\": \"AFILIACIONES Y SOSTENIMIENTO\" },\n  { \"codigo\": \"512599\", \"nombre\": \"AJUSTES POR INFLACION\" },\n  { \"codigo\": \"513005\", \"nombre\": \"MANEJO\" },\n  { \"codigo\": \"513010\", \"nombre\": \"CUMPLIMIENTO\" },\n  { \"codigo\": \"513015\", \"nombre\": \"CORRIENTE DEBIL\" },\n  { \"codigo\": \"513020\", \"nombre\": \"VIDA\" },\n  { \"codigo\": \"513025\", \"nombre\": \"INCENDIO\" },\n  { \"codigo\": \"513030\", \"nombre\": \"TERREMOTO\" },\n  { \"codigo\": \"513035\", \"nombre\": \"SUSTRACCION Y HURTO\" },\n  { \"codigo\": \"513040\", \"nombre\": \"FLOTA Y EQUIPO DE TRANSPORTE\" },\n  { \"codigo\": \"513045\", \"nombre\": \"DE PRESTACIONES SOCIALES\" },\n  { \"codigo\": \"513050\", \"nombre\": \"DE CALIDAD DE SERVICIO\" },\n  { \"codigo\": \"513060\", \"nombre\": \"RESPONSABILIDAD CIVIL Y EXTRACONTRACTUAL\" },\n  { \"codigo\": \"513065\", \"nombre\": \"VUELO\" },\n  { \"codigo\": \"513070\", \"nombre\": \"ROTURA DE MAQUINARIA\" },\n  { \"codigo\": \"513075\", \"nombre\": \"OBLIGATORIO ACCIDENTE DE TRANSITO\" },\n  { \"codigo\": \"513080\", \"nombre\": \"LUCRO CESANTE\" },\n  { \"codigo\": \"513095\", \"nombre\": \"OTROS\" },\n  { \"codigo\": \"513505\", \"nombre\": \"ASEO Y VIGILANCIA\" },\n  { \"codigo\": \"513510\", \"nombre\": \"TEMPORALES\" },\n  { \"codigo\": \"513515\", \"nombre\": \"ASISTENCIA TECNICA\" },\n  { \"codigo\": \"513520\", \"nombre\": \"PROCESAMIENTO ELECTRONICO DE DATOS\" },\n  { \"codigo\": \"513525\", \"nombre\": \"ACUEDUCTO Y ALCANTARILLADO\" },\n  { \"codigo\": \"513530\", \"nombre\": \"ENERGIA ELECTRICA\" },\n  { \"codigo\": \"513535\", \"nombre\": \"TELEFONO\" },\n  { \"codigo\": \"513540\", \"nombre\": \"INTERNET\" },\n  { \"codigo\": \"513545\", \"nombre\": \"CORREO\" },\n  { \"codigo\": \"513550\", \"nombre\": \"TRANSPORTE FLETES Y ACARREO\" },\n  { \"codigo\": \"513555\", \"nombre\": \"GAS\" },\n  { \"codigo\": \"513560\", \"nombre\": \"PROPAGANDA Y PUBLICIDAD\" },\n  { \"codigo\": \"513595\", \"nombre\": \"OTROS\" },\n  { \"codigo\": \"513599\", \"nombre\": \"AJUSTE POR INFLACION\" },\n  { \"codigo\": \"514005\", \"nombre\": \"NOTARIALES\" },\n  { \"codigo\": \"514010\", \"nombre\": \"REGISTRO MERCANTIL\" },\n  { \"codigo\": \"514015\", \"nombre\": \"TRAMITES Y LICENCIAS\" },\n  { \"codigo\": \"514020\", \"nombre\": \"ADUANEROS\" },\n  { \"codigo\": \"514025\", \"nombre\": \"HONORARIOS-LEGALES\" },\n  { \"codigo\": \"514095\", \"nombre\": \"OTROS\" },\n  { \"codigo\": \"514099\", \"nombre\": \"AJUSTES POR INFLACION\" },\n  { \"codigo\": \"514505\", \"nombre\": \"TERRENOS\" },\n  { \"codigo\": \"514510\", \"nombre\": \"CONSTRUCCIONES Y EDIFICACIONES\" },\n  { \"codigo\": \"514515\", \"nombre\": \"MAQUINARIA Y EQUIPO\" },\n  { \"codigo\": \"514520\", \"nombre\": \"EQUIPO DE OFICINA\" },\n  { \"codigo\": \"514525\", \"nombre\": \"EQUIPO DE COMPUTACION Y COMUNICACION\" },\n  { \"codigo\": \"514540\", \"nombre\": \"FLOTA Y EQUIPO DE TRANSPORTE\" },\n  { \"codigo\": \"514590\", \"nombre\": \"AJUSTE POR INFLACION\" },\n  { \"codigo\": \"515005\", \"nombre\": \"INSTALACIONES ELECTRICAS\" },\n  { \"codigo\": \"515010\", \"nombre\": \"ARREGLOS ORNAMENTALES\" },\n  { \"codigo\": \"515015\", \"nombre\": \"REPARACIONES LOCATIVAS\" },\n  { \"codigo\": \"515095\", \"nombre\": \"OTROS\" },\n  { \"codigo\": \"515505\", \"nombre\": \"ALOJAMIENTO Y MANUTENCION\" },\n  { \"codigo\": \"515510\", \"nombre\": \"PASAJES FLUVIALES Y/O MARITIMOS\" },\n  { \"codigo\": \"515515\", \"nombre\": \"PASAJES AEREOS\" },\n  { \"codigo\": \"515520\", \"nombre\": \"PASAJES TERRESTRES\" },\n  { \"codigo\": \"515525\", \"nombre\": \"PASAJES FERREOS\" },\n  { \"codigo\": \"515595\", \"nombre\": \"OTROS\" },\n  { \"codigo\": \"515599\", \"nombre\": \"AJUSTE POR INFLACION\" },\n  { \"codigo\": \"516005\", \"nombre\": \"CONSTRUCCIONES Y EDIFICACIONES\" },\n  { \"codigo\": \"516010\", \"nombre\": \"MAQUINARIA DE OFICINA\" },\n  { \"codigo\": \"516015\", \"nombre\": \"EQUIPO DE OFICINA\" },\n  { \"codigo\": \"516020\", \"nombre\": \"EQUIPO DE COMPUTACION Y COMUNICACION\" },\n  { \"codigo\": \"516035\", \"nombre\": \"FLOTA Y EQUIPO DE TRANSPORTE\" },\n  { \"codigo\": \"516099\", \"nombre\": \"AJUSTE POR INFLACION\" },\n  { \"codigo\": \"516505\", \"nombre\": \"VIAS DE COMUNICACION\" },\n  { \"codigo\": \"516510\", \"nombre\": \"INTANGIBLES\" },\n  { \"codigo\": \"516515\", \"nombre\": \"CARGOS DIFERIDOS\" },\n  { \"codigo\": \"516595\", \"nombre\": \"OTRAS\" },\n  { \"codigo\": \"516599\", \"nombre\": \"AJUSTES POR INFLACION\" },\n  { \"codigo\": \"519505\", \"nombre\": \"COMISIONES POR SERVICIO\" },\n  { \"codigo\": \"519510\", \"nombre\": \"LIBROS- SUSCRIPCIONES- PERIODICOS REVIST\" },\n  { \"codigo\": \"519515\", \"nombre\": \"MUSICA AMBIENTAL\" },\n  { \"codigo\": \"519520\", \"nombre\": \"GASTOS REPRESENTACION RELACIONES PUBLICA\" },\n  { \"codigo\": \"519521\", \"nombre\": \"EVENTOS Y REUNIONES\" },\n  { \"codigo\": \"519525\", \"nombre\": \"ELEMENTOS DE ASEO Y CAFETERIA\" },\n  { \"codigo\": \"519530\", \"nombre\": \"UTILES PAPELERIA Y FOTOCOPIAS\" },\n  { \"codigo\": \"519531\", \"nombre\": \"FOTOCOPIAS Y EMPASTES\" },\n  { \"codigo\": \"519532\", \"nombre\": \"TONER (IMP.FOTO.FAX)\" },\n  { \"codigo\": \"519535\", \"nombre\": \"COMBUSTIBLES Y LUBRICANTES\" },\n  { \"codigo\": \"519540\", \"nombre\": \"CAJA MENOR\" },\n  { \"codigo\": \"519545\", \"nombre\": \"TAXIS Y BUSES\" },\n  { \"codigo\": \"519546\", \"nombre\": \"PEAJES\" },\n  { \"codigo\": \"519550\", \"nombre\": \"CUENTAS DE PARTICIPACION\" },\n  { \"codigo\": \"519560\", \"nombre\": \"ALMUERZO SEDE\" },\n  { \"codigo\": \"519565\", \"nombre\": \"PARQUEADERO\" },\n  { \"codigo\": \"519580\", \"nombre\": \"CONGRESOS\" },\n  { \"codigo\": \"519595\", \"nombre\": \"VARIOS\" },\n  { \"codigo\": \"519596\", \"nombre\": \"GASTOS DEL EXTERIOR.\" },\n  { \"codigo\": \"519905\", \"nombre\": \"INVERSIONES\" },\n  { \"codigo\": \"519910\", \"nombre\": \"DEUDORES\" },\n  { \"codigo\": \"519915\", \"nombre\": \"DETERIODO DE CARTERA\" },\n  { \"codigo\": \"519995\", \"nombre\": \"OTROS ACTIVOS\" },\n  { \"codigo\": \"519999\", \"nombre\": \"AJUSTES POR INFLACION\" }\n];\n\nreturn [\n  {\n    json: {\n      cuenta51\n    }\n  }\n]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1580,
        -120
      ],
      "id": "8baaf2e2-951a-453f-bd9b-ccaa4d93f088",
      "name": "listacuenta51"
    },
    {
      "parameters": {
        "jsCode": "let items = $input.all();\nconst date = new Date();\nconst day = String(date.getDate()).padStart(2, '0');\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst month = monthNames[date.getMonth()];\nconst year = date.getFullYear();\nconst formattedDate = `${day}-${month} ${year}`;\n\nconst personas = [\n  {\n    nombre: \"ENRIQUE VARGAS GARCIA\",\n    codigo: \"001006\",\n    centroCosto: \"MERCADEO EV\"\n  },\n  {\n    nombre: \"ANDRES FELIPE CAMACHO GONZALEZ\",\n    codigo: \"001004\",\n    centroCosto: \"MERCADEO FC\"\n  },\n  {\n    nombre: \"MAURICIO SALDARRIAGA NAVARRO\",\n    codigo: \"001002\",\n    centroCosto: \"MERCADEO MSN\"\n  },\n  {\n    nombre: \"NICOLAS GOMEZ SAAVEDRA\",\n    codigo: \"001003\",\n    centroCosto: \"MERCADEO NGS\"\n  },\n  {\n    nombre: \"FELIPE GAVIRIA LOPEZ\",\n    codigo: \"001015\",\n    centroCosto: \"MERCADEO FG\"\n  },\n  {\n    nombre: \"NICOLAS GOMEZ SAAVEDRA\",\n    codigo: \"001003\",\n    centroCosto: \"MERCADEO NGS\"\n  },\n  {\n    nombre: \"PEDRO LIEVANO L\",\n    codigo: \"001024\",\n    centroCosto: \"MERCADEO PD\"\n  }\n];\n\n// Función para capitalizar nombres tipo \"JUAN PABLO\" -> \"Juan Pablo\"\nfunction capitalizarNombre(nombre) {\n  if (!nombre || typeof nombre !== 'string') {\n    return '';\n  }\n  return nombre\n    .toLowerCase()\n    .split(' ')\n    .map(palabra => palabra.charAt(0).toUpperCase() + palabra.slice(1))\n    .join(' ');\n}\n\nfunction limpiarTexto(texto) {\n  return texto\n    .toLowerCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\") // quita tildes\n    .replace(/[^a-z]/g, \"\");         // elimina todo excepto letras\n}\n\nfunction buscarPersona(nombreApellido) {\n  const limpioOriginal = limpiarTexto(nombreApellido);\n\n  // Primer intento: tal cual\n  let match = personas.find(p =>\n    limpiarTexto(p.nombre).includes(limpioOriginal)\n  );\n  if (match) return match;\n\n  // Segundo intento: invertir el orden si hay más de una palabra\n  const partes = nombreApellido.replace(',', '').split(/\\s+/);\n  if (partes.length >= 2) {\n    const invertido = limpiarTexto(partes.reverse().join(' '));\n    match = personas.find(p =>\n      limpiarTexto(p.nombre).includes(invertido)\n    );\n  }\n\n  return match;\n}\n\nlet resultados = items.map((item, index) => {\n  let marcaTemporal = item.json[\"Punto de salida: longitud\"];\n  let soloFecha = '';\n  \n  if (marcaTemporal && typeof marcaTemporal === 'string') {\n    soloFecha = marcaTemporal.split(' ')[0];\n  } else {\n    soloFecha = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${day}`;\n  }\n\n  let nombreFormateado = capitalizarNombre(item.json[\"Solicitado por\"]);\n\n  // Buscar persona en la lista\n  let personaEncontrada = buscarPersona(nombreFormateado);\n\n  const prefix = 'FAC';\n  const timestamp = Date.now();\n  const random = Math.floor(Math.random() * 1000);\n\n  return {\n    json: {\n      \"Id factura\": `${prefix}-${timestamp}-${random}-${index}`,\n      \"Nombre del cliente o beneficiario\": nombreFormateado,\n      Correo: item.json[\"Estado final\"] || \"\",\n      \"Empresa emisora\": item.json[\"Hora de salida\"] || \"\",\n      \"NIT empresa emisora\": \"900 599 390‑3\",\n      \"Fecha de pago o compra\": soloFecha,\n      \"Número de comprobante o referencia\": item.json[\"CÃ³digo ticket\"] || \"\",\n      \"Descripción\": \"Viaje\",\n      \"Monto total cobrado\": item.json[\"Precio total tras descuento\"] || 0,\n      \"Moneda\": item.json[\"Divisa\"] || \"\",\n      \"Valor impuestos\": 0,\n      \"Método de pago\": \"\",\n      \"Proveedor de pago\": \"\",\n      \"Estado de la transacción\": \"\",\n      \"País de origen del pago\": \"\",\n      NOMBRE_XLSX: $('Edición XLSX').first().json.NOMBRE_XLSX || \"\",\n      \"URL Factura\": $('Listar analistas').first().json.value[0].webUrl || \"\",\n      \"FECHA_EXTRACCION\": formattedDate,\n      Error: \"\",\n      \"Descripción error\": personaEncontrada ? \"\" : \"No encontrado en lista de personas\",\n      \"Cuenta puc 1\": \"519545\",\n      \"Descripción cuenta puc 1\": \"TAXIS Y BUSES\",\n      \"Naturaleza 1\": \"Débito\",\n      \"codigocc\": personaEncontrada ? personaEncontrada.codigo : \"\",\n      \"centroCosto\": personaEncontrada ? personaEncontrada.centroCosto : \"\",\n      \"ultimosCuatro\": \"\"\n    }\n  };\n});\n\nreturn resultados;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        220
      ],
      "id": "c4da6907-f970-4e70-b2c7-64602de9fa21",
      "name": "Formato Cabify"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3000,
        -220
      ],
      "id": "8c3b46dc-963f-4c94-83de-d117df21d3ad",
      "name": "Merge2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "url": "https://graph.microsoft.com/v1.0/drives/b!PU0gxZ5Z3U2p8sh5AytDNQ0r9LElzUdKoJM90a8dwlNNksuuoU34TpjRp8lz1oPs/root:/REGISTRO%20OPERACIONES%20HELISA(%20Inverlink%20-IEI-%20IIA)/A%C3%91O%202025/INVERLINK%20SAS/c.%20Tarjetas%20de%20Cr%C3%A9dito:/children",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2280,
        -160
      ],
      "id": "e53ed56a-8b27-42d7-800a-4b64e8149d53",
      "name": "Listar archivos6",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ef4fd51d-db03-4214-b794-c3691b32cb7f",
              "leftValue": "={{ $json.name }}",
              "rightValue": "TC",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "f2d60f5a-8fce-4acc-b9c4-599acdcd6958",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Extracto",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "c077b3ad-e08c-40fc-8b0c-686198647b75",
              "leftValue": "={{ $json.name }}",
              "rightValue": "EXT",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "f086f0ca-b237-4625-bfd3-7093d005dab8",
              "leftValue": "={{ $json.name }}",
              "rightValue": "DESCUENTO",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        180,
        -300
      ],
      "id": "a6160fb9-497c-4e81-8652-6f9979aa2eaa",
      "name": "Validar extractos"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"model\": \"claude-3-5-sonnet-20241022\",\n  \"max_tokens\": 2048,\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"document\",\n          \"source\": {\n            \"type\": \"base64\",\n            \"media_type\": \"application/pdf\",\n            \"data\": \"{{ $('PDF_Base').item.json.data }}\"\n          }\n        },\n        {\n          \"type\": \"text\",\n          \"text\": {{ JSON.stringify($('Prompts1').item.json.Prompt_PDF + \"\\n\\nCuentas disponibles:\\n\" + JSON.stringify($('listacuenta51').first().json.cuenta51, null, 2) + JSON.stringify($('procesado analista_carpeta').first().json, null, 2))  }}\n        }\n      ]\n    }\n  ]\n}\n",
        "options": {
          "dotNotation": false
        }
      },
      "id": "2976c9c1-aef9-4e10-868f-bb46e0e66f12",
      "name": "Define Prompt",
      "type": "n8n-nodes-base.set",
      "position": [
        1780,
        -120
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "fieldToSplitOut": "value",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -2100,
        -160
      ],
      "id": "53baae83-47a5-4810-8958-11c6a70709a6",
      "name": "Split Out"
    },
    {
      "parameters": {
        "jsCode": "// Obtener todos los datos de entrada\nconst todosLosItems = $input.all();\nconst meses = [];\n\nfor (const item of todosLosItems) {\n  const carpeta = item.json.name; // Declarar la variable con const\n  meses.push(carpeta);\n}\n\n// Retornar en formato esperado por n8n\nreturn meses.map(entry => ({ json: { mes: entry } }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1920,
        -160
      ],
      "id": "aca517a1-fb0a-4442-af8e-2930900ad309",
      "name": "Extraer folders mes"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7c17a2ac-d185-44f8-97ce-06d966a140b2",
              "name": "MesSeleccionado",
              "value": "04. Abril",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1740,
        -240
      ],
      "id": "50cb0663-03ee-4148-83c4-87d1e87b9937",
      "name": "Mes seleccionado"
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/drives/b!PU0gxZ5Z3U2p8sh5AytDNQ0r9LElzUdKoJM90a8dwlNNksuuoU34TpjRp8lz1oPs/root:/REGISTRO%20OPERACIONES%20HELISA(%20Inverlink%20-IEI-%20IIA)/A%C3%91O%202025/INVERLINK%20SAS/c.%20Tarjetas%20de%20Cr%C3%A9dito/{{ $json.MesSeleccionado }}:/children",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1160,
        -220
      ],
      "id": "84d94060-16e0-4158-86c6-ba2994babb27",
      "name": "Listar Folder mes seleccionado",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener todos los datos de entrada\nconst todosLosItems = $input.all();\n\n// Extraer automáticamente los meses válidos desde los datos\nconst mesesValidos = new Set();\nfor (const item of todosLosItems) {\n  const carpetas = item.json.value;\n  if (!Array.isArray(carpetas)) continue;\n\n  for (const carpeta of carpetas) {\n    const mes = carpeta.parentReference?.name;\n    if (mes) mesesValidos.add(mes);\n  }\n}\n\n// Creamos una lista de salida más útil para n8n\nconst salidaFinal = [];\n\nfor (const item of todosLosItems) {\n  const carpetas = item.json.value;\n  if (!Array.isArray(carpetas)) continue;\n\n  for (const carpeta of carpetas) {\n    const esCarpeta = carpeta.hasOwnProperty(\"folder\");\n    const nombreMes = carpeta.parentReference?.name;\n    const nombreCarpeta = carpeta.name;\n\n    if (esCarpeta && nombreMes && nombreCarpeta && mesesValidos.has(nombreMes)) {\n      salidaFinal.push({\n        mes: nombreMes,\n        banco: nombreCarpeta\n      });\n    }\n  }\n}\n\nreturn salidaFinal.map(entry => ({ json: entry }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -980,
        -220
      ],
      "id": "d70b1e9e-bcca-463d-888d-42bf6a4a63b4",
      "name": "Listar sub folders mes"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ea7d7e7e-0d52-4887-ba1a-932ea58edb49",
              "leftValue": "={{ $json.banco }}",
              "rightValue": "Bancolombia",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "17c768de-6056-461e-81ca-02b5a1e45996",
              "leftValue": "={{ $json.banco }}",
              "rightValue": "Occidente",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -800,
        -220
      ],
      "id": "4223bc4d-e70e-4ce9-9f11-6d471b6a3181",
      "name": "Validar folder facturas"
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/drives/b!PU0gxZ5Z3U2p8sh5AytDNQ0r9LElzUdKoJM90a8dwlNNksuuoU34TpjRp8lz1oPs/root:/REGISTRO%20OPERACIONES%20HELISA(%20Inverlink%20-IEI-%20IIA)/A%C3%91O%202025/INVERLINK%20SAS/c.%20Tarjetas%20de%20Cr%C3%A9dito/{{ $('obtener mes seleccionado').item.json.MesSeleccionado }}/{{ $json.banco }}:/children\n",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -560,
        -240
      ],
      "id": "33705e87-e6ac-4352-b9be-50cfcc142712",
      "name": "Listar analistas",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all(); // Obtener todos los ítems de entrada\n\nconst resultado = [];\n\nfor (const item of items) {\n  const json = item.json;\n    resultado.push({\n      name: json.name,\n\n    });\n}\nreturn resultado.map(entry => ({ json: entry }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1040,
        -40
      ],
      "id": "15f76ba6-a0ac-4da5-9161-2782170281cb",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2a23af1b-57e4-4d71-8ad2-1d12faeae930",
              "name": "name",
              "value": "Pedro Lievano",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -920,
        100
      ],
      "id": "a9db1c48-a564-4036-b607-9b45368ea445",
      "name": "Seleccionar analista"
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/drives/b!PU0gxZ5Z3U2p8sh5AytDNQ0r9LElzUdKoJM90a8dwlNNksuuoU34TpjRp8lz1oPs/root:/REGISTRO%20OPERACIONES%20HELISA(%20Inverlink%20-IEI-%20IIA)/A%C3%91O%202025/INVERLINK%20SAS/c.%20Tarjetas%20de%20Cr%C3%A9dito/{{ $('obtener mes seleccionado').item.json.MesSeleccionado }}/{{ $('Listar sub folders mes').item.json.banco }}/{{ $json.name }}:/children\n",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -540,
        -20
      ],
      "id": "73893379-63de-4493-a31a-b4ec4ae11f23",
      "name": "Listar analistas1",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fcfdd0c2-3e2d-49c7-a58c-ff73b61608dd",
              "leftValue": "={{ $json.NOMBRE_PDF }}",
              "rightValue": "149000 P.Rodas.pdf",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        520,
        -140
      ],
      "id": "24a789b8-db2b-48be-ae02-0ed1d7ba9d0b",
      "name": "If4"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        720,
        -1100
      ],
      "id": "9b814f15-3509-4b7e-aa5e-2d003a8084fb",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $('promp json').item.json.toJsonString() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1320,
        -1100
      ],
      "id": "a187b53b-0589-4a18-b495-be3a2df8435e",
      "name": "HTTP Request",
      "credentials": {
        "openAiApi": {
          "id": "0r1L7QIDC5ZRtM0r",
          "name": "OpenAi"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"model\": \"gpt-4-vision-preview\",\n  \"max_tokens\": 4096,\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"data:image/png;base64,{{ $('Extract from File').item.json.data }}\"\n          }\n        },\n        {\n          \"type\": \"text\",\n          \"text\": \"{{ JSON.stringify($('Prompts').item.json.Prompt_PDF) }}\"\n        }\n      ]\n    }\n  ],\n  \"temperature\": 0.7\n}",
        "options": {
          "dotNotation": false
        }
      },
      "id": "43f7958d-f1c5-41ee-acf9-85af77ee219c",
      "name": "promp json",
      "type": "n8n-nodes-base.set",
      "position": [
        1100,
        -1100
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d4c66d57-96de-47dc-a38e-1c73c242631a",
              "name": "Prompt_PDF",
              "value": "ROL\nEres una IA altamente especializada en extraer datos de facturas, recibos, tiquetes o comprobantes de pago en español, emitidos por aerolíneas, agencias, bancos, hoteles, plataformas de pago o empresas internacionales. Eres un OCR avanzado capaz de analizar PDF con texto, imágenes o ambos. Tu objetivo es identificar y extraer solamente los datos relevantes de cualquier documento recibido.\n\nINSTRUCCIONES\n-Extrae solo los datos solicitados según el esquema.\n-Usa la herramienta adecuada para leer el PDF (por ejemplo, Facturas_PDF).\n-Responde únicamente con los datos extraídos del PDF. No incluyas explicaciones ni texto adicional.\n-Si algún dato no está disponible en el PDF, asígnale el valor 0.\n-La respuesta debe estar en español y usar el formato solicitado.\n-Si en el PDF algún dato está en inglés (ej: “Recieved from”, “Amount Charged”), tradúcelo en la etiqueta pero no en el valor.\n-No inventes información ni uses datos de ejemplo; responde solo con lo que esté en el PDF.\n-Usa los ejemplos para validar formato, pero no los repitas.\n-En los productos de las facturas deseo que busques productos que contengan alcohol (Vinos, cervezas, Brandy, Ginebra, trequila/Mezcal) de todas las marcas del mundo y si se encuentra algún producto de este tipo que se muestre en el campo Alerta que pongas el texto Revisar\n- En el campo de Descripción error, vas a poner el texto \"Factura con bebida alcohólica\", si encuentras una factura con una bebida de este tipo.\n- Adicional te voy a pasar una lista de la cuenta 51 del PUC y vas a validar únicamente con la lista en que cuenta del PUC va la factura con base a la descripción de la factura, la estructura de las cuentas es la siguiente ejemplo: { \"codigo\": \"510503\", \"nombre\": \"SALARIO INTEGRAL\" }. Esta validación la vas a agregar en el campo del JSON que se llama cuentaPUC1 y DescripcionCuentaPUC1, importante no dejes estos dos campos vacios, busca bien a que cuenta pertenece.\nejemplo si vez algo de comida puede ser: cuentaPUC: 519520, DescripcionCuentaPUC: GASTOS REPRESENTACION RELACIONES PUBLICA\n- agrega la naturaleza de la cuenta obtenida en el campo NaturalezaCuentaPUC1: Débito o Crédito\n- Es importante que la información que dejes en el campo descripcion, sea Mayúscula la primera y el resto en minúscula, salvo nombres propios\n- El campo Nombre del cliente o beneficiario. Debes dejar los Nombres en el formato Como por ejemplo Juan Pablo\n\nOUTPUT\n\nExtrae y entrega únicamente los siguientes campos, usando este esquema:\n\n{\n  \"Nombre del cliente o beneficiario\": \"Nombre de la persona o empresa que paga o recibe el servicio. Puede estar como 'Recibido de', 'Recieved from', 'Cliente', 'Nombre pasajero', etc.\",\n  \"Correo\": \"Correo electrónico del cliente o beneficiario si existe.\",\n  \"Empresa emisora\": \"Empresa o entidad que emite la factura, recibo, tiquete o comprobante.\",\n  \"NIT empresa emisora\": \"NIT (Número de Identificación Tributaria)\"\n  \"Fecha de pago o compra\": \"Fecha de la compra, pago o emisión. Formato DD/MM/AAAA.\",\n  \"Número de comprobante o referencia\": \"Número de referencia, ticket, comprobante, factura o transacción.\",\n  \"Descripción\": \"Descripción del producto, servicio, fee, o motivo del pago.\",\n  \"Monto total cobrado\": \"Valor total pagado/cobrado. Solo el valor numérico.\",\n  \"Moneda\": \"Moneda en la que se hizo el pago (COP, USD, etc).\",\n  \"Valor impuestos\": \"Suma de todos los impuestos/tasas cobrados. Si no aparecen discriminados, escribir 0.\",\n  \"Método de pago\": \"Medio de pago utilizado, por ejemplo: Tarjeta Visa 6602, Mastercard 1234, PSE, Efectivo, etc.\",\n  \"Proveedor de pago\": \"Entidad o plataforma que procesa el pago, por ejemplo: Redeban, GlobalPay, Stripe.\",\n  \"Estado de la transacción\": \"Estado de la transacción/pago, por ejemplo: Approved, Pagado, Rechazado, etc.\",\n  \"País de origen del pago\": \"País o jurisdicción desde donde se realiza o recibe el pago, si está especificado.\",\n  \"Alerta\": \"\",\n  \"Descripción error\":\"\",\n  \"cuentaPUC1\": \"\",\n  \"DescripcionCuentaPUC1\": \"\",\n  \"NaturalezaCuentaPUC1\": \"Débito o Crédito\",\n  \"centroCosto\": \"\"\n}\n\nEJEMPLO: \n\n{\n  \"Nombre del cliente o beneficiario\": \"Enrique Vargas Garcia\",\n  \"Correo\": \"davella@inverlink.com\",\n  \"Empresa emisora\": \"Avianca\",\n  \"NIT empresa emisora\": \"890903938\",\n  \"Fecha de pago o compra\": \"22/01/2025\",\n  \"Número de comprobante o referencia\": \"1342139118392\",\n  \"Descripción\": \"STELLA ARTIOS, COCA COLA SIN AZUCAR\",\n  \"Monto total cobrado\": \"1321510\",\n  \"Moneda\": \"COP\",\n  \"Valor impuestos\": \"658210\",\n  \"Método de pago\": \"Visa 6602\",\n  \"Proveedor de pago\": \"0\",\n  \"Estado de la transacción\": \"Aprobada\",\n  \"País de origen del pago\": \"0\",\n  \"Alerta\": \"Revisar\",\n  \"Descripción error\":\"Factura con bebida alcohólica\",\n  \"cuentaPUC1\": \"519520\",\n  \"DescripcionCuentaPUC1\": \"GASTOS REPRESENTACION RELACIONES PUBLICA\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"centroCosto\": \"\"\n}\n{\n  \"Nombre del cliente o beneficiario\": \"Gateway FC - P. Leste\",\n  \"Correo\": \"0\",\n  \"Empresa emisora\": \"CIMA\",\n  \"NIT empresa emisora\": \"899999068\",\n  \"Fecha de pago o compra\": \"24/05/2025\",\n  \"Número de comprobante o referencia\": \"FCP-CAI-2025-0512\",\n  \"Descripción\": \"Fee pago gestión Cayman Islands\",\n  \"Monto total cobrado\": \"395 USD\",\n  \"Moneda\": \"USD\",\n  \"Valor impuestos\": \"0\",\n  \"Método de pago\": \"0\",\n  \"Proveedor de pago\": \"0\",\n  \"Estado de la transacción\": \"Confirmed\",\n  \"País de origen del pago\": \"Islas Caimán\",\n  \"Alerta\": \"\",\n  \"Descripción error\":\"\",\n  \"cuentaPUC1\": \"511095\",\n  \"DescripcionCuentaPUC1\": \"OTROS (HONORARIOS / SERVICIOS EXTERNOS)\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"centroCosto\": \"\"\n}\n{\n  \"Nombre del cliente o beneficiario\": \"INVERLINK S.A.S\",\n  \"Correo\": \"dbedoya@inverlink.com\",\n  \"Empresa emisora\": \"Global Pay\",\n  \"NIT empresa emisora\": \"899999230\",\n  \"Fecha de pago o compra\": \"21/02/2025\",\n  \"Número de comprobante o referencia\": \"DRL669\",\n  \"Descripción\": \"EXCEDENTE TRAMITE TRASPASO PLACA DRL669\",\n  \"Monto total cobrado\": \"18405\",\n  \"Moneda\": \"COP\",\n  \"Valor impuestos\": \"0\",\n  \"Método de pago\": \"Tarjeta crédito Visa 6602\",\n  \"Proveedor de pago\": \"Redeban\",\n  \"Estado de la transacción\": \"Pagado\",\n  \"País de origen del pago\": \"0\",\n  \"Alerta\": \"\",\n  \"cuentaPUC1\": \"514015\",\n  \"DescripcionCuentaPUC1\": \"TRAMITES Y LICENCIAS\",\n  \"NaturalezaCuentaPUC1\": \"Débito\",\n  \"centroCosto\": \"\"\n}\n",
              "type": "string"
            },
            {
              "id": "5c4810f7-0a2f-47d7-8d61-a7423b5eb946",
              "name": "Prompt_Quality",
              "value": "#ROL\nEres una IA altamente especializada en extraer datos de facturas, recibos, tiquetes y comprobantes de pago en español, emitidos por aerolíneas, agencias, bancos, hoteles, plataformas de pago, empresas nacionales o internacionales. Eres un OCR avanzado capaz de analizar PDF con texto, imágenes o ambos. Tu objetivo es identificar y extraer solo los datos relevantes de cualquier documento recibido.\n\n\n#INSTRUCCIONES\n\n-Extrae únicamente los datos solicitados según el esquema.\n-Responde solo con los datos extraídos del PDF. No incluyas explicaciones ni texto adicional.\n-Si un dato no está disponible en el PDF, asígnale el valor 0.\n-El resultado debe estar en español.\n-Analiza el PDF y valida los valores de cada campo.\n-Si tienes un bloque 'DATA TO REVIEW', úsalo solo para validar o corregir los valores de cualquier campo si fueron extraídos incorrectamente en una ejecución previa.\n\n#OUTPUT\nExtrae y entrega solo los siguientes datos usando este esquema:\n\n{\n  \"Nombre del cliente o beneficiario\": \"Nombre de la persona o empresa que paga o recibe el servicio. Puede estar como 'Recibido de', 'Recieved from', 'Cliente', 'Nombre pasajero', etc.\",\n  \"Correo\": \"Correo electrónico del cliente o beneficiario si existe.\",\n  \"Empresa emisora\": \"Empresa o entidad que emite la factura, recibo, tiquete o comprobante.\",\n  \"Fecha de pago o compra\": \"Fecha de la compra, pago o emisión. Formato DD/MM/AAAA.\",\n  \"Número de comprobante o referencia\": \"Número de referencia, ticket, comprobante, factura o transacción.\",\n  \"Descripción\": \"Descripción del producto, servicio, fee, o motivo del pago.\",\n  \"Monto total cobrado\": \"Valor total pagado/cobrado. Solo el valor numérico.\",\n  \"Moneda\": \"Moneda en la que se hizo el pago (COP, USD, etc).\",\n  \"Valor impuestos\": \"Suma de todos los impuestos/tasas cobrados. Si no aparecen discriminados, escribir 0.\",\n  \"Método de pago\": \"Medio de pago utilizado, por ejemplo: Tarjeta Visa 6602, Mastercard 1234, PSE, Efectivo, etc.\",\n  \"Proveedor de pago\": \"Entidad o plataforma que procesa el pago, por ejemplo: Redeban, GlobalPay, Stripe.\",\n  \"Estado de la transacción\": \"Estado de la transacción/pago, por ejemplo: Approved, Pagado, Rechazado, etc.\",\n  \"País de origen del pago\": \"País o jurisdicción desde donde se realiza o recibe el pago, si está especificado.\"\n}\n\n\n#EJEMPLO:\n\n{\n  \"Nombre del cliente o beneficiario\": \"Enrique Vargas Garcia\",\n  \"Correo\": \"davella@inverlink.com\",\n  \"Empresa emisora\": \"Avianca\",\n  \"Fecha de pago o compra\": \"22/01/2025\",\n  \"Número de comprobante o referencia\": \"1342139118392\",\n  \"Descripción\": \"Compra de tiquete AV 696\",\n  \"Monto total cobrado\": \"1321510\",\n  \"Moneda\": \"COP\",\n  \"Valor impuestos\": \"658210\",\n  \"Método de pago\": \"Visa 6602\",\n  \"Proveedor de pago\": \"0\",\n  \"Estado de la transacción\": \"Aprobada\",\n  \"País de origen del pago\": \"0\"\n}\n\nLos ejemplos son solo demostrativos para mostrar valores válidos.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        920,
        -1100
      ],
      "id": "9e3492e5-8c02-44b9-b256-3e51b757eab0",
      "name": "Prompts"
    },
    {
      "parameters": {
        "jsCode": "const personas = [\n  {\n    nombre: \"ENRIQUE VARGAS GARCIA\",\n    iniciales: \"EV\",\n    tarjeta4u: \"1969\"\n  },\n  {\n    nombre: \"ANDRES FELIPE CAMACHO GONZALEZ\",\n    iniciales: \"FC\",\n    tarjeta4u: \"8396\"    \n  },\n  {\n    nombre: \"MAURICIO SALDARRIAGA NAVARRO\",\n    iniciales: \"MSN\",\n    tarjeta4u: \"2975\"\n  },\n  {\n    nombre: \"NICOLAS GOMEZ SAAVEDRA\",\n    iniciales: \"NGS\",\n    tarjeta4u: \"8142\"\n  },\n  {\n    nombre: \"FELIPE GAVIRIA LOPEZ\",\n    iniciales: \"FG\",\n    tarjeta4u: \"6717\"\n  },\n  {\n    nombre: \"PEDRO LIEVANO L\",\n    iniciales: \"PD\",\n    tarjeta4u: \"1181\"\n  },\n  {\n    nombre: \"SANTIAGO CARDENAS\",\n    iniciales: \"SC\",\n    tarjeta4u: \"2511\"\n  }, \n  {\n    nombre: \"MARCELO MODAI\",\n    iniciales: \"MM\",\n    tarjeta4u: \"2511\"\n  },\n  {\n    nombre: \"DHAYRA BEDOYA\",\n    iniciales: \"\",\n    tarjeta4u: \"6602\"\n  }\n  \n];\n\nreturn [\n  {\n    json: {\n      personas\n    }\n  }\n]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1140,
        -120
      ],
      "id": "c7b94930-679d-47dc-8c8f-0329d30224cd",
      "name": "Lista Analistas CC"
    },
    {
      "parameters": {
        "resource": "table",
        "workbook": {
          "__rl": true,
          "value": "01HZVEXTKXTRZDXXGT75AJFCFASOOWAHT2",
          "mode": "list",
          "cachedResultName": "Facturas",
          "cachedResultUrl": "https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7B3B729C57-D3DC-40FF-9288-A0939D601E7A%7D&file=Facturas.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1"
        },
        "worksheet": {
          "__rl": true,
          "value": "{00000000-0001-0000-0000-000000000000}",
          "mode": "list",
          "cachedResultName": "Consolidado Facturas",
          "cachedResultUrl": "https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7B3B729C57-D3DC-40FF-9288-A0939D601E7A%7D&file=Facturas.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1&activeCell=Consolidado%20Facturas!A1"
        },
        "table": {
          "__rl": true,
          "value": "{E5688B56-31E1-42AB-B362-DD128DB304DB}",
          "mode": "list",
          "cachedResultName": "facturas",
          "cachedResultUrl": "https://inverlink-my.sharepoint.com/personal/ekrypto_inverlink_com/_layouts/15/Doc.aspx?sourcedoc=%7B3B729C57-D3DC-40FF-9288-A0939D601E7A%7D&file=Facturas.xlsx&action=default&mobileredirect=true&DefaultItemOpen=1&activeCell='Consolidado%20Facturas'!A1:AH2"
        },
        "fieldsUi": {
          "values": [
            {
              "column": "Nombre del cliente o beneficiario",
              "fieldValue": "={{$json[\"Nombre del cliente o beneficiario\"]}}"
            },
            {
              "column": "Correo",
              "fieldValue": "={{$json[\"Correo\"]}}"
            },
            {
              "column": "Empresa emisora",
              "fieldValue": "={{$json[\"Empresa emisora\"]}}"
            },
            {
              "column": "Fecha de pago o compra",
              "fieldValue": "={{$json[\"Fecha de pago o compra\"]}}"
            },
            {
              "column": "Número de comprobante o referencia",
              "fieldValue": "={{$json[\"Número de comprobante o referencia\"]}}"
            },
            {
              "column": "Descripción",
              "fieldValue": "={{$json[\"Descripción\"]}}"
            },
            {
              "column": "Monto total cobrado",
              "fieldValue": "={{$json[\"Monto total cobrado\"]}}"
            },
            {
              "column": "Moneda",
              "fieldValue": "={{$json[\"Moneda\"]}}"
            },
            {
              "column": "Valor impuestos",
              "fieldValue": "={{$json[\"Valor impuestos\"]}}"
            },
            {
              "column": "Método de pago",
              "fieldValue": "={{$json[\"Método de pago\"]}}"
            },
            {
              "column": "Proveedor de pago",
              "fieldValue": "={{$json[\"Proveedor de pago\"]}}"
            },
            {
              "column": "Estado de la transacción",
              "fieldValue": "={{$json[\"Estado de la transacción\"]}}"
            },
            {
              "column": "País de origen del pago",
              "fieldValue": "={{$json[\"País de origen del pago\"]}}"
            },
            {
              "column": "Error",
              "fieldValue": "={{$json[\"Error\"]}}"
            },
            {
              "column": "Fecha extracción",
              "fieldValue": "={{$json[\"FECHA_EXTRACCION\"]}}"
            },
            {
              "column": "Nombre pdf",
              "fieldValue": "={{$json[\"NOMBRE_PDF\"]}}"
            },
            {
              "column": "Url factura",
              "fieldValue": "={{$json[\"URL Factura\"]}}"
            },
            {
              "column": "Cuenta puc 1",
              "fieldValue": "={{ $json['Cuenta puc 1'] }}"
            },
            {
              "column": "Descripción cuenta puc 1",
              "fieldValue": "={{ $json[\"Descripción cuenta puc 1\"] }}"
            },
            {
              "column": "Naturaleza 1",
              "fieldValue": "={{ $json['Naturaleza 1'] }}"
            },
            {
              "column": "NIT empresa emisora",
              "fieldValue": "={{ $json['NIT empresa emisora'] }}"
            },
            {
              "column": "Descripción error",
              "fieldValue": "={{ $json['Descripción error'] }}"
            },
            {
              "column": "Id factura",
              "fieldValue": "={{$json['Id_factura']}}"
            },
            {
              "column": "Tarjeta (últimos dígitos)",
              "fieldValue": "={{ $json['ultimosCuatro'] }}"
            },
            {
              "column": "Codigo centro",
              "fieldValue": "={{ $json.codigocc }}"
            },
            {
              "column": "Centro costo",
              "fieldValue": "={{ $json.centroCosto }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftExcel",
      "typeVersion": 2.1,
      "position": [
        3360,
        -320
      ],
      "id": "6e23bd1c-f850-412d-bf5d-41c34bea7858",
      "name": "Excel Inverlink",
      "credentials": {
        "microsoftExcelOAuth2Api": {
          "id": "UMjXt9SIb2Tb1XTc",
          "name": "Excel Inverlink"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Tus funciones auxiliares no necesitan cambios\n// Función para validar si un objeto tiene la estructura esperada\nfunction isValidResponse(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n  const requiredFields = ['Nombre del cliente o beneficiario', 'Empresa emisora', 'Fecha de pago o compra'];\n  return requiredFields.some(field => obj.hasOwnProperty(field));\n}\n\n// Función para generar ID factura único\nfunction generateFacturaId() {\n  const prefix = 'FAC';\n  const timestamp = Date.now();\n  const random = Math.floor(Math.random() * 1000);\n  return `${prefix}-${timestamp}-${random}`;\n}\n\n// Función para procesar un elemento individual. Lanza un error si falla.\nfunction processItem(content, datosPdf) {\n  if (!content || typeof content !== 'string') {\n    throw new Error('Contenido no válido o vacío.');\n  }\n  let cleanContent = content.replace(/```json\\n?/g, '').replace(/```/g, '').trim();\n  if (!cleanContent) {\n    throw new Error('Contenido vacío después de limpiar markdown.');\n  }\n\n  let iaResponse;\n  try {\n    iaResponse = JSON.parse(cleanContent);\n  } catch (parseError) {\n    // Si falla el parseo, se lanza un error detallado.\n    throw new Error(`Error al interpretar el texto como JSON: ${parseError.message}`);\n  }\n\n  if (!isValidResponse(iaResponse)) {\n    throw new Error('La respuesta JSON no tiene la estructura o los campos esperados.');\n  }\n\n  const idFactura = generateFacturaId();\n  return {\n    ...iaResponse,\n    ID_FACTURA: idFactura,\n    \n    NOMBRE_PDF: $('Edición IMG').item.json.NOMBRE_PDF,\n    ID_PDF: $('Edición IMG').item.json.ID_PDF,\n    URL_DESCARGA: $('Edición IMG').item.json.URL_DESCARGA,\n    DRIVE_ID: $('Edición IMG').item.json.DRIVE_ID,\n    CARPETA_ID: $('Edición IMG').item.json.CARPETA_ID\n  };\n}\n\n\n// --- BLOQUE PRINCIPAL DE EJECUCIÓN ---\n\ntry {\n  // 1. Obtener datos comunes una sola vez\n  const datosPdf = $('Descarga Imagen').item.json;\n\n  // 2. Normalizar la entrada para que siempre sea un array\n  const isInputArray = Array.isArray($json);\n  const itemsToProcess = isInputArray ? $json : [$json];\n  \n  const results = [];\n\n  // 3. Procesar cada item con su propio try...catch dentro del bucle\n  // Esto asegura que si un item falla, los demás continúan procesándose.\n  for (const [index, item] of itemsToProcess.entries()) {\n    try {\n      // Intenta procesar el item de forma normal\n      const processedItem = processItem(item.content, datosPdf);\n      results.push(processedItem);\n    } catch (itemError) {\n      // Si processItem lanza un error, lo capturamos aquí\n      // y creamos un objeto de error enriquecido para ese item.\n      const idFactura = generateFacturaId();\n      results.push({\n        error: true,\n        errorMessage: itemError.message,\n        itemIndex: index,\n        ID_FACTURA: idFactura,\n        NOMBRE_PDF: datosPdf.NOMBRE_PDF,\n        ID_PDF: datosPdf.ID_PDF,\n        URL_DESCARGA: datosPdf.URL_DESCARGA,\n        DRIVE_ID: datosPdf.DRIVE_ID,\n        CARPETA_ID: datosPdf.CARPETA_ID\n      });\n    }\n  }\n\n  // 4. Devolver el resultado en el formato original (array o objeto único)\n  return isInputArray ? results : results[0];\n\n} catch (globalError) {\n  // 5. Este catch captura errores catastróficos (ej: si 'Descarga Imagen' falla)\n  // En este caso, se recomienda lanzar un error para que el nodo falle por completo.\n  throw new Error(`Error global irrecuperable en el nodo: ${globalError.message}`);\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        -580
      ],
      "id": "68347f5b-4682-4277-a335-98e9d10e5787",
      "name": "Obtener identificación img",
      "notesInFlow": false,
      "alwaysOutputData": true,
      "onError": "continueErrorOutput",
      "notes": "En este nodo se obtienen los datos de la ubicación de un PDF. "
    },
    {
      "parameters": {
        "jsCode": " const Cuenta52 = [\n  {\n    \"codigo\": \"52\",\n    \"nombre\": \"GASTOS Y COSTOS OPERACIONALES\"\n  },\n  {\n    \"codigo\": \"52\",\n    \"nombre\": \"GASTOS OPERACIONALES DE ADMINISTRACION\"\n  },\n  {\n    \"codigo\": \"5205\",\n    \"nombre\": \"GASTOS DE PERSONAL\"\n  },\n  {\n    \"codigo\": \"520503\",\n    \"nombre\": \"SALARIO INTEGRAL\"\n  },\n  {\n    \"codigo\": \"520506\",\n    \"nombre\": \"SUELDOS\"\n  },\n  {\n    \"codigo\": \"520524\",\n    \"nombre\": \"INCAPACIDADES\"\n  },\n  {\n    \"codigo\": \"520527\",\n    \"nombre\": \"AUXILIO DE TRANSPORTE\"\n  },\n  {\n    \"codigo\": \"520528\",\n    \"nombre\": \"VIVIENDA\"\n  },\n  {\n    \"codigo\": \"520530\",\n    \"nombre\": \"CESANTIAS\"\n  },\n  {\n    \"codigo\": \"520533\",\n    \"nombre\": \"INTERESES SOBRE CESANTIAS\"\n  },\n  {\n    \"codigo\": \"520536\",\n    \"nombre\": \"PRIMA DE SERVICIOS\"\n  },\n  {\n    \"codigo\": \"520539\",\n    \"nombre\": \"VACACIONES\"\n  },\n  {\n    \"codigo\": \"520545\",\n    \"nombre\": \"AUXILIOS\"\n  },\n  {\n    \"codigo\": \"520548\",\n    \"nombre\": \"BONIFICACIONES\"\n  },\n  {\n    \"codigo\": \"520551\",\n    \"nombre\": \"DOTACION\"\n  },\n  {\n    \"codigo\": \"520554\",\n    \"nombre\": \"SEGUROS DE PERSONAL\"\n  },\n  {\n    \"codigo\": \"520560\",\n    \"nombre\": \"INDEMNIZACIONES LABORALES\"\n  },\n  {\n    \"codigo\": \"520563\",\n    \"nombre\": \"CAPACITACION AL PERSONAL\"\n  },\n  {\n    \"codigo\": \"520566\",\n    \"nombre\": \"EVENTOS Y REUNIONES\"\n  },\n  {\n    \"codigo\": \"520568\",\n    \"nombre\": \"APORTES ARP\"\n  },\n  {\n    \"codigo\": \"520569\",\n    \"nombre\": \"APORTES E.P.S.\"\n  },\n  {\n    \"codigo\": \"520570\",\n    \"nombre\": \"APORTE FONDO DE PENSIONES\"\n  },\n  {\n    \"codigo\": \"520572\",\n    \"nombre\": \"APORTES CAJA DE COMPENSACION\"\n  },\n  {\n    \"codigo\": \"520575\",\n    \"nombre\": \"APORTES ICBF\"\n  },\n  {\n    \"codigo\": \"520578\",\n    \"nombre\": \"APORTES SENA\"\n  },\n  {\n    \"codigo\": \"520584\",\n    \"nombre\": \"GASTOS MEDICOS Y DROGAS\"\n  },\n  {\n    \"codigo\": \"520590\",\n    \"nombre\": \"REINTEGRO\"\n  },\n  {\n    \"codigo\": \"520599\",\n    \"nombre\": \"AJUSTES POR INFLACION\"\n  },\n  {\n    \"codigo\": \"5206\",\n    \"nombre\": \"PAGOS EN ESPECIE\"\n  },\n  {\n    \"codigo\": \"520601\",\n    \"nombre\": \"ADMINISTRACION P.C.\"\n  },\n  {\n    \"codigo\": \"520602\",\n    \"nombre\": \"ALIMENTACION P.C.\"\n  },\n  {\n    \"codigo\": \"520603\",\n    \"nombre\": \"VIVIENDA P.C.\"\n  },\n  {\n    \"codigo\": \"520604\",\n    \"nombre\": \"EDUCACION P.C.\"\n  },\n  {\n    \"codigo\": \"520605\",\n    \"nombre\": \"GASOLINA P.C.\"\n  },\n  {\n    \"codigo\": \"520606\",\n    \"nombre\": \"POLIZA P.C.\"\n  },\n  {\n    \"codigo\": \"520607\",\n    \"nombre\": \"VEHICULO P.C.\"\n  },\n  {\n    \"codigo\": \"520608\",\n    \"nombre\": \"SALUD PREPAGADA P.C.\"\n  },\n  {\n    \"codigo\": \"5210\",\n    \"nombre\": \"HONORARIOS\"\n  },\n  {\n    \"codigo\": \"521005\",\n    \"nombre\": \"JUNTA DIRECTIVA\"\n  },\n  {\n    \"codigo\": \"521010\",\n    \"nombre\": \"HONORARIOS\"\n  },\n  {\n    \"codigo\": \"521015\",\n    \"nombre\": \"AUDITORIA EXTERNA\"\n  },\n  {\n    \"codigo\": \"521020\",\n    \"nombre\": \"AVALUOS\"\n  },\n  {\n    \"codigo\": \"521025\",\n    \"nombre\": \"ASESORIA JURIDICA\"\n  },\n  {\n    \"codigo\": \"521030\",\n    \"nombre\": \"ASESORIA FINANCIERA\"\n  },\n  {\n    \"codigo\": \"521035\",\n    \"nombre\": \"ASESORIAS TECNICAS\"\n  },\n  {\n    \"codigo\": \"521040\",\n    \"nombre\": \"ASESORIA CONTABLE\"\n  },\n  {\n    \"codigo\": \"521080\",\n    \"nombre\": \"VETERINARIOS\"\n  },\n  {\n    \"codigo\": \"521090\",\n    \"nombre\": \"MEDICOS\"\n  },\n  {\n    \"codigo\": \"521095\",\n    \"nombre\": \"OTROS\"\n  },\n  {\n    \"codigo\": \"521099\",\n    \"nombre\": \"AJUSTES POR INFLACION\"\n  },\n  {\n    \"codigo\": \"5215\",\n    \"nombre\": \"IMPUESTOS\"\n  },\n  {\n    \"codigo\": \"521505\",\n    \"nombre\": \"DE INDUSTRIA Y COMERCIO\"\n  },\n  {\n    \"codigo\": \"521510\",\n    \"nombre\": \"IMPUESTO TIMBRE\"\n  },\n  {\n    \"codigo\": \"521515\",\n    \"nombre\": \"A LA PROPIEDAD RAIZ\"\n  },\n  {\n    \"codigo\": \"521520\",\n    \"nombre\": \"4 X MIL.\"\n  },\n  {\n    \"codigo\": \"521525\",\n    \"nombre\": \"VALORIZACION\"\n  },\n  {\n    \"codigo\": \"521540\",\n    \"nombre\": \"IMPUESTO VEHICULOS\"\n  },\n  {\n    \"codigo\": \"521545\",\n    \"nombre\": \"CONTRIBUCION FOGAFIN\"\n  },\n  {\n    \"codigo\": \"521565\",\n    \"nombre\": \"IMPOCONSUMO\"\n  },\n  {\n    \"codigo\": \"521570\",\n    \"nombre\": \"IVA DESCONTABLE\"\n  },\n  {\n    \"codigo\": \"521575\",\n    \"nombre\": \"CONTIBUCION DEC 2331\"\n  },\n  {\n    \"codigo\": \"521580\",\n    \"nombre\": \"IMPUESTO SEGURIDAD DEMOCRATICA\"\n  },\n  {\n    \"codigo\": \"521585\",\n    \"nombre\": \"DE RENTA\"\n  },\n  {\n    \"codigo\": \"521599\",\n    \"nombre\": \"AJUSTES POR INFLACION\"\n  }\n]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        -1300
      ],
      "id": "a4c4021a-53c5-4de2-b908-3c727e87b8ce",
      "name": "listacuenta52"
    },
    {
      "parameters": {
        "content": "**generar una lista de sharepoint para quitar el excel de las facturas\n\n** Validar si los numeros de comprobantes estan repetidos, se debe generar una alerta. Se debe validar una forma de continuar el flujo",
        "height": 280,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2200,
        -1060
      ],
      "id": "3cb9bdb0-c429-42cb-90cb-dbcc89e16189",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/sites/inverlink.sharepoint.com:/sites/Facturas_automatizacion",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3500,
        -860
      ],
      "id": "bb42d820-f9b2-4902-a13f-775e4653909e",
      "name": "Listar analistas2",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/sites/inverlink.sharepoint.com,d8aba34b-8017-4948-885f-7ef7c2f50f50,80443f29-72d5-4f1b-a6cd-5885f8b68f71/lists/?expand=fields\n",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3500,
        -1020
      ],
      "id": "f8c7ea5e-421a-4bd7-bebd-569e0912966b",
      "name": "Listar analistas3",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.microsoft.com/v1.0/sites/inverlink.sharepoint.com,d8aba34b-8017-4948-885f-7ef7c2f50f50,80443f29-72d5-4f1b-a6cd-5885f8b68f71/lists/2dd4befa-4ab3-4c96-b82a-bb13e52884b3/items\n",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"fields\":{\n    \"Nombrecliente\": \"{{ $json[\"Nombre del cliente o beneficiario\"] }}\",\n    \"Empresaemisora\": \"{{ $json[\"Empresa emisora\"] }}\",\n    \"NITempresaemisora\": \"{{ $json[\"NIT empresa emisora\"] }}\",\n    \"Correofuncionario\": \"{{ $json.Correo }}\",\n    \"Fechapago\": \"{{ $json[\"Fecha de pago o compra\"] }}\",\n    \"Valor\": \"{{ $json[\"Monto total cobrado\"] }}\",\n    \"Moneda\": \"{{ $json.Moneda }}\",\n    \"Observaciones\": \"{{ $json[\"Descripción\"] }}\",\n    \"Estado\": \"\",\n    \"Numerodecomprobante\": \"{{ $json['Número de comprobante o referencia'] }}\",\n     \"Fechaextraccion\": \"{{ $json.FECHA_EXTRACCION }}\",\n     \"Cuentapuc1\": \"{{ $json['Cuenta puc 1'] }}\",\n     \"Descripcioncuentapuc1\": \"{{ $json['Descripción cuenta puc 1'] }}\",\n     \"Naturaleza1\": \"{{ $json['Naturaleza 1'] }}\"\n  }\n}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3340,
        -520
      ],
      "id": "4c9a95c6-b70d-4b2f-93e9-338b80283f01",
      "name": "carga de datos a lista Facturas",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://graph.microsoft.com/v1.0/sites/inverlink.sharepoint.com,d8aba34b-8017-4948-885f-7ef7c2f50f50,80443f29-72d5-4f1b-a6cd-5885f8b68f71/lists/2dd4befa-4ab3-4c96-b82a-bb13e52884b3/items?expand=fields\n",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3760,
        -880
      ],
      "id": "73c45f73-683d-4972-b64b-f235919c3f3f",
      "name": "carga de datos a lista Facturas1",
      "credentials": {
        "microsoftSharePointOAuth2Api": {
          "id": "NvLfWW6CpSEbWCIO",
          "name": "Microsoft SharePoint account"
        },
        "microsoftGraphSecurityOAuth2Api": {
          "id": "3bJKtXRc91GFo2Tj",
          "name": "Microsoft Graph Security account"
        },
        "oAuth2Api": {
          "id": "iCNVrjz2iccszU7h",
          "name": "Inverlink sharepoint"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "value",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -360,
        0
      ],
      "id": "38cace9a-2776-414a-882a-15c75c3d9696",
      "name": "Separar datos de archivos"
    },
    {
      "parameters": {
        "fieldToSplitOut": "value",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -380,
        -240
      ],
      "id": "9a063122-72ed-4acc-b901-65f0cf4c04ca",
      "name": "Separar analistas"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "16ebe273-8def-4999-993d-1ad910a734c5",
              "leftValue": "={{ $('Code').item.json.name }}",
              "rightValue": "={{ $json.name }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -760,
        -20
      ],
      "id": "fa4d4f01-5fc4-4cfc-897c-16294e09ea13",
      "name": "selección analista"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all(); // Obtener todos los ítems de entrada\n\nconst resultado = [];\n\nfor (const item of items) {\n  const json = item.json;\n\n  if ((json.file?.mimeType === \"application/pdf\" || json.file?.mimeType.includes(\"image\") || json.file?.mimeType === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" || json.file?.mimeType === \"application/vnd.ms-excel.sheet.binary.macroEnabled.12\") && json.name) {\n    resultado.push({\n      name: json.name,\n      ID_PDF: json.id,\n      DRIVE_ID: json.parentReference.driveId,\n      CARPETA_ID: json.parentReference.id,\n      mimeType: json.file.mimeType,\n      carpetaAnalista: json.parentReference.name,\n      urlDownload: json[\"@microsoft.graph.downloadUrl\"]\n    });\n  }\n}\n\nreturn resultado.map(entry => ({ json: entry }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        -60
      ],
      "id": "c1959bd1-eb5b-4db0-a835-e92f75fab449",
      "name": "Ajuste de datos separados"
    },
    {
      "parameters": {
        "amount": 20
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2120,
        -140
      ],
      "id": "b6de5a99-cf82-44e3-a10d-6c0a76701d15",
      "name": "Wait",
      "webhookId": "66315e8e-43a5-492e-a91e-9c84d1c6cea5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c182c77d-68d8-4eb4-9b68-2f054fe6020a",
              "leftValue": "={{ $json.content }}",
              "rightValue": "Lo siento no puedo ayudarte con eso",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "83c0cade-e9ba-4a48-a750-249ec2b03756",
              "leftValue": "={{ $json.content }}",
              "rightValue": "Lo siento, no puedo extraer la información de la imagen proporcionada",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "37220c60-954d-4f55-b953-ebca0ddae73f",
              "leftValue": "={{ $json.content }}",
              "rightValue": "I'm sorry, I can't assist with this request",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "294ffdaf-bb55-4588-8ecf-b19d08124215",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1360,
        -700
      ],
      "id": "f0b8910e-d932-4ab0-a06e-13e174f0377e",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d8934554-a0d9-46a7-b4c8-32ee645cfad7",
              "leftValue": "={{ $('Extraer folders mes').item.json.mes }}",
              "rightValue": "={{ $json.MesSeleccionado }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1560,
        -160
      ],
      "id": "59fe042b-e8c8-4b37-8e7c-adde42a9b557",
      "name": "obtener mes seleccionado"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "4d19bd22-5e69-4490-810b-9edfb765dc6f",
        "options": {
          "rawBody": true
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1760,
        60
      ],
      "id": "e7f0de8a-a11b-4cfc-be80-628576b4ad0a",
      "name": "Webhook",
      "webhookId": "4d19bd22-5e69-4490-810b-9edfb765dc6f"
    },
    {
      "parameters": {
        "jsCode": "// Obtiene el primer item que llega al nodo\nconst item = items[0];\n\n// 1. Convierte el 'body' (que es un string) a un objeto JSON\nconst bodyData = JSON.parse(item.json.body);\n\n// 2. Extrae el valor de la propiedad \"mensaje\"\nconst mes = bodyData.mensaje;\n\n// 3. Devuelve un nuevo item con el dato extraído\nreturn [{\n  json: {\n    MesSeleccionado: mes\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1560,
        60
      ],
      "id": "7579514d-fbea-4794-9a0b-5c9886944513",
      "name": "extraer mes enviado"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -1340,
        -60
      ],
      "id": "283884e3-9185-43fd-baf6-44fd4ed3d13c",
      "name": "Unir mes"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"Encabezado\": \"Las siguientes imágenes son ilegibles\",\n  \"Nombre de la imagen\": \"{{ $('Edición IMG').item.json.NOMBRE_PDF }}\",\n  \"url imagen\": \"{{ $('Edición IMG').item.json.URL_DESCARGA }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        -760
      ],
      "id": "e2671b30-5421-4067-b3ab-cd25733336c5",
      "name": "Enviar datos imagen fallida"
    },
    {
      "parameters": {
        "toRecipients": "brayan.canon@krypto.com.co",
        "subject": "={{ $json.Encabezado }}",
        "bodyContent": "=Nombre imagen: {{ $json['Nombre de la imagen'] }}\nEnlace: {{ $json['url imagen'] }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        1860,
        -760
      ],
      "id": "8b3750f3-c61e-4587-bbf1-876dd819144d",
      "name": "Correo imagen fallida",
      "webhookId": "70a41b1e-e54d-48a9-b39a-bc1debe6a0e9",
      "executeOnce": false,
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "Lma1oBdvWxnIFZ3U",
          "name": "Microsoft Outlook inverlink"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const centroCosto = [\n    {\n      \"codigo\": \"001\",\n      \"nombre\": \"ADMINISTRACION\"\n    },\n    {\n      \"codigo\": \"001001\",\n      \"nombre\": \"PRINCIPAL\"\n    },\n    {\n      \"codigo\": \"001002\",\n      \"nombre\": \"MERCADEO MSN\"\n    },\n    {\n      \"codigo\": \"001003\",\n      \"nombre\": \"MERCADEO NGS\"\n    },\n    {\n      \"codigo\": \"001004\",\n      \"nombre\": \"MERCADEO FC\"\n    },\n    {\n      \"codigo\": \"001005\",\n      \"nombre\": \"MERCADEO EL\"\n    },\n    {\n      \"codigo\": \"001006\",\n      \"nombre\": \"MERCADEO EV\"\n    },\n    {\n      \"codigo\": \"001007\",\n      \"nombre\": \"MERCADEO AA\"\n    },\n    {\n      \"codigo\": \"001008\",\n      \"nombre\": \"UNO + UNO BALDOR\"\n    },\n    {\n      \"codigo\": \"001009\",\n      \"nombre\": \"SOCIOS\"\n    },\n    {\n      \"codigo\": \"001010\",\n      \"nombre\": \"REMODELACIÓN OFICINAS\"\n    },\n    {\n      \"codigo\": \"001011\",\n      \"nombre\": \"SOCIOS\"\n    },\n    {\n      \"codigo\": \"001012\",\n      \"nombre\": \"MERCADEO LL\"\n    },\n    {\n      \"codigo\": \"001013\",\n      \"nombre\": \"FLORA OFIC MIAMI\"\n    },\n    {\n      \"codigo\": \"001014\",\n      \"nombre\": \"TRANSPORTES VIGIA -PRIME\"\n    },\n    {\n      \"codigo\": \"001015\",\n      \"nombre\": \"MERCADEO FG\"\n    },\n    {\n      \"codigo\": \"001016\",\n      \"nombre\": \"MERCADEO NG PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001017\",\n      \"nombre\": \"MERCADEO EV PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001018\",\n      \"nombre\": \"MERCADEO FC PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001019\",\n      \"nombre\": \"MERCADEO FG PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001020\",\n      \"nombre\": \"MERCADEO MS PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001021\",\n      \"nombre\": \"LINK\"\n    },\n    {\n      \"codigo\": \"001022\",\n      \"nombre\": \"PLANEACIÓN ESTRATÉGICA\"\n    },\n    {\n      \"codigo\": \"001023\",\n      \"nombre\": \"MERCADEO PD PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001024\",\n      \"nombre\": \"MERCADEO PD\"\n    },\n    {\n      \"codigo\": \"001025\",\n      \"nombre\": \"LESTE\"\n    },\n    {\n      \"codigo\": \"001026\",\n      \"nombre\": \"MERCADEO CR\"\n    },\n    {\n      \"codigo\": \"002\",\n      \"nombre\": \"INTERNACIONAL\"\n    },\n    {\n      \"codigo\": \"002001\",\n      \"nombre\": \"ESTRUCTURA INTERNACIONAL\"\n    },\n    {\n      \"codigo\": \"005\",\n      \"nombre\": \"CONSORCIO\"\n    },\n    {\n      \"codigo\": \"005001\",\n      \"nombre\": \"INVERLINK ITAU\"\n    },\n    {\n      \"codigo\": \"100\",\n      \"nombre\": \"PROYECTOS COLOMBIA\"\n    },\n    {\n      \"codigo\": \"100001\",\n      \"nombre\": \"FINANZAUTO - DAYTONA II\"\n    },\n    {\n      \"codigo\": \"100002\",\n      \"nombre\": \"PARKING INTERNATIONAL - PARKING INTERNAT\"\n    },\n    {\n      \"codigo\": \"100003\",\n      \"nombre\": \"DISTRITO CAPITAL/GEB -DEMOCRATIZACION II\"\n    },\n    {\n      \"codigo\": \"100004\",\n      \"nombre\": \"TRANSPORTES VIGIA - OPTIMUS\"\n    },\n    {\n      \"codigo\": \"100005\",\n      \"nombre\": \"AMAREY - ZENITH\"\n    },\n    {\n      \"codigo\": \"100006\",\n      \"nombre\": \"COMPUNET - PIXEL\"\n    },\n    {\n      \"codigo\": \"100007\",\n      \"nombre\": \"LA 14 - CIELO\"\n    },\n    {\n      \"codigo\": \"100008\",\n      \"nombre\": \"TU PROGRESO - TEMPUS\"\n    },\n    {\n      \"codigo\": \"100009\",\n      \"nombre\": \"CARGO MASTER - MERCURI\"\n    },\n    {\n      \"codigo\": \"100010\",\n      \"nombre\": \"ABACUS - HOTELES-MEMPHIS\"\n    },\n    {\n      \"codigo\": \"100011\",\n      \"nombre\": \"REPREMUNDO - SIERRA\"\n    },\n    {\n      \"codigo\": \"100012\",\n      \"nombre\": \"COMAPAN - MILL\"\n    },\n    {\n      \"codigo\": \"100013\",\n      \"nombre\": \"GLOBAL SEGUROS - COSMOS\"\n    },\n    {\n      \"codigo\": \"100014\",\n      \"nombre\": \"OKIANUS - JOULE\"\n    },\n    {\n      \"codigo\": \"100015\",\n      \"nombre\": \"BANCOMPARTIR - NASA\"\n    },\n    {\n      \"codigo\": \"100016\",\n      \"nombre\": \"ENERTOLIMA - PIJAO\"\n    },\n    {\n      \"codigo\": \"100017\",\n      \"nombre\": \"RENTING AUTOMAYOR - METEORO\"\n    },\n    {\n      \"codigo\": \"100018\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA - NAZCA\"\n    },\n    {\n      \"codigo\": \"100019\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA - CALIDA-INKA\"\n    },\n    {\n      \"codigo\": \"100020\",\n      \"nombre\": \"INVERLINK ESTRUCTURAS INMOBILIARIAS\"\n    },\n    {\n      \"codigo\": \"100021\",\n      \"nombre\": \"AGENCIA DE ADUANAS SIACO NIVEL 1\"\n    },\n    {\n      \"codigo\": \"100022\",\n      \"nombre\": \"CHSM - LEGACY\"\n    },\n    {\n      \"codigo\": \"100023\",\n      \"nombre\": \"PROYECTO NASH SAS\"\n    },\n    {\n      \"codigo\": \"100024\",\n      \"nombre\": \"PASA- CARAMBOLA\"\n    },\n    {\n      \"codigo\": \"100025\",\n      \"nombre\": \"BTG - CRONOS\"\n    },\n    {\n      \"codigo\": \"100026\",\n      \"nombre\": \"RECAUDO BOGOTA\"\n    },\n    {\n      \"codigo\": \"100027\",\n      \"nombre\": \"ECOPETROL - JUSTINE\"\n    },\n    {\n      \"codigo\": \"100028\",\n      \"nombre\": \"MANUFACTURAS Y PROC- ROCKY\"\n    },\n    {\n      \"codigo\": \"100029\",\n      \"nombre\": \"DESARROLLO SERNA - HESTIA II\"\n    },\n    {\n      \"codigo\": \"100030\",\n      \"nombre\": \"ISA - RAM\"\n    },\n    {\n      \"codigo\": \"100031\",\n      \"nombre\": \"PRABYC -VITTA\"\n    },\n    {\n      \"codigo\": \"100032\",\n      \"nombre\": \"VELUM - VENTURES\"\n    },\n    {\n      \"codigo\": \"100033\",\n      \"nombre\": \"ALMACENES EXITO - BARTER\"\n    },\n    {\n      \"codigo\": \"100034\",\n      \"nombre\": \"CREARMIENTOS -SUNSHINE\"\n    },\n    {\n      \"codigo\": \"100035\",\n      \"nombre\": \"ALIMENTOS CONCENTRADOS RAZA - LAIKA\"\n    },\n    {\n      \"codigo\": \"100036\",\n      \"nombre\": \"INFRANCO - QUARTZ\"\n    },\n    {\n      \"codigo\": \"100037\",\n      \"nombre\": \"ALDEA PROYECTOS - CÓLON\"\n    },\n    {\n      \"codigo\": \"100038\",\n      \"nombre\": \"EMPRESAS PUBLICAS MEDELLIN- ZEUS\"\n    },\n    {\n      \"codigo\": \"100039\",\n      \"nombre\": \"RIVERCITY - ARTIS\"\n    },\n    {\n      \"codigo\": \"100040\",\n      \"nombre\": \"EMBOTELLAMIENTO - TUNDRA\"\n    },\n    {\n      \"codigo\": \"100041\",\n      \"nombre\": \"CENIT - NEPTUNO\"\n    },\n    {\n      \"codigo\": \"100042\",\n      \"nombre\": \"DOÑA JUANA - ÓSCAR\"\n    },\n    {\n      \"codigo\": \"100043\",\n      \"nombre\": \"HOTELES COSMOS - MARS\"\n    },\n    {\n      \"codigo\": \"100044\",\n      \"nombre\": \"GEB - PURA VIDA\"\n    },\n    {\n      \"codigo\": \"100045\",\n      \"nombre\": \"VELUM VENTURES SAS\"\n    },\n    {\n      \"codigo\": \"100046\",\n      \"nombre\": \"PACTIA - LAGER\"\n    },\n    {\n      \"codigo\": \"100047\",\n      \"nombre\": \"CETSA - CUORE\"\n    },\n    {\n      \"codigo\": \"100048\",\n      \"nombre\": \"FIDEICOMISO ABACUS OXO 69\"\n    },\n    {\n      \"codigo\": \"100049\",\n      \"nombre\": \"EDYFICAR - MANCHESTER\"\n    },\n    {\n      \"codigo\": \"100050\",\n      \"nombre\": \"BANCOMPARTIR - MANCHESTER\"\n    },\n    {\n      \"codigo\": \"100051\",\n      \"nombre\": \"BVC - DECEVAL\"\n    },\n    {\n      \"codigo\": \"100052\",\n      \"nombre\": \"ZEUSS - CARIOCA\"\n    },\n    {\n      \"codigo\": \"100053\",\n      \"nombre\": \"BRIGARD - ECOPETROL\"\n    },\n    {\n      \"codigo\": \"100054\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA- F1 COSTA RICA\"\n    },\n    {\n      \"codigo\": \"100055\",\n      \"nombre\": \"CRCC - ASCENSO II\"\n    },\n    {\n      \"codigo\": \"100056\",\n      \"nombre\": \"CCDC - ASCENSO II\"\n    },\n    {\n      \"codigo\": \"100057\",\n      \"nombre\": \"SERLEFIN - COLLETIO\"\n    },\n    {\n      \"codigo\": \"100058\",\n      \"nombre\": \"TGI -\"\n    },\n    {\n      \"codigo\": \"100059\",\n      \"nombre\": \"CRCC - ASCENSO III\"\n    },\n    {\n      \"codigo\": \"100060\",\n      \"nombre\": \"PLANETA RICA - FOUR REASONS GRIZZLY\"\n    },\n    {\n      \"codigo\": \"100061\",\n      \"nombre\": \"RIOPAILA - CELIA\"\n    },\n    {\n      \"codigo\": \"100062\",\n      \"nombre\": \"GRUPO GRASCO - BLUE\"\n    },\n    {\n      \"codigo\": \"100063\",\n      \"nombre\": \"ZEUSS - TIGER\"\n    },\n    {\n      \"codigo\": \"100064\",\n      \"nombre\": \"CLINICA MEDICOS SAS - AKOS\"\n    },\n    {\n      \"codigo\": \"100065\",\n      \"nombre\": \"QUIMICA INTERNACIONAL - PIER\"\n    },\n    {\n      \"codigo\": \"100066\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA - CERES\"\n    },\n    {\n      \"codigo\": \"100067\",\n      \"nombre\": \"ALIANZA - FID. CONDOR\"\n    },\n    {\n      \"codigo\": \"100068\",\n      \"nombre\": \"R&R LUBRICANTES - SAN FRANCISCO\"\n    },\n    {\n      \"codigo\": \"100069\",\n      \"nombre\": \"EQUION - EDEN\"\n    },\n    {\n      \"codigo\": \"100070\",\n      \"nombre\": \"INGENIO LA CABAÑA - JET\"\n    },\n    {\n      \"codigo\": \"100071\",\n      \"nombre\": \"COMPAÑIA ENVASADORA DEL ATLANTIC - OCEAN\"\n    },\n    {\n      \"codigo\": \"100072\",\n      \"nombre\": \"FDN - ATENEA\"\n    },\n    {\n      \"codigo\": \"100073\",\n      \"nombre\": \"LEVAPAN - GEMA\"\n    },\n    {\n      \"codigo\": \"100074\",\n      \"nombre\": \"GEB -NAZCA IV\"\n    },\n    {\n      \"codigo\": \"100075\",\n      \"nombre\": \"OMNILATAM-\"\n    },\n    {\n      \"codigo\": \"100076\",\n      \"nombre\": \"MOVICH - HIPNOS\"\n    },\n    {\n      \"codigo\": \"100077\",\n      \"nombre\": \"ABACUS- SUNRISE\"\n    },\n    {\n      \"codigo\": \"100078\",\n      \"nombre\": \"INVERLINK INVERSIONES ALTERNATIVAS\"\n    },\n    {\n      \"codigo\": \"100079\",\n      \"nombre\": \"FIDEICOMISO ABACUS - OXX CARTAGENA\"\n    },\n    {\n      \"codigo\": \"100080\",\n      \"nombre\": \"FIDEICOMISO ABACUS - OXO 69\"\n    },\n    {\n      \"codigo\": \"100081\",\n      \"nombre\": \"FIDEICOMISO ABACUS - OXO BARRANQUILLA\"\n    },\n    {\n      \"codigo\": \"100082\",\n      \"nombre\": \"BVC - FUSION BOLSAS\"\n    },\n    {\n      \"codigo\": \"100083\",\n      \"nombre\": \"CREZCAMOS - JACK\"\n    },\n    {\n      \"codigo\": \"100084\",\n      \"nombre\": \"GLOBAL SEGUROS -BLACKBOARD\"\n    },\n    {\n      \"codigo\": \"100085\",\n      \"nombre\": \"INCAUCA DALIA\"\n    },\n    {\n      \"codigo\": \"100086\",\n      \"nombre\": \"PROTECCION / ARTEMISA I\"\n    },\n    {\n      \"codigo\": \"100087\",\n      \"nombre\": \"CEMENTOS ARGOS - CONSTATINO\"\n    },\n    {\n      \"codigo\": \"100088\",\n      \"nombre\": \"GRUPO CEZCAMOS -\"\n    },\n    {\n      \"codigo\": \"100089\",\n      \"nombre\": \"GEB /CERES\"\n    },\n    {\n      \"codigo\": \"100090\",\n      \"nombre\": \"EPM - ORION\"\n    },\n    {\n      \"codigo\": \"100091\",\n      \"nombre\": \"TREE CAPITAL -JACK 2.0\"\n    },\n    {\n      \"codigo\": \"100092\",\n      \"nombre\": \"AGUACLARA CAPITAL SAS - JACK 2.0\"\n    },\n    {\n      \"codigo\": \"100093\",\n      \"nombre\": \"INVERSIONES NIOTRESS - JACK 2.0\"\n    },\n    {\n      \"codigo\": \"100094\",\n      \"nombre\": \"GEB - TAMARINDO\"\n    },\n    {\n      \"codigo\": \"100095\",\n      \"nombre\": \"EPM -ORION\"\n    },\n    {\n      \"codigo\": \"100096\",\n      \"nombre\": \"PROTECCION -ARTEMISA 3.0\"\n    },\n    {\n      \"codigo\": \"100097\",\n      \"nombre\": \"SYAC-CONNECT\"\n    },\n    {\n      \"codigo\": \"100098\",\n      \"nombre\": \"VARTA - COLSUBSIDIO\"\n    },\n    {\n      \"codigo\": \"100099\",\n      \"nombre\": \"CREDICORP- SEN\"\n    },\n    {\n      \"codigo\": \"100100\",\n      \"nombre\": \"GEB/NAZCA V\"\n    },\n    {\n      \"codigo\": \"100101\",\n      \"nombre\": \"BANCOLOMBIA/ASFALIS\"\n    },\n    {\n      \"codigo\": \"100102\",\n      \"nombre\": \"HIDROTECNIK -VETEL\"\n    },\n    {\n      \"codigo\": \"100103\",\n      \"nombre\": \"TRANSPORTES VIGIA - PRIME\"\n    },\n    {\n      \"codigo\": \"100104\",\n      \"nombre\": \"FINANZAUTO - MONZA EQUIRENT\"\n    },\n    {\n      \"codigo\": \"100105\",\n      \"nombre\": \"ITAU - SILK\"\n    },\n    {\n      \"codigo\": \"100106\",\n      \"nombre\": \"ECOPETROL - ENCANTO\"\n    },\n    {\n      \"codigo\": \"100107\",\n      \"nombre\": \"CENIT - AMBERES\"\n    },\n    {\n      \"codigo\": \"100108\",\n      \"nombre\": \"AGORA - GRASCO\"\n    },\n    {\n      \"codigo\": \"100109\",\n      \"nombre\": \"GRUPO ENERGIA BOGOTA - ROGER\"\n    },\n    {\n      \"codigo\": \"100110\",\n      \"nombre\": \"INVECSA - QBCO\"\n    },\n    {\n      \"codigo\": \"100111\",\n      \"nombre\": \"INVERSIONES SOMONTANO - PAJARES\"\n    },\n    {\n      \"codigo\": \"100112\",\n      \"nombre\": \"LEGRAND -EIRA\"\n    },\n    {\n      \"codigo\": \"100113\",\n      \"nombre\": \"TREE CAPITAL - JACK 3.0\"\n    },\n    {\n      \"codigo\": \"100114\",\n      \"nombre\": \"HOCOL - CASTELLO\"\n    },\n    {\n      \"codigo\": \"100115\",\n      \"nombre\": \"INVERSIONES JMH S.A.S - EMPORIO\"\n    },\n    {\n      \"codigo\": \"100116\",\n      \"nombre\": \"AMAREY - APOLLO\"\n    },\n    {\n      \"codigo\": \"100117\",\n      \"nombre\": \"INCAUCA - SAO PAULO\"\n    },\n    {\n      \"codigo\": \"100118\",\n      \"nombre\": \"INVERSORA LOS CORALES-KUALA\"\n    },\n    {\n      \"codigo\": \"100119\",\n      \"nombre\": \"GRUPO TRINITY - ALMAVIVA\"\n    },\n    {\n      \"codigo\": \"100120\",\n      \"nombre\": \"GRUPO VARDI - SKYLINE\"\n    },\n    {\n      \"codigo\": \"100121\",\n      \"nombre\": \"EVOAGRO - SATURNO\"\n    },\n    {\n      \"codigo\": \"100122\",\n      \"nombre\": \"ITS - OPTIMUS\"\n    },\n    {\n      \"codigo\": \"100123\",\n      \"nombre\": \"POLLO FIESTA - FALCON\"\n    },\n    {\n      \"codigo\": \"100124\",\n      \"nombre\": \"PETROBRAS - ATLAS\"\n    },\n    {\n      \"codigo\": \"100125\",\n      \"nombre\": \"SURA - POLARIS\"\n    },\n    {\n      \"codigo\": \"100126\",\n      \"nombre\": \"UN SOLO PROVEEDOR - BREAD\"\n    },\n    {\n      \"codigo\": \"100127\",\n      \"nombre\": \"ACEROS AREQUIPA - CORINTO\"\n    },\n    {\n      \"codigo\": \"100128\",\n      \"nombre\": \"FDN - COOPER\"\n    },\n    {\n      \"codigo\": \"100129\",\n      \"nombre\": \"GOLDMAN SACHS-DENVER\"\n    },\n    {\n      \"codigo\": \"100130\",\n      \"nombre\": \"UNILEVER\"\n    },\n    {\n      \"codigo\": \"500\",\n      \"nombre\": \"PROYECTOS EXTERIOR\"\n    },\n    {\n      \"codigo\": \"500001\",\n      \"nombre\": \"ZAZ FOOD STORES - FLASH\"\n    },\n    {\n      \"codigo\": \"500002\",\n      \"nombre\": \"JOHN LAING - RUTA DEL CACAO JUMBO\"\n    },\n    {\n      \"codigo\": \"500003\",\n      \"nombre\": \"HYBRITEC ECOSOLAR - ALVA\"\n    },\n    {\n      \"codigo\": \"500004\",\n      \"nombre\": \"CORPBANCA HELM - ITAU CORREDOR SEGUROS\"\n    },\n    {\n      \"codigo\": \"500005\",\n      \"nombre\": \"OFFICE DEPOT - INK\"\n    },\n    {\n      \"codigo\": \"500006\",\n      \"nombre\": \"ABERTIS - ACCENORTE\"\n    },\n    {\n      \"codigo\": \"500007\",\n      \"nombre\": \"ROADIS PSP - VALDES\"\n    },\n    {\n      \"codigo\": \"500008\",\n      \"nombre\": \"VTTI - PUERTO BAHÍA TRITON\"\n    },\n    {\n      \"codigo\": \"500009\",\n      \"nombre\": \"JHON LAING - MAR II\"\n    },\n    {\n      \"codigo\": \"500010\",\n      \"nombre\": \"CREATRUST VIVA - GREEN III MEXICO\"\n    },\n    {\n      \"codigo\": \"500011\",\n      \"nombre\": \"LAING INVESTMENST- CACAO\"\n    },\n    {\n      \"codigo\": \"500012\",\n      \"nombre\": \"INVERSIONES VIVA LTDA - GREEN III MEXICO\"\n    },\n    {\n      \"codigo\": \"500013\",\n      \"nombre\": \"IMAP\"\n    },\n    {\n      \"codigo\": \"500014\",\n      \"nombre\": \"GAS NATURAL DE LIMA\"\n    },\n    {\n      \"codigo\": \"500015\",\n      \"nombre\": \"LOGANVILLE S.A - EMU\"\n    },\n    {\n      \"codigo\": \"500016\",\n      \"nombre\": \"PUERTO CALDERA - ALEJANDRIA\"\n    },\n    {\n      \"codigo\": \"500017\",\n      \"nombre\": \"NEW TRANSPORT - NEW TRANSPORT\"\n    },\n    {\n      \"codigo\": \"500018\",\n      \"nombre\": \"SAN DIEGO - NAVI\"\n    },\n    {\n      \"codigo\": \"500019\",\n      \"nombre\": \"NORTHLAND POWER - THOR\"\n    },\n    {\n      \"codigo\": \"500020\",\n      \"nombre\": \"INMOBILIARIA DON ANTONIO - FLASH II\"\n    },\n    {\n      \"codigo\": \"500021\",\n      \"nombre\": \"INVERSIONES VIVA\"\n    },\n    {\n      \"codigo\": \"500022\",\n      \"nombre\": \"NUEVO AGORA - SAPIENS\"\n    },\n    {\n      \"codigo\": \"500023\",\n      \"nombre\": \"ALERE - EMU\"\n    },\n    {\n      \"codigo\": \"500024\",\n      \"nombre\": \"SOINT -MILE\"\n    },\n    {\n      \"codigo\": \"500025\",\n      \"nombre\": \"INTERENERGY - ORIÓN\"\n    },\n    {\n      \"codigo\": \"500026\",\n      \"nombre\": \"LAING INVESTMENTS - CALIMA\"\n    },\n    {\n      \"codigo\": \"500027\",\n      \"nombre\": \"CEMCAL - NEW YORK\"\n    },\n    {\n      \"codigo\": \"500028\",\n      \"nombre\": \"MOLINOS DEL SALVADOR- WEIZEN\"\n    },\n    {\n      \"codigo\": \"500029\",\n      \"nombre\": \"LAING INVESMENTS - CALIMA\"\n    },\n    {\n      \"codigo\": \"500030\",\n      \"nombre\": \"CEMEX LATAM - VESUDIO\"\n    },\n    {\n      \"codigo\": \"500031\",\n      \"nombre\": \"GRUPO ESTRELLA - ATRIA\"\n    },\n    {\n      \"codigo\": \"500032\",\n      \"nombre\": \"GRUPO CALESA - VALENCIA\"\n    },\n    {\n      \"codigo\": \"500033\",\n      \"nombre\": \"EGE HAINA - ORIóN\"\n    },\n    {\n      \"codigo\": \"500034\",\n      \"nombre\": \"INDUSTRIAS ALES Y DANEC - GUINEA\"\n    },\n    {\n      \"codigo\": \"500035\",\n      \"nombre\": \"GRUPO APC - CATAN\"\n    },\n    {\n      \"codigo\": \"500036\",\n      \"nombre\": \"CYMI - WEST\"\n    },\n    {\n      \"codigo\": \"500037\",\n      \"nombre\": \"ITAU CORPBANCA - TAURO\"\n    },\n    {\n      \"codigo\": \"500038\",\n      \"nombre\": \"GRUPO MAGNA - PREMIER I - SILVERBACK\"\n    },\n    {\n      \"codigo\": \"500039\",\n      \"nombre\": \"GMG HOLDING SA- TIBET\"\n    },\n    {\n      \"codigo\": \"500040\",\n      \"nombre\": \"GRUPO MAGANA - PREMIER - HIGHWAY\"\n    },\n    {\n      \"codigo\": \"500041\",\n      \"nombre\": \"VALLEY GROUP - LEDA\"\n    },\n    {\n      \"codigo\": \"500042\",\n      \"nombre\": \"DESARROLLOS COMERCIALES - PLATZ\"\n    },\n    {\n      \"codigo\": \"500043\",\n      \"nombre\": \"ALERE - LA FAZENDA\"\n    },\n    {\n      \"codigo\": \"500044\",\n      \"nombre\": \"GRUPO MAGNA - PACIFIC RIM\"\n    },\n    {\n      \"codigo\": \"500045\",\n      \"nombre\": \"JAGUAR ENERGY GUATEMALA - MAYA\"\n    },\n    {\n      \"codigo\": \"500046\",\n      \"nombre\": \"CONSORCIO MINERO DOMINICANO - CONDOR\"\n    },\n    {\n      \"codigo\": \"500047\",\n      \"nombre\": \"BANCO DE AMERICA CENTRAL -ARKADIA\"\n    },\n    {\n      \"codigo\": \"500048\",\n      \"nombre\": \"AJOVER DARNEL- RESIN\"\n    },\n    {\n      \"codigo\": \"500049\",\n      \"nombre\": \"DIACO - STARK\"\n    },\n    {\n      \"codigo\": \"500050\",\n      \"nombre\": \"NEW TRANSPORT - LACUS\"\n    },\n    {\n      \"codigo\": \"500051\",\n      \"nombre\": \"BANCO G&T BAC -VESTA\"\n    },\n    {\n      \"codigo\": \"500052\",\n      \"nombre\": \"FYNERTY PROPERTIES CORP - PORTLAND\"\n    },\n    {\n      \"codigo\": \"500053\",\n      \"nombre\": \"BCC CIBELES - MORGAN\"\n    },\n    {\n      \"codigo\": \"500054\",\n      \"nombre\": \"SOC PUERTO CALDERA - ALEJANDRIA II\"\n    },\n    {\n      \"codigo\": \"500055\",\n      \"nombre\": \"KEY HOLDING - ELIPSE\"\n    },\n    {\n      \"codigo\": \"500056\",\n      \"nombre\": \"AD RETAIL- ESPARTA\"\n    },\n    {\n      \"codigo\": \"500057\",\n      \"nombre\": \"COMECA- EPIC\"\n    },\n    {\n      \"codigo\": \"500058\",\n      \"nombre\": \"HIDROTECNICK - VETTEL\"\n    },\n    {\n      \"codigo\": \"500059\",\n      \"nombre\": \"PVC GERFOR -NERON\"\n    },\n    {\n      \"codigo\": \"500060\",\n      \"nombre\": \"BANCO PICHINCHA-YAKARTA\"\n    },\n    {\n      \"codigo\": \"500061\",\n      \"nombre\": \"ALIMENTOS NUTRION-NEBRASKA\"\n    },\n    {\n      \"codigo\": \"500062\",\n      \"nombre\": \"MUNICIPALIDAD LIMA-ROYAL\"\n    },\n    {\n      \"codigo\": \"500063\",\n      \"nombre\": \"ALIMENTOS NUTRION - NEBRASKA\"\n    },\n    {\n      \"codigo\": \"500064\",\n      \"nombre\": \"RIOPAILA-CELIA II\"\n    },\n    {\n      \"codigo\": \"500065\",\n      \"nombre\": \"KIONETWORKS - BYTE\"\n    },\n    {\n      \"codigo\": \"500066\",\n      \"nombre\": \"TWEET DALE -ASTURIAS\"\n    },\n    {\n      \"codigo\": \"500067\",\n      \"nombre\": \"AGUA IMARA ACA - INTERLAGOS\"\n    },\n    {\n      \"codigo\": \"500068\",\n      \"nombre\": \"GRUPO DIANA - CAMINO CAPITAL MANAGEMENT\"\n    },\n    {\n      \"codigo\": \"500069\",\n      \"nombre\": \"SQF - PLATZ\"\n    },\n    {\n      \"codigo\": \"500070\",\n      \"nombre\": \"GELITA - BLOOM\"\n    },\n    {\n      \"codigo\": \"500071\",\n      \"nombre\": \"SAN SOUCI HOLDING - CRUISE\"\n    },\n    {\n      \"codigo\": \"500072\",\n      \"nombre\": \"MACQUARIE -OSAKA\"\n    },\n    {\n      \"codigo\": \"500073\",\n      \"nombre\": \"CONTUGAS -NAZCA VII\"\n    },\n    {\n      \"codigo\": \"500074\",\n      \"nombre\": \"HERNANDO CAICEDO - BOOM\"\n    },\n    {\n      \"codigo\": \"500075\",\n      \"nombre\": \"TERRA - HOLT\"\n    },\n    {\n      \"codigo\": \"500076\",\n      \"nombre\": \"PALOGORDO - ARPINO\"\n    },\n    {\n      \"codigo\": \"500077\",\n      \"nombre\": \"BAY HARBOR\"\n    },\n    {\n      \"codigo\": \"500078\",\n      \"nombre\": \"BOTERO - DESPEGAR\"\n    },\n    {\n      \"codigo\": \"500079\",\n      \"nombre\": \"LUFUSA - SPARK\"\n    },\n    {\n      \"codigo\": \"500080\",\n      \"nombre\": \"COURSE2 ENERGY - VORTEX\"\n    },\n    {\n      \"codigo\": \"500081\",\n      \"nombre\": \"NETX TRADING IMPORT - BALBOA\"\n    },\n    {\n      \"codigo\": \"500082\",\n      \"nombre\": \"SAAM - PUERTO CALDERA - ALEJANDRIA III\"\n    },\n    {\n      \"codigo\": \"500083\",\n      \"nombre\": \"NORDFUND - LAS VEGAS\"\n    },\n    {\n      \"codigo\": \"500084\",\n      \"nombre\": \"LUMIRADX- VITRO\"\n    },\n    {\n      \"codigo\": \"500085\",\n      \"nombre\": \"HELM HOLDINGS-ORANGE\"\n    },\n    {\n      \"codigo\": \"500086\",\n      \"nombre\": \"ESTRATEGIA\"\n    },\n    {\n      \"codigo\": \"500087\",\n      \"nombre\": \"TOPMANAGEMENT- COLON\"\n    },\n    {\n      \"codigo\": \"700\",\n      \"nombre\": \"CENTRO AMERICA - MM\"\n    },\n    {\n      \"codigo\": \"700001\",\n      \"nombre\": \"MERCADEO MM\"\n    },\n    {\n      \"codigo\": \"800\",\n      \"nombre\": \"CENTRO AMERICA - SC\"\n    },\n    {\n      \"codigo\": \"800001\",\n      \"nombre\": \"MERCADEO SC\"\n    },\n    {\n      \"codigo\": \"900\",\n      \"nombre\": \"GESTION DE INVERSIONES\"\n    }\n]\n\nreturn [\n  {\n    json: {\n      centroCosto\n    }\n  }\n]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1260,
        -260
      ],
      "id": "4ae7b0b4-03f6-43a9-a4cc-02cf9411081a",
      "name": "listacc"
    },
    {
      "parameters": {
        "jsCode": "// --- Función para normalizar texto (quitar tildes y caracteres especiales) ---\nfunction normalizarTexto(texto) {\n  if (!texto) return '';\n  return texto\n    .normalize(\"NFD\") // Separa las letras de los acentos\n    .replace(/[\\u0300-\\u036f]/g, \"\") // Quita los acentos\n    .toUpperCase(); // Convierte a mayúsculas\n}\n\n// --- Leer datos de TODOS los nodos anteriores ---\nconst personas = $node[\"Lista Analistas CC\"].json.personas;\nconst centrosCosto = $node[\"listacc\"].json.centroCosto;\nconst nombrePDF = $node[\"If4\"].json.NOMBRE_PDF;\nconst carpetaAnalista = $node[\"If4\"].json.carpetaAnalista;\n\n// --- Lógica de Búsqueda por Puntuación ---\n\nconst palabrasIgnoradas = ['LA', 'EL', 'DE', 'Y', 'A', 'O', 'LOS', 'LAS'];\nconst palabrasClavePDF = normalizarTexto(nombrePDF)\n  .replace(/\\.PDF/i, '')\n  .replace(/[^A-Z\\s]/g, '')\n  .trim()\n  .split(/\\s+/)\n  .filter(p => p.length > 2 && !palabrasIgnoradas.includes(p));\n\nconst centrosConPuntaje = centrosCosto.map(centro => {\n  let score = 0;\n  const palabrasCentroCosto = normalizarTexto(centro.nombre)\n    .replace(/[^A-Z\\s]/g, '')\n    .trim()\n    .split(/\\s+/);\n\n  palabrasClavePDF.forEach(palabraPDF => {\n    if (palabrasCentroCosto.includes(palabraPDF)) {\n      score += palabraPDF.length;\n    }\n  });\n  return { ...centro, score };\n});\n\nconst mejorCoincidencia = centrosConPuntaje.reduce((mejor, actual) => {\n  return (actual.score > mejor.score) ? actual : mejor;\n}, { score: 0 });\n\n// --- Lógica de Respaldo ---\nlet centroCostoFinal = null;\nconst centroCostoPrincipal = centrosCosto.find(c => c.codigo === \"001001\");\n\nif (mejorCoincidencia.score > 0) {\n  centroCostoFinal = mejorCoincidencia;\n} else {\n  const nombreCarpetaNormalizado = normalizarTexto(carpetaAnalista);\n  if (nombreCarpetaNormalizado === 'DHAYRA BEDOYA') {\n    centroCostoFinal = centroCostoPrincipal;\n  } else {\n    // Búsqueda usando el nombre normalizado\n    const analistaEncontrado = personas.find(p => normalizarTexto(p.nombre).includes(nombreCarpetaNormalizado));\n    \n    if (analistaEncontrado) {\n      const inicialesAnalista = normalizarTexto(analistaEncontrado.iniciales);\n      const centroPorIniciales = centrosCosto.find(c => {\n        const palabrasNombre = normalizarTexto(c.nombre).split(' ');\n        return palabrasNombre.some(palabra =>\n          palabra.length >= 2 && inicialesAnalista.startsWith(palabra)\n        );\n      });\n      centroCostoFinal = centroPorIniciales || centroCostoPrincipal;\n    } else {\n      centroCostoFinal = centroCostoPrincipal;\n    }\n  }\n}\n\n// --- Armar la respuesta ---\nreturn [\n  {\n    json: {\n      nombrePDF,\n      carpetaAnalista,\n      centroCostoCoincidente: centroCostoFinal.codigo,\n      centroCostoCoincidenten: centroCostoFinal.nombre,\n      //personas,\n      //centrosCosto\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1420,
        -260
      ],
      "id": "a7ccd703-5e8b-4ef4-a56a-8cce83619ec8",
      "name": "procesado analista_carpeta"
    },
    {
      "parameters": {
        "jsCode": "const personas = [\n  {\n    nombre: \"ENRIQUE VARGAS GARCIA\",\n    iniciales: \"EV\",\n    tarjeta4u: \"1969\"\n  },\n  {\n    nombre: \"ANDRES FELIPE CAMACHO GONZALEZ\",\n    iniciales: \"FC\",\n    tarjeta4u: \"8396\"    \n  },\n  {\n    nombre: \"MAURICIO SALDARRIAGA NAVARRO\",\n    iniciales: \"MSN\",\n    tarjeta4u: \"2975\"\n  },\n  {\n    nombre: \"NICOLAS GOMEZ SAAVEDRA\",\n    iniciales: \"NGS\",\n    tarjeta4u: \"8142\"\n  },\n  {\n    nombre: \"FELIPE GAVIRIA LOPEZ\",\n    iniciales: \"FG\",\n    tarjeta4u: \"6717\"\n  },\n  {\n    nombre: \"PEDRO LIEVANO\",\n    iniciales: \"PD\",\n    tarjeta4u: \"1181\"\n  },\n  {\n    nombre: \"SANTIAGO CARDENAS\",\n    iniciales: \"SC\",\n    tarjeta4u: \"2511\"\n  }, \n  {\n    nombre: \"MARCELO MODAI\",\n    iniciales: \"MM\",\n    tarjeta4u: \"2511\"\n  },\n  {\n    nombre: \"DHAYRA BEDOYA\",\n    iniciales: \"\",\n    tarjeta4u: \"6602\"\n  }\n  \n];\n\nreturn [\n  {\n    json: {\n      personas\n    }\n  }\n]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -560
      ],
      "id": "f66a44c5-2227-4052-a0e7-7eda1c351577",
      "name": "Lista Analistas CC1"
    },
    {
      "parameters": {
        "jsCode": "const centroCosto = [\n    {\n      \"codigo\": \"001\",\n      \"nombre\": \"ADMINISTRACION\"\n    },\n    {\n      \"codigo\": \"001001\",\n      \"nombre\": \"PRINCIPAL\"\n    },\n    {\n      \"codigo\": \"001002\",\n      \"nombre\": \"MERCADEO MSN\"\n    },\n    {\n      \"codigo\": \"001003\",\n      \"nombre\": \"MERCADEO NGS\"\n    },\n    {\n      \"codigo\": \"001004\",\n      \"nombre\": \"MERCADEO FC\"\n    },\n    {\n      \"codigo\": \"001005\",\n      \"nombre\": \"MERCADEO EL\"\n    },\n    {\n      \"codigo\": \"001006\",\n      \"nombre\": \"MERCADEO EV\"\n    },\n    {\n      \"codigo\": \"001007\",\n      \"nombre\": \"MERCADEO AA\"\n    },\n    {\n      \"codigo\": \"001008\",\n      \"nombre\": \"UNO + UNO BALDOR\"\n    },\n    {\n      \"codigo\": \"001009\",\n      \"nombre\": \"SOCIOS\"\n    },\n    {\n      \"codigo\": \"001010\",\n      \"nombre\": \"REMODELACIÓN OFICINAS\"\n    },\n    {\n      \"codigo\": \"001011\",\n      \"nombre\": \"SOCIOS\"\n    },\n    {\n      \"codigo\": \"001012\",\n      \"nombre\": \"MERCADEO LL\"\n    },\n    {\n      \"codigo\": \"001013\",\n      \"nombre\": \"FLORA OFIC MIAMI\"\n    },\n    {\n      \"codigo\": \"001014\",\n      \"nombre\": \"TRANSPORTES VIGIA -PRIME\"\n    },\n    {\n      \"codigo\": \"001015\",\n      \"nombre\": \"MERCADEO FG\"\n    },\n    {\n      \"codigo\": \"001016\",\n      \"nombre\": \"MERCADEO NG PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001017\",\n      \"nombre\": \"MERCADEO EV PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001018\",\n      \"nombre\": \"MERCADEO FC PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001019\",\n      \"nombre\": \"MERCADEO FG PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001020\",\n      \"nombre\": \"MERCADEO MS PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001021\",\n      \"nombre\": \"LINK\"\n    },\n    {\n      \"codigo\": \"001022\",\n      \"nombre\": \"PLANEACIÓN ESTRATÉGICA\"\n    },\n    {\n      \"codigo\": \"001023\",\n      \"nombre\": \"MERCADEO PD PROPUESTA\"\n    },\n    {\n      \"codigo\": \"001024\",\n      \"nombre\": \"MERCADEO PD\"\n    },\n    {\n      \"codigo\": \"001025\",\n      \"nombre\": \"LESTE\"\n    },\n    {\n      \"codigo\": \"001026\",\n      \"nombre\": \"MERCADEO CR\"\n    },\n    {\n      \"codigo\": \"002\",\n      \"nombre\": \"INTERNACIONAL\"\n    },\n    {\n      \"codigo\": \"002001\",\n      \"nombre\": \"ESTRUCTURA INTERNACIONAL\"\n    },\n    {\n      \"codigo\": \"005\",\n      \"nombre\": \"CONSORCIO\"\n    },\n    {\n      \"codigo\": \"005001\",\n      \"nombre\": \"INVERLINK ITAU\"\n    },\n    {\n      \"codigo\": \"100\",\n      \"nombre\": \"PROYECTOS COLOMBIA\"\n    },\n    {\n      \"codigo\": \"100001\",\n      \"nombre\": \"FINANZAUTO - DAYTONA II\"\n    },\n    {\n      \"codigo\": \"100002\",\n      \"nombre\": \"PARKING INTERNATIONAL - PARKING INTERNAT\"\n    },\n    {\n      \"codigo\": \"100003\",\n      \"nombre\": \"DISTRITO CAPITAL/GEB -DEMOCRATIZACION II\"\n    },\n    {\n      \"codigo\": \"100004\",\n      \"nombre\": \"TRANSPORTES VIGIA - OPTIMUS\"\n    },\n    {\n      \"codigo\": \"100005\",\n      \"nombre\": \"AMAREY - ZENITH\"\n    },\n    {\n      \"codigo\": \"100006\",\n      \"nombre\": \"COMPUNET - PIXEL\"\n    },\n    {\n      \"codigo\": \"100007\",\n      \"nombre\": \"LA 14 - CIELO\"\n    },\n    {\n      \"codigo\": \"100008\",\n      \"nombre\": \"TU PROGRESO - TEMPUS\"\n    },\n    {\n      \"codigo\": \"100009\",\n      \"nombre\": \"CARGO MASTER - MERCURI\"\n    },\n    {\n      \"codigo\": \"100010\",\n      \"nombre\": \"ABACUS - HOTELES-MEMPHIS\"\n    },\n    {\n      \"codigo\": \"100011\",\n      \"nombre\": \"REPREMUNDO - SIERRA\"\n    },\n    {\n      \"codigo\": \"100012\",\n      \"nombre\": \"COMAPAN - MILL\"\n    },\n    {\n      \"codigo\": \"100013\",\n      \"nombre\": \"GLOBAL SEGUROS - COSMOS\"\n    },\n    {\n      \"codigo\": \"100014\",\n      \"nombre\": \"OKIANUS - JOULE\"\n    },\n    {\n      \"codigo\": \"100015\",\n      \"nombre\": \"BANCOMPARTIR - NASA\"\n    },\n    {\n      \"codigo\": \"100016\",\n      \"nombre\": \"ENERTOLIMA - PIJAO\"\n    },\n    {\n      \"codigo\": \"100017\",\n      \"nombre\": \"RENTING AUTOMAYOR - METEORO\"\n    },\n    {\n      \"codigo\": \"100018\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA - NAZCA\"\n    },\n    {\n      \"codigo\": \"100019\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA - CALIDA-INKA\"\n    },\n    {\n      \"codigo\": \"100020\",\n      \"nombre\": \"INVERLINK ESTRUCTURAS INMOBILIARIAS\"\n    },\n    {\n      \"codigo\": \"100021\",\n      \"nombre\": \"AGENCIA DE ADUANAS SIACO NIVEL 1\"\n    },\n    {\n      \"codigo\": \"100022\",\n      \"nombre\": \"CHSM - LEGACY\"\n    },\n    {\n      \"codigo\": \"100023\",\n      \"nombre\": \"PROYECTO NASH SAS\"\n    },\n    {\n      \"codigo\": \"100024\",\n      \"nombre\": \"PASA- CARAMBOLA\"\n    },\n    {\n      \"codigo\": \"100025\",\n      \"nombre\": \"BTG - CRONOS\"\n    },\n    {\n      \"codigo\": \"100026\",\n      \"nombre\": \"RECAUDO BOGOTA\"\n    },\n    {\n      \"codigo\": \"100027\",\n      \"nombre\": \"ECOPETROL - JUSTINE\"\n    },\n    {\n      \"codigo\": \"100028\",\n      \"nombre\": \"MANUFACTURAS Y PROC- ROCKY\"\n    },\n    {\n      \"codigo\": \"100029\",\n      \"nombre\": \"DESARROLLO SERNA - HESTIA II\"\n    },\n    {\n      \"codigo\": \"100030\",\n      \"nombre\": \"ISA - RAM\"\n    },\n    {\n      \"codigo\": \"100031\",\n      \"nombre\": \"PRABYC -VITTA\"\n    },\n    {\n      \"codigo\": \"100032\",\n      \"nombre\": \"VELUM - VENTURES\"\n    },\n    {\n      \"codigo\": \"100033\",\n      \"nombre\": \"ALMACENES EXITO - BARTER\"\n    },\n    {\n      \"codigo\": \"100034\",\n      \"nombre\": \"CREARMIENTOS -SUNSHINE\"\n    },\n    {\n      \"codigo\": \"100035\",\n      \"nombre\": \"ALIMENTOS CONCENTRADOS RAZA - LAIKA\"\n    },\n    {\n      \"codigo\": \"100036\",\n      \"nombre\": \"INFRANCO - QUARTZ\"\n    },\n    {\n      \"codigo\": \"100037\",\n      \"nombre\": \"ALDEA PROYECTOS - CÓLON\"\n    },\n    {\n      \"codigo\": \"100038\",\n      \"nombre\": \"EMPRESAS PUBLICAS MEDELLIN- ZEUS\"\n    },\n    {\n      \"codigo\": \"100039\",\n      \"nombre\": \"RIVERCITY - ARTIS\"\n    },\n    {\n      \"codigo\": \"100040\",\n      \"nombre\": \"EMBOTELLAMIENTO - TUNDRA\"\n    },\n    {\n      \"codigo\": \"100041\",\n      \"nombre\": \"CENIT - NEPTUNO\"\n    },\n    {\n      \"codigo\": \"100042\",\n      \"nombre\": \"DOÑA JUANA - ÓSCAR\"\n    },\n    {\n      \"codigo\": \"100043\",\n      \"nombre\": \"HOTELES COSMOS - MARS\"\n    },\n    {\n      \"codigo\": \"100044\",\n      \"nombre\": \"GEB - PURA VIDA\"\n    },\n    {\n      \"codigo\": \"100045\",\n      \"nombre\": \"VELUM VENTURES SAS\"\n    },\n    {\n      \"codigo\": \"100046\",\n      \"nombre\": \"PACTIA - LAGER\"\n    },\n    {\n      \"codigo\": \"100047\",\n      \"nombre\": \"CETSA - CUORE\"\n    },\n    {\n      \"codigo\": \"100048\",\n      \"nombre\": \"FIDEICOMISO ABACUS OXO 69\"\n    },\n    {\n      \"codigo\": \"100049\",\n      \"nombre\": \"EDYFICAR - MANCHESTER\"\n    },\n    {\n      \"codigo\": \"100050\",\n      \"nombre\": \"BANCOMPARTIR - MANCHESTER\"\n    },\n    {\n      \"codigo\": \"100051\",\n      \"nombre\": \"BVC - DECEVAL\"\n    },\n    {\n      \"codigo\": \"100052\",\n      \"nombre\": \"ZEUSS - CARIOCA\"\n    },\n    {\n      \"codigo\": \"100053\",\n      \"nombre\": \"BRIGARD - ECOPETROL\"\n    },\n    {\n      \"codigo\": \"100054\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA- F1 COSTA RICA\"\n    },\n    {\n      \"codigo\": \"100055\",\n      \"nombre\": \"CRCC - ASCENSO II\"\n    },\n    {\n      \"codigo\": \"100056\",\n      \"nombre\": \"CCDC - ASCENSO II\"\n    },\n    {\n      \"codigo\": \"100057\",\n      \"nombre\": \"SERLEFIN - COLLETIO\"\n    },\n    {\n      \"codigo\": \"100058\",\n      \"nombre\": \"TGI -\"\n    },\n    {\n      \"codigo\": \"100059\",\n      \"nombre\": \"CRCC - ASCENSO III\"\n    },\n    {\n      \"codigo\": \"100060\",\n      \"nombre\": \"PLANETA RICA - FOUR REASONS GRIZZLY\"\n    },\n    {\n      \"codigo\": \"100061\",\n      \"nombre\": \"RIOPAILA - CELIA\"\n    },\n    {\n      \"codigo\": \"100062\",\n      \"nombre\": \"GRUPO GRASCO - BLUE\"\n    },\n    {\n      \"codigo\": \"100063\",\n      \"nombre\": \"ZEUSS - TIGER\"\n    },\n    {\n      \"codigo\": \"100064\",\n      \"nombre\": \"CLINICA MEDICOS SAS - AKOS\"\n    },\n    {\n      \"codigo\": \"100065\",\n      \"nombre\": \"QUIMICA INTERNACIONAL - PIER\"\n    },\n    {\n      \"codigo\": \"100066\",\n      \"nombre\": \"GRUPO ENERGIA DE BOGOTA - CERES\"\n    },\n    {\n      \"codigo\": \"100067\",\n      \"nombre\": \"ALIANZA - FID. CONDOR\"\n    },\n    {\n      \"codigo\": \"100068\",\n      \"nombre\": \"R&R LUBRICANTES - SAN FRANCISCO\"\n    },\n    {\n      \"codigo\": \"100069\",\n      \"nombre\": \"EQUION - EDEN\"\n    },\n    {\n      \"codigo\": \"100070\",\n      \"nombre\": \"INGENIO LA CABAÑA - JET\"\n    },\n    {\n      \"codigo\": \"100071\",\n      \"nombre\": \"COMPAÑIA ENVASADORA DEL ATLANTIC - OCEAN\"\n    },\n    {\n      \"codigo\": \"100072\",\n      \"nombre\": \"FDN - ATENEA\"\n    },\n    {\n      \"codigo\": \"100073\",\n      \"nombre\": \"LEVAPAN - GEMA\"\n    },\n    {\n      \"codigo\": \"100074\",\n      \"nombre\": \"GEB -NAZCA IV\"\n    },\n    {\n      \"codigo\": \"100075\",\n      \"nombre\": \"OMNILATAM-\"\n    },\n    {\n      \"codigo\": \"100076\",\n      \"nombre\": \"MOVICH - HIPNOS\"\n    },\n    {\n      \"codigo\": \"100077\",\n      \"nombre\": \"ABACUS- SUNRISE\"\n    },\n    {\n      \"codigo\": \"100078\",\n      \"nombre\": \"INVERLINK INVERSIONES ALTERNATIVAS\"\n    },\n    {\n      \"codigo\": \"100079\",\n      \"nombre\": \"FIDEICOMISO ABACUS - OXX CARTAGENA\"\n    },\n    {\n      \"codigo\": \"100080\",\n      \"nombre\": \"FIDEICOMISO ABACUS - OXO 69\"\n    },\n    {\n      \"codigo\": \"100081\",\n      \"nombre\": \"FIDEICOMISO ABACUS - OXO BARRANQUILLA\"\n    },\n    {\n      \"codigo\": \"100082\",\n      \"nombre\": \"BVC - FUSION BOLSAS\"\n    },\n    {\n      \"codigo\": \"100083\",\n      \"nombre\": \"CREZCAMOS - JACK\"\n    },\n    {\n      \"codigo\": \"100084\",\n      \"nombre\": \"GLOBAL SEGUROS -BLACKBOARD\"\n    },\n    {\n      \"codigo\": \"100085\",\n      \"nombre\": \"INCAUCA DALIA\"\n    },\n    {\n      \"codigo\": \"100086\",\n      \"nombre\": \"PROTECCION / ARTEMISA I\"\n    },\n    {\n      \"codigo\": \"100087\",\n      \"nombre\": \"CEMENTOS ARGOS - CONSTATINO\"\n    },\n    {\n      \"codigo\": \"100088\",\n      \"nombre\": \"GRUPO CEZCAMOS -\"\n    },\n    {\n      \"codigo\": \"100089\",\n      \"nombre\": \"GEB /CERES\"\n    },\n    {\n      \"codigo\": \"100090\",\n      \"nombre\": \"EPM - ORION\"\n    },\n    {\n      \"codigo\": \"100091\",\n      \"nombre\": \"TREE CAPITAL -JACK 2.0\"\n    },\n    {\n      \"codigo\": \"100092\",\n      \"nombre\": \"AGUACLARA CAPITAL SAS - JACK 2.0\"\n    },\n    {\n      \"codigo\": \"100093\",\n      \"nombre\": \"INVERSIONES NIOTRESS - JACK 2.0\"\n    },\n    {\n      \"codigo\": \"100094\",\n      \"nombre\": \"GEB - TAMARINDO\"\n    },\n    {\n      \"codigo\": \"100095\",\n      \"nombre\": \"EPM -ORION\"\n    },\n    {\n      \"codigo\": \"100096\",\n      \"nombre\": \"PROTECCION -ARTEMISA 3.0\"\n    },\n    {\n      \"codigo\": \"100097\",\n      \"nombre\": \"SYAC-CONNECT\"\n    },\n    {\n      \"codigo\": \"100098\",\n      \"nombre\": \"VARTA - COLSUBSIDIO\"\n    },\n    {\n      \"codigo\": \"100099\",\n      \"nombre\": \"CREDICORP- SEN\"\n    },\n    {\n      \"codigo\": \"100100\",\n      \"nombre\": \"GEB/NAZCA V\"\n    },\n    {\n      \"codigo\": \"100101\",\n      \"nombre\": \"BANCOLOMBIA/ASFALIS\"\n    },\n    {\n      \"codigo\": \"100102\",\n      \"nombre\": \"HIDROTECNIK -VETEL\"\n    },\n    {\n      \"codigo\": \"100103\",\n      \"nombre\": \"TRANSPORTES VIGIA - PRIME\"\n    },\n    {\n      \"codigo\": \"100104\",\n      \"nombre\": \"FINANZAUTO - MONZA EQUIRENT\"\n    },\n    {\n      \"codigo\": \"100105\",\n      \"nombre\": \"ITAU - SILK\"\n    },\n    {\n      \"codigo\": \"100106\",\n      \"nombre\": \"ECOPETROL - ENCANTO\"\n    },\n    {\n      \"codigo\": \"100107\",\n      \"nombre\": \"CENIT - AMBERES\"\n    },\n    {\n      \"codigo\": \"100108\",\n      \"nombre\": \"AGORA - GRASCO\"\n    },\n    {\n      \"codigo\": \"100109\",\n      \"nombre\": \"GRUPO ENERGIA BOGOTA - ROGER\"\n    },\n    {\n      \"codigo\": \"100110\",\n      \"nombre\": \"INVECSA - QBCO\"\n    },\n    {\n      \"codigo\": \"100111\",\n      \"nombre\": \"INVERSIONES SOMONTANO - PAJARES\"\n    },\n    {\n      \"codigo\": \"100112\",\n      \"nombre\": \"LEGRAND -EIRA\"\n    },\n    {\n      \"codigo\": \"100113\",\n      \"nombre\": \"TREE CAPITAL - JACK 3.0\"\n    },\n    {\n      \"codigo\": \"100114\",\n      \"nombre\": \"HOCOL - CASTELLO\"\n    },\n    {\n      \"codigo\": \"100115\",\n      \"nombre\": \"INVERSIONES JMH S.A.S - EMPORIO\"\n    },\n    {\n      \"codigo\": \"100116\",\n      \"nombre\": \"AMAREY - APOLLO\"\n    },\n    {\n      \"codigo\": \"100117\",\n      \"nombre\": \"INCAUCA - SAO PAULO\"\n    },\n    {\n      \"codigo\": \"100118\",\n      \"nombre\": \"INVERSORA LOS CORALES-KUALA\"\n    },\n    {\n      \"codigo\": \"100119\",\n      \"nombre\": \"GRUPO TRINITY - ALMAVIVA\"\n    },\n    {\n      \"codigo\": \"100120\",\n      \"nombre\": \"GRUPO VARDI - SKYLINE\"\n    },\n    {\n      \"codigo\": \"100121\",\n      \"nombre\": \"EVOAGRO - SATURNO\"\n    },\n    {\n      \"codigo\": \"100122\",\n      \"nombre\": \"ITS - OPTIMUS\"\n    },\n    {\n      \"codigo\": \"100123\",\n      \"nombre\": \"POLLO FIESTA - FALCON\"\n    },\n    {\n      \"codigo\": \"100124\",\n      \"nombre\": \"PETROBRAS - ATLAS\"\n    },\n    {\n      \"codigo\": \"100125\",\n      \"nombre\": \"SURA - POLARIS\"\n    },\n    {\n      \"codigo\": \"100126\",\n      \"nombre\": \"UN SOLO PROVEEDOR - BREAD\"\n    },\n    {\n      \"codigo\": \"100127\",\n      \"nombre\": \"ACEROS AREQUIPA - CORINTO\"\n    },\n    {\n      \"codigo\": \"100128\",\n      \"nombre\": \"FDN - COOPER\"\n    },\n    {\n      \"codigo\": \"100129\",\n      \"nombre\": \"GOLDMAN SACHS-DENVER\"\n    },\n    {\n      \"codigo\": \"100130\",\n      \"nombre\": \"UNILEVER\"\n    },\n    {\n      \"codigo\": \"500\",\n      \"nombre\": \"PROYECTOS EXTERIOR\"\n    },\n    {\n      \"codigo\": \"500001\",\n      \"nombre\": \"ZAZ FOOD STORES - FLASH\"\n    },\n    {\n      \"codigo\": \"500002\",\n      \"nombre\": \"JOHN LAING - RUTA DEL CACAO JUMBO\"\n    },\n    {\n      \"codigo\": \"500003\",\n      \"nombre\": \"HYBRITEC ECOSOLAR - ALVA\"\n    },\n    {\n      \"codigo\": \"500004\",\n      \"nombre\": \"CORPBANCA HELM - ITAU CORREDOR SEGUROS\"\n    },\n    {\n      \"codigo\": \"500005\",\n      \"nombre\": \"OFFICE DEPOT - INK\"\n    },\n    {\n      \"codigo\": \"500006\",\n      \"nombre\": \"ABERTIS - ACCENORTE\"\n    },\n    {\n      \"codigo\": \"500007\",\n      \"nombre\": \"ROADIS PSP - VALDES\"\n    },\n    {\n      \"codigo\": \"500008\",\n      \"nombre\": \"VTTI - PUERTO BAHÍA TRITON\"\n    },\n    {\n      \"codigo\": \"500009\",\n      \"nombre\": \"JHON LAING - MAR II\"\n    },\n    {\n      \"codigo\": \"500010\",\n      \"nombre\": \"CREATRUST VIVA - GREEN III MEXICO\"\n    },\n    {\n      \"codigo\": \"500011\",\n      \"nombre\": \"LAING INVESTMENST- CACAO\"\n    },\n    {\n      \"codigo\": \"500012\",\n      \"nombre\": \"INVERSIONES VIVA LTDA - GREEN III MEXICO\"\n    },\n    {\n      \"codigo\": \"500013\",\n      \"nombre\": \"IMAP\"\n    },\n    {\n      \"codigo\": \"500014\",\n      \"nombre\": \"GAS NATURAL DE LIMA\"\n    },\n    {\n      \"codigo\": \"500015\",\n      \"nombre\": \"LOGANVILLE S.A - EMU\"\n    },\n    {\n      \"codigo\": \"500016\",\n      \"nombre\": \"PUERTO CALDERA - ALEJANDRIA\"\n    },\n    {\n      \"codigo\": \"500017\",\n      \"nombre\": \"NEW TRANSPORT - NEW TRANSPORT\"\n    },\n    {\n      \"codigo\": \"500018\",\n      \"nombre\": \"SAN DIEGO - NAVI\"\n    },\n    {\n      \"codigo\": \"500019\",\n      \"nombre\": \"NORTHLAND POWER - THOR\"\n    },\n    {\n      \"codigo\": \"500020\",\n      \"nombre\": \"INMOBILIARIA DON ANTONIO - FLASH II\"\n    },\n    {\n      \"codigo\": \"500021\",\n      \"nombre\": \"INVERSIONES VIVA\"\n    },\n    {\n      \"codigo\": \"500022\",\n      \"nombre\": \"NUEVO AGORA - SAPIENS\"\n    },\n    {\n      \"codigo\": \"500023\",\n      \"nombre\": \"ALERE - EMU\"\n    },\n    {\n      \"codigo\": \"500024\",\n      \"nombre\": \"SOINT -MILE\"\n    },\n    {\n      \"codigo\": \"500025\",\n      \"nombre\": \"INTERENERGY - ORIÓN\"\n    },\n    {\n      \"codigo\": \"500026\",\n      \"nombre\": \"LAING INVESTMENTS - CALIMA\"\n    },\n    {\n      \"codigo\": \"500027\",\n      \"nombre\": \"CEMCAL - NEW YORK\"\n    },\n    {\n      \"codigo\": \"500028\",\n      \"nombre\": \"MOLINOS DEL SALVADOR- WEIZEN\"\n    },\n    {\n      \"codigo\": \"500029\",\n      \"nombre\": \"LAING INVESMENTS - CALIMA\"\n    },\n    {\n      \"codigo\": \"500030\",\n      \"nombre\": \"CEMEX LATAM - VESUDIO\"\n    },\n    {\n      \"codigo\": \"500031\",\n      \"nombre\": \"GRUPO ESTRELLA - ATRIA\"\n    },\n    {\n      \"codigo\": \"500032\",\n      \"nombre\": \"GRUPO CALESA - VALENCIA\"\n    },\n    {\n      \"codigo\": \"500033\",\n      \"nombre\": \"EGE HAINA - ORIóN\"\n    },\n    {\n      \"codigo\": \"500034\",\n      \"nombre\": \"INDUSTRIAS ALES Y DANEC - GUINEA\"\n    },\n    {\n      \"codigo\": \"500035\",\n      \"nombre\": \"GRUPO APC - CATAN\"\n    },\n    {\n      \"codigo\": \"500036\",\n      \"nombre\": \"CYMI - WEST\"\n    },\n    {\n      \"codigo\": \"500037\",\n      \"nombre\": \"ITAU CORPBANCA - TAURO\"\n    },\n    {\n      \"codigo\": \"500038\",\n      \"nombre\": \"GRUPO MAGNA - PREMIER I - SILVERBACK\"\n    },\n    {\n      \"codigo\": \"500039\",\n      \"nombre\": \"GMG HOLDING SA- TIBET\"\n    },\n    {\n      \"codigo\": \"500040\",\n      \"nombre\": \"GRUPO MAGANA - PREMIER - HIGHWAY\"\n    },\n    {\n      \"codigo\": \"500041\",\n      \"nombre\": \"VALLEY GROUP - LEDA\"\n    },\n    {\n      \"codigo\": \"500042\",\n      \"nombre\": \"DESARROLLOS COMERCIALES - PLATZ\"\n    },\n    {\n      \"codigo\": \"500043\",\n      \"nombre\": \"ALERE - LA FAZENDA\"\n    },\n    {\n      \"codigo\": \"500044\",\n      \"nombre\": \"GRUPO MAGNA - PACIFIC RIM\"\n    },\n    {\n      \"codigo\": \"500045\",\n      \"nombre\": \"JAGUAR ENERGY GUATEMALA - MAYA\"\n    },\n    {\n      \"codigo\": \"500046\",\n      \"nombre\": \"CONSORCIO MINERO DOMINICANO - CONDOR\"\n    },\n    {\n      \"codigo\": \"500047\",\n      \"nombre\": \"BANCO DE AMERICA CENTRAL -ARKADIA\"\n    },\n    {\n      \"codigo\": \"500048\",\n      \"nombre\": \"AJOVER DARNEL- RESIN\"\n    },\n    {\n      \"codigo\": \"500049\",\n      \"nombre\": \"DIACO - STARK\"\n    },\n    {\n      \"codigo\": \"500050\",\n      \"nombre\": \"NEW TRANSPORT - LACUS\"\n    },\n    {\n      \"codigo\": \"500051\",\n      \"nombre\": \"BANCO G&T BAC -VESTA\"\n    },\n    {\n      \"codigo\": \"500052\",\n      \"nombre\": \"FYNERTY PROPERTIES CORP - PORTLAND\"\n    },\n    {\n      \"codigo\": \"500053\",\n      \"nombre\": \"BCC CIBELES - MORGAN\"\n    },\n    {\n      \"codigo\": \"500054\",\n      \"nombre\": \"SOC PUERTO CALDERA - ALEJANDRIA II\"\n    },\n    {\n      \"codigo\": \"500055\",\n      \"nombre\": \"KEY HOLDING - ELIPSE\"\n    },\n    {\n      \"codigo\": \"500056\",\n      \"nombre\": \"AD RETAIL- ESPARTA\"\n    },\n    {\n      \"codigo\": \"500057\",\n      \"nombre\": \"COMECA- EPIC\"\n    },\n    {\n      \"codigo\": \"500058\",\n      \"nombre\": \"HIDROTECNICK - VETTEL\"\n    },\n    {\n      \"codigo\": \"500059\",\n      \"nombre\": \"PVC GERFOR -NERON\"\n    },\n    {\n      \"codigo\": \"500060\",\n      \"nombre\": \"BANCO PICHINCHA-YAKARTA\"\n    },\n    {\n      \"codigo\": \"500061\",\n      \"nombre\": \"ALIMENTOS NUTRION-NEBRASKA\"\n    },\n    {\n      \"codigo\": \"500062\",\n      \"nombre\": \"MUNICIPALIDAD LIMA-ROYAL\"\n    },\n    {\n      \"codigo\": \"500063\",\n      \"nombre\": \"ALIMENTOS NUTRION - NEBRASKA\"\n    },\n    {\n      \"codigo\": \"500064\",\n      \"nombre\": \"RIOPAILA-CELIA II\"\n    },\n    {\n      \"codigo\": \"500065\",\n      \"nombre\": \"KIONETWORKS - BYTE\"\n    },\n    {\n      \"codigo\": \"500066\",\n      \"nombre\": \"TWEET DALE -ASTURIAS\"\n    },\n    {\n      \"codigo\": \"500067\",\n      \"nombre\": \"AGUA IMARA ACA - INTERLAGOS\"\n    },\n    {\n      \"codigo\": \"500068\",\n      \"nombre\": \"GRUPO DIANA - CAMINO CAPITAL MANAGEMENT\"\n    },\n    {\n      \"codigo\": \"500069\",\n      \"nombre\": \"SQF - PLATZ\"\n    },\n    {\n      \"codigo\": \"500070\",\n      \"nombre\": \"GELITA - BLOOM\"\n    },\n    {\n      \"codigo\": \"500071\",\n      \"nombre\": \"SAN SOUCI HOLDING - CRUISE\"\n    },\n    {\n      \"codigo\": \"500072\",\n      \"nombre\": \"MACQUARIE -OSAKA\"\n    },\n    {\n      \"codigo\": \"500073\",\n      \"nombre\": \"CONTUGAS -NAZCA VII\"\n    },\n    {\n      \"codigo\": \"500074\",\n      \"nombre\": \"HERNANDO CAICEDO - BOOM\"\n    },\n    {\n      \"codigo\": \"500075\",\n      \"nombre\": \"TERRA - HOLT\"\n    },\n    {\n      \"codigo\": \"500076\",\n      \"nombre\": \"PALOGORDO - ARPINO\"\n    },\n    {\n      \"codigo\": \"500077\",\n      \"nombre\": \"BAY HARBOR\"\n    },\n    {\n      \"codigo\": \"500078\",\n      \"nombre\": \"BOTERO - DESPEGAR\"\n    },\n    {\n      \"codigo\": \"500079\",\n      \"nombre\": \"LUFUSA - SPARK\"\n    },\n    {\n      \"codigo\": \"500080\",\n      \"nombre\": \"COURSE2 ENERGY - VORTEX\"\n    },\n    {\n      \"codigo\": \"500081\",\n      \"nombre\": \"NETX TRADING IMPORT - BALBOA\"\n    },\n    {\n      \"codigo\": \"500082\",\n      \"nombre\": \"SAAM - PUERTO CALDERA - ALEJANDRIA III\"\n    },\n    {\n      \"codigo\": \"500083\",\n      \"nombre\": \"NORDFUND - LAS VEGAS\"\n    },\n    {\n      \"codigo\": \"500084\",\n      \"nombre\": \"LUMIRADX- VITRO\"\n    },\n    {\n      \"codigo\": \"500085\",\n      \"nombre\": \"HELM HOLDINGS-ORANGE\"\n    },\n    {\n      \"codigo\": \"500086\",\n      \"nombre\": \"ESTRATEGIA\"\n    },\n    {\n      \"codigo\": \"500087\",\n      \"nombre\": \"TOPMANAGEMENT- COLON\"\n    },\n    {\n      \"codigo\": \"700\",\n      \"nombre\": \"CENTRO AMERICA - MM\"\n    },\n    {\n      \"codigo\": \"700001\",\n      \"nombre\": \"MERCADEO MM\"\n    },\n    {\n      \"codigo\": \"800\",\n      \"nombre\": \"CENTRO AMERICA - SC\"\n    },\n    {\n      \"codigo\": \"800001\",\n      \"nombre\": \"MERCADEO SC\"\n    },\n    {\n      \"codigo\": \"900\",\n      \"nombre\": \"GESTION DE INVERSIONES\"\n    }\n]\n\nreturn [\n  {\n    json: {\n      centroCosto\n    }\n  }\n]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        520,
        -560
      ],
      "id": "07139999-6e78-4806-86af-9f81f29ac40f",
      "name": "listacc1"
    },
    {
      "parameters": {
        "jsCode": "// --- Función para normalizar texto (quitar tildes y caracteres especiales) ---\nfunction normalizarTexto(texto) {\n  if (!texto) return '';\n  return texto\n    .normalize(\"NFD\") // Separa las letras de los acentos\n    .replace(/[\\u0300-\\u036f]/g, \"\") // Quita los acentos\n    .toUpperCase(); // Convierte a mayúsculas\n}\n\n// --- Leer datos de TODOS los nodos anteriores ---\nconst personas = $node[\"Lista Analistas CC1\"].json.personas;\nconst centrosCosto = $node[\"listacc1\"].json.centroCosto;\nconst nombrePDF = $node[\"Edición IMG\"].json.NOMBRE_PDF;\nconst carpetaAnalista = $node[\"Edición IMG\"].json.carpetaAnalista;\n\n// --- Lógica de Búsqueda por Puntuación ---\n\nconst palabrasIgnoradas = ['LA', 'EL', 'DE', 'Y', 'A', 'O', 'LOS', 'LAS'];\nconst palabrasClavePDF = normalizarTexto(nombrePDF)\n  .replace(/\\.PDF/i, '')\n  .replace(/[^A-Z\\s]/g, '')\n  .trim()\n  .split(/\\s+/)\n  .filter(p => p.length > 2 && !palabrasIgnoradas.includes(p));\n\nconst centrosConPuntaje = centrosCosto.map(centro => {\n  let score = 0;\n  const palabrasCentroCosto = normalizarTexto(centro.nombre)\n    .replace(/[^A-Z\\s]/g, '')\n    .trim()\n    .split(/\\s+/);\n\n  palabrasClavePDF.forEach(palabraPDF => {\n    if (palabrasCentroCosto.includes(palabraPDF)) {\n      score += palabraPDF.length;\n    }\n  });\n  return { ...centro, score };\n});\n\nconst mejorCoincidencia = centrosConPuntaje.reduce((mejor, actual) => {\n  return (actual.score > mejor.score) ? actual : mejor;\n}, { score: 0 });\n\n// --- Lógica de Respaldo ---\nlet centroCostoFinal = null;\nconst centroCostoPrincipal = centrosCosto.find(c => c.codigo === \"001001\");\n\nif (mejorCoincidencia.score > 0) {\n  centroCostoFinal = mejorCoincidencia;\n} else {\n  const nombreCarpetaNormalizado = normalizarTexto(carpetaAnalista);\n  if (nombreCarpetaNormalizado === 'DHAYRA BEDOYA') {\n    centroCostoFinal = centroCostoPrincipal;\n  } else {\n    // Búsqueda usando el nombre normalizado\n    const analistaEncontrado = personas.find(p => normalizarTexto(p.nombre).includes(nombreCarpetaNormalizado));\n    \n    if (analistaEncontrado) {\n      const inicialesAnalista = normalizarTexto(analistaEncontrado.iniciales);\n      const centroPorIniciales = centrosCosto.find(c => {\n        const palabrasNombre = normalizarTexto(c.nombre).split(' ');\n        return palabrasNombre.some(palabra =>\n          palabra.length >= 2 && inicialesAnalista.startsWith(palabra)\n        );\n      });\n      centroCostoFinal = centroPorIniciales || centroCostoPrincipal;\n    } else {\n      centroCostoFinal = centroCostoPrincipal;\n    }\n  }\n}\n\n// --- Armar la respuesta ---\nreturn [\n  {\n    json: {\n      nombrePDF,\n      carpetaAnalista,\n      centroCostoCoincidente: centroCostoFinal.codigo,\n      centroCostoCoincidenten: centroCostoFinal.nombre,\n      //personas,\n      //centrosCosto\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        720,
        -560
      ],
      "id": "1827dfa7-f326-4916-baa5-4678cc97fb27",
      "name": "procesado analista_carpeta1"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Listar archivos6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me1": {
      "main": [
        []
      ]
    },
    "PDF_Base": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts1": {
      "main": [
        [
          {
            "node": "Lista Analistas CC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI - PDF1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Depuración_Info1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename1": {
      "main": [
        [
          {
            "node": "Set Datos Completos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing5": {
      "main": [
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Datos Completos1": {
      "main": [
        [
          {
            "node": "carga de datos a lista Facturas",
            "type": "main",
            "index": 0
          },
          {
            "node": "Excel Inverlink",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edición IMG",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Validar extractos",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edición XLSX",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Descarga Imagen": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Descarga pdf": {
      "main": [
        [
          {
            "node": "PDF_Base",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edición IMG": {
      "main": [
        [
          {
            "node": "Lista Analistas CC1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Descarga xlsx": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edición XLSX": {
      "main": [
        [
          {
            "node": "Descarga xlsx",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edición PDF": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        []
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Extract UBER",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Cabify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Cabify": {
      "main": [
        [
          {
            "node": "Formato Cabify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract UBER": {
      "main": [
        [
          {
            "node": "Format UBER",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format UBER": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        []
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Obtener identificación img",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Depuración_Info1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prompts1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "listacuenta51": {
      "main": [
        [
          {
            "node": "Define Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formato Cabify": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        []
      ]
    },
    "Listar archivos6": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar extractos": {
      "main": [
        [],
        [
          {
            "node": "Edición PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define Prompt": {
      "main": [
        [
          {
            "node": "AI - PDF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Extraer folders mes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extraer folders mes": {
      "main": [
        [
          {
            "node": "Mes seleccionado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mes seleccionado": {
      "main": [
        [
          {
            "node": "obtener mes seleccionado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar Folder mes seleccionado": {
      "main": [
        [
          {
            "node": "Listar sub folders mes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar sub folders mes": {
      "main": [
        [
          {
            "node": "Validar folder facturas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar folder facturas": {
      "main": [
        [
          {
            "node": "Listar analistas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar analistas": {
      "main": [
        [
          {
            "node": "Separar analistas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Seleccionar analista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seleccionar analista": {
      "main": [
        [
          {
            "node": "selección analista",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar analistas1": {
      "main": [
        [
          {
            "node": "Separar datos de archivos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Descarga pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts": {
      "main": [
        [
          {
            "node": "promp json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "promp json": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lista Analistas CC": {
      "main": [
        [
          {
            "node": "listacc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Excel Inverlink": {
      "main": [
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener identificación img": {
      "main": [
        [
          {
            "node": "Rename1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Separar datos de archivos": {
      "main": [
        [
          {
            "node": "Ajuste de datos separados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Separar analistas": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "selección analista": {
      "main": [
        [
          {
            "node": "Listar analistas1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ajuste de datos separados": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Enviar datos imagen fallida",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "obtener mes seleccionado": {
      "main": [
        [
          {
            "node": "Listar Folder mes seleccionado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "extraer mes enviado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extraer mes enviado": {
      "main": [
        [
          {
            "node": "Unir mes",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Unir mes": {
      "main": [
        []
      ]
    },
    "Enviar datos imagen fallida": {
      "main": [
        [
          {
            "node": "Correo imagen fallida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Correo imagen fallida": {
      "main": [
        []
      ]
    },
    "carga de datos a lista Facturas1": {
      "main": [
        []
      ]
    },
    "listacc": {
      "main": [
        [
          {
            "node": "procesado analista_carpeta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "procesado analista_carpeta": {
      "main": [
        [
          {
            "node": "listacuenta51",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lista Analistas CC1": {
      "main": [
        [
          {
            "node": "listacc1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "listacc1": {
      "main": [
        [
          {
            "node": "procesado analista_carpeta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "procesado analista_carpeta1": {
      "main": [
        [
          {
            "node": "Descarga Imagen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "5f15a498-4e33-4a19-a266-24d72335f393",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2025-06-03T20:36:49.469Z",
      "updatedAt": "2025-06-03T20:36:49.469Z",
      "id": "E9oSeWOtAViNQ19X",
      "name": "Inverlink"
    },
    {
      "createdAt": "2025-06-21T20:39:27.636Z",
      "updatedAt": "2025-06-21T20:39:27.636Z",
      "id": "XxrfLEy8SmG2KtL4",
      "name": "OCR"
    },
    {
      "createdAt": "2025-06-21T20:39:27.639Z",
      "updatedAt": "2025-06-21T20:39:27.639Z",
      "id": "wClzvw7IdVzfaWq7",
      "name": "Claude"
    }
  ]
}